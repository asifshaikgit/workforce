{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Work Force APIs",
    "description": "<h2>Work Force APIs Document Generated by the <b>Codetru</b> Development Team</h2><h3>Key Points</h3> <ul><li>Boolean: true or false / 0 or 1</li><li>Integer: Numbers only</li><li>Alphanumeric: Number and Alphabet</li><li>Date Format: YYYY-MM-DD</li><li>Not Mandatory: If you want to remove or leave blank</li><li>document_id: From Common Document Upload API</li><li>Time: HH:MM</li><li>request_id: is always {{$guid}}</li></ul><p>For more information on the API endpoints, please visit <a href='https://workforce-dev-api.codetru.org/api/v1/document/'>Workforce</a><ul><li><a href='https://workforce-dev-api.codetru.org/api/v1/tenants/'><b>Tenant Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/authentication/'><b>Authentication Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/employee/'><b>Employee Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/configuration/'><b>Configuration Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/placement/'><b>Placements Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/employee-self-service/'><b>Employee Self Service</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/timesheet/'><b>Timesheet</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/payrolls/'><b>Payrolls</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/expense-management/'><b>Expense Management</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/dashboard/'><b>Dashboard</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/exports/'><b>Export</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/imports/'><b>Imports</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/companies/'><b>Companies</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/immigrations/'><b>Immigrations</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/ocr/'><b>OCR</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/ledgers/'><b>Ledgers</b></a></li></ul>.</p>"
  },
  "host": "workforce-dev-api.codetru.org",
  "basePath": "/api/v1/",
  "tags": [],
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your access token in the format 'Bearer &lt;token&gt;'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/dashboard/lca": {
      "get": {
        "tags": ["dashboard"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": false,
            "description": "start_date",
            "schema": {
              "type": "object",
              "description": "start_date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "description": "end_date",
            "schema": {
              "type": "object",
              "description": "end_date"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/store-update": {
      "post": {
        "tags": ["immigration case types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_if__id_exists_update_immigration_case_types"
                },
                "name": {
                  "example": "@_name_of_document"
                },
                "is_active": {
                  "example": "@Boolean"
                },
                "description": {
                  "example": "@_description_for_the_document"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/listing": {
      "get": {
        "tags": ["immigration case types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/dropdown": {
      "get": {
        "tags": ["immigration case types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/updateStatus": {
      "put": {
        "tags": ["immigration case types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_immigration_case_types_id"
                },
                "is_active": {
                  "example": "@Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/destroy": {
      "delete": {
        "tags": ["immigration case types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_immigration_case_types_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/store-update": {
      "post": {
        "tags": ["immigration document types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_if__id_exists_update_immigration_document_types"
                },
                "name": {
                  "example": "@_name_of_document"
                },
                "is_active": {
                  "example": "@Boolean"
                },
                "description": {
                  "example": "@_description_for_the_document"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/listing": {
      "get": {
        "tags": ["immigration document types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/dropdown": {
      "get": {
        "tags": ["immigration document types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "referrable_type",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number in 1,2,3,4,5,6,7",
              "example": "any_number_inBetween_1_to_7"
            }
          },
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/updateStatus": {
      "put": {
        "tags": ["immigration document types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_immigration_document_types_id"
                },
                "is_active": {
                  "example": "@Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/destroy": {
      "delete": {
        "tags": ["immigration document types"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_immigration_doument_types_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/index": {
      "get": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "immigration_case_id",
            "required": true,
            "description": "Id_from_immigration_cases",
            "schema": {
              "type": "object",
              "description": "Id_from_immigration_cases"
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/store-update": {
      "post": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br> Add id to the payload for update and ignore the id for store",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "id": {
                  "example": "@_Id_from_questionnaire_add_this_column_for_update_and_ignore_this_column_for_store"
                },
                "first_name": {
                  "example": "@_Alphabets"
                },
                "middle_name": {
                  "example": "_Alphabets"
                },
                "last_name": {
                  "example": "@_Alphabets"
                },
                "dob": {
                  "example": "@_date_of_birth"
                },
                "ssn": {
                  "example": "@_Formate_(XXX-XX-XXXX)"
                },
                "alien_registration_number": {
                  "example": "Alphanumeric"
                },
                "birth_country_id": {
                  "example": "@_integer"
                },
                "province_of_birth": {
                  "example": "@_Alphabets"
                },
                "citizenship_country_id": {
                  "example": "@_integer"
                },
                "is_us_resident": {
                  "example": "Boolean"
                },
                "last_arrival_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "i94_number": {
                  "example": "Alphanumeric"
                },
                "passport_number": {
                  "example": "Alphanumeric"
                },
                "passport_issue_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "passport_expiry_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "non_immigrant_status": {
                  "example": "Alphanumeric"
                },
                "non_immigrant_status_expiry_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "sevis_number": {
                  "example": "Alphanumeric"
                },
                "employment_authorization_number": {
                  "example": "Alphanumeric"
                },
                "client_id": {
                  "example": "@_Id_from_client_list"
                },
                "job_title_id": {
                  "example": "@_Id_from_job_title_list"
                },
                "daytime_phone_number": {
                  "example": "integers_nnn_nnn_nnnn"
                },
                "mobile_number": {
                  "example": "integers_nnn_nnn_nnnn"
                },
                "email_id": {
                  "example": "emailid"
                },
                "periods_of_stay": {
                  "type": "array",
                  "example": "should_send_in_an_array_[{from:date,to: date}]"
                },
                "institution_of_higher_education": {
                  "example": "Alphanumeric"
                },
                "type_of_degree": {
                  "example": "Alphanumeric"
                },
                "date_of_degree_awarded": {
                  "example": "date_YYYY_MM_DD"
                },
                "address_of_institution": {
                  "example": "Alphanumeric"
                },
                "job_duties": {
                  "example": "Alphanumeric"
                },
                "is_re_request": {
                  "example": "Boolean"
                },
                "re_request_reason": {
                  "example": "Alphanumeric"
                },
                "foreign_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zip_code": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                },
                "residential_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                },
                "employment_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/without-token/index": {
      "get": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "immigration_case_id",
            "required": true,
            "description": "Id_from_immigration_cases",
            "schema": {
              "type": "object",
              "description": "Id_from_immigration_cases"
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "required": true,
            "description": "name_of_the_database",
            "schema": {
              "type": "string",
              "description": "name_of_the_database"
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/without-token/(:any)/store-update": {
      "post": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br> Add id to the payload for update and ignore the id for store",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "id": {
                  "example": "@_Id_from_questionnaire_add_this_column_for_update_and_ignore_this_column_for_store"
                },
                "first_name": {
                  "example": "@_Alphabets"
                },
                "middle_name": {
                  "example": "_Alphabets"
                },
                "last_name": {
                  "example": "@_Alphabets"
                },
                "dob": {
                  "example": "@_date_of_birth"
                },
                "ssn": {
                  "example": "@_Formate_(XXX-XX-XXXX)"
                },
                "alien_registration_number": {
                  "example": "Alphanumeric"
                },
                "country_of_birth_id": {
                  "example": "@_integer"
                },
                "province_of_birth": {
                  "example": "@_Alphabets"
                },
                "citizenship_country_id": {
                  "example": "@_integer"
                },
                "is_us_resident": {
                  "example": "Boolean"
                },
                "last_arrival_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "i94_number": {
                  "example": "Alphanumeric"
                },
                "passport_number": {
                  "example": "Alphanumeric"
                },
                "passport_issue_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "passport_expiry_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "non_immigrant_status": {
                  "example": "Alphanumeric"
                },
                "non_immigrant_status_expiry_date": {
                  "example": "date_YYYY_MM_DD"
                },
                "sevis_number": {
                  "example": "Alphanumeric"
                },
                "employment_authorization_number": {
                  "example": "Alphanumeric"
                },
                "client_id": {
                  "example": "@_Id_from_client_list"
                },
                "job_title_id": {
                  "example": "@_Id_from_job_title_list"
                },
                "daytime_phone_number": {
                  "example": "integers_nnn_nnn_nnnn"
                },
                "mobile_number": {
                  "example": "integers_nnn_nnn_nnnn"
                },
                "email_id": {
                  "example": "emailid"
                },
                "periods_of_stay": {
                  "type": "array",
                  "example": "should_send_in_an_array_[{from:date,to: date}]"
                },
                "institution_of_higher_education": {
                  "example": "Alphanumeric"
                },
                "type_of_degree": {
                  "example": "Alphanumeric"
                },
                "date_of_degree_awarded": {
                  "example": "date_YYYY_MM_DD"
                },
                "address_of_institution": {
                  "example": "Alphanumeric"
                },
                "job_duties": {
                  "example": "Alphanumeric"
                },
                "is_finalize": {
                  "example": "boolean"
                },
                "foreign_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                },
                "residential_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                },
                "employment_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "street_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "apartment_address": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "province": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/update-status": {
      "post": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "status": {
                  "example": "@_int_1 - Approved, 2 - Re - request, 3 - Rejected, 4 - Withdraw, 5 - Request questionaries"
                },
                "re_request_reason": {
                  "example": "@_reason_for_re_request_if_status_is_not_1_and_5"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/questionnaire/without-token/format": {
      "post": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "required": true,
            "description": "name_of_the_database",
            "schema": {
              "type": "string",
              "description": "name_of_the_database"
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/without-token/dropdown": {
      "get": {
        "tags": ["questionnaire"],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "schema": {
              "type": "object",
              "description": "database name"
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/without-token/dropdown": {
      "get": {
        "tags": ["questionnaire"],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "integer",
              "description": "Country",
              "example": "101"
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "schema": {
              "type": "object",
              "description": "database name"
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/without-token/dropdown": {
      "get": {
        "tags": ["questionnaire"],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "schema": {
              "type": "object",
              "description": "database name"
            }
          }
        ],
        "responses": {}
      }
    },
    "/clients/without-token/dropdown": {
      "get": {
        "tags": ["questionnaire"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "subdomain_name",
            "schema": {
              "type": "object",
              "description": "database name"
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/review": {
      "get": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "lca_id",
            "schema": {
              "type": "@_uuid",
              "description": "lac id",
              "example": "@_uuid"
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/update-status": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "@_petition_id"
                },
                "status": {
                  "example": "@_integer_(status 1-Approved, 2 re-initiate, 3 - withdraw)"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "reason": {
                  "example": "@_mondetory_for_status(2 re-initiate, 3 - withdraw)"
                },
                "submitted_date": {
                  "example": "@_current_date"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/flag-update": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "@_petition_id"
                },
                "submitted_date": {
                  "example": "@_date_formet"
                },
                "is_submitted": {
                  "example": "@_boolean_true_or_fasle"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/nonimmigrant_visa_information": {
      "post": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br> Add id to the payload for update and ignore the id for store",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "visa_type_id": {
                  "example": "@_visa_type_id"
                },
                "petition_id": {
                  "example": "@_Id_from_Petition"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "lca_id": {
                  "example": "@_for_update_only_lca_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/temporary-imformation": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "job_title_id": {
                  "example": "@_integer_job_title_id"
                },
                "no_of_positions": {
                  "example": "@_integer_number_of_position"
                },
                "soc_title": {
                  "example": "@_string_soc_title"
                },
                "soc_code": {
                  "example": "@_integer_soc_code"
                },
                "start_date": {
                  "example": "@_date_start_date"
                },
                "end_date": {
                  "example": "@_date_end_date"
                },
                "is_fulltime": {
                  "example": "@_boolean_true_or_fasle"
                },
                "comments": {
                  "example": "comments"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/employee-information": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "business_name": {
                  "example": "@_string_business_name"
                },
                "trade_name": {
                  "example": "@_string_trade_name"
                },
                "fein_number": {
                  "example": "@_integer_fein_number"
                },
                "naics_code": {
                  "example": "@_integer_naics_code"
                },
                "address_line_one": {
                  "example": "@_address_line_one"
                },
                "address_line_two": {
                  "example": "@_address_line_one"
                },
                "city": {
                  "type": "string",
                  "example": "Alphanumeric"
                },
                "state_id": {
                  "type": "integer",
                  "example": "integer_state_id"
                },
                "country_id": {
                  "type": "integer",
                  "example": "integer_country_id"
                },
                "zipcode": {
                  "type": "integer",
                  "example": "integer_zipcode"
                },
                "province": {
                  "type": "integer",
                  "example": "integer_province"
                },
                "ext": {
                  "type": "integer",
                  "example": "integer_ext"
                },
                "contact_number": {
                  "type": "integer",
                  "example": "integer_contact_number"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/employee-poc": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "first_name": {
                  "example": "@_string_first_name"
                },
                "last_name": {
                  "example": "@_string_last_name"
                },
                "middle_name": {
                  "example": "@_string_middle_name"
                },
                "poc_job_title": {
                  "example": "@_integer_poc_job_title"
                },
                "address_line_one": {
                  "example": "@_address_line_one"
                },
                "address_line_two": {
                  "example": "@_address_line_one"
                },
                "city": {
                  "type": "string",
                  "example": "Alphanumeric"
                },
                "state_id": {
                  "type": "integer",
                  "example": "integer_state_id"
                },
                "country_id": {
                  "type": "integer",
                  "example": "integer_country_id"
                },
                "zipcode": {
                  "type": "integer",
                  "example": "integer_zipcode"
                },
                "province": {
                  "type": "integer",
                  "example": "integer_province"
                },
                "ext": {
                  "type": "integer",
                  "example": "integer_ext"
                },
                "contact_number": {
                  "type": "integer",
                  "example": "integer_contact_number"
                },
                "email_id": {
                  "type": "integer",
                  "example": "@_email_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/attorney-or-agent-info": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "is_represented_attorney_or_agent": {
                  "example": "@_boolean_true_or_fasle"
                },
                "first_name": {
                  "example": "@_string_first_name"
                },
                "last_name": {
                  "example": "@_string_last_name"
                },
                "middle_name": {
                  "example": "@_string_middle_name"
                },
                "poc_job_title": {
                  "example": "@_integer_poc_job_title"
                },
                "address_line_one": {
                  "example": "@_address_line_one"
                },
                "address_line_two": {
                  "example": "@_address_line_one"
                },
                "city": {
                  "type": "string",
                  "example": "Alphanumeric"
                },
                "state_id": {
                  "type": "integer",
                  "example": "integer_state_id"
                },
                "country_id": {
                  "type": "integer",
                  "example": "integer_country_id"
                },
                "zipcode": {
                  "type": "integer",
                  "example": "integer_zipcode"
                },
                "province": {
                  "type": "integer",
                  "example": "integer_province"
                },
                "ext": {
                  "type": "integer",
                  "example": "integer_ext"
                },
                "contact_number": {
                  "type": "integer",
                  "example": "integer_contact_number"
                },
                "email_id": {
                  "type": "integer",
                  "example": "@_email_id"
                },
                "law_firm_name": {
                  "type": "string",
                  "example": "@_string_law_frim_name"
                },
                "law_firm_fein": {
                  "type": "integer",
                  "example": "@_integer_law_firm_fein"
                },
                "state_bar_number": {
                  "type": "integer",
                  "example": "@_integer_state_bar_number"
                },
                "attorney_state_id": {
                  "type": "integer",
                  "example": "@_integer_attorney_state_id"
                },
                "attorney_court_name": {
                  "type": "string",
                  "example": "@_string_attorney_court_name"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/wage-info": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "no_of_workers": {
                        "example": "@_integer_no_of_workers"
                      },
                      "source_prevailing_wage": {
                        "example": "@_integer_source_prevailing_wage"
                      },
                      "is_secondary_entity": {
                        "example": "@_boolean_true_or_fasle"
                      },
                      "secondary_entity_business_name": {
                        "example": "@_business_name"
                      },
                      "address_line_one": {
                        "example": "@_address_line_one"
                      },
                      "address_line_two": {
                        "example": "@_address_line_one"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      },
                      "wage_type": {
                        "type": "integer",
                        "example": "integer_wage_type_id"
                      },
                      "wage_rate_from": {
                        "type": "float",
                        "example": "@float_wage_rate_from"
                      },
                      "wage_rate_to": {
                        "type": "float",
                        "example": "@_float_wage_rate_to"
                      },
                      "prevailing_wage_type": {
                        "type": "integer",
                        "example": "integer_prevailing_wage_type_id"
                      },
                      "prevailing_wage_rate": {
                        "type": "float",
                        "example": "@float_prevailing_wage_rate"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/labor-condition-statements": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "employe_labor_conditions_agreement": {
                  "example": "@_boolean_true_or_fasle"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/h1b-labor-condition-statements": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "is_h1b_dependent": {
                  "example": "@_boolean_true_or_fasle"
                },
                "is_willful_violator": {
                  "example": "@_boolean_true_or_fasle"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/employer-obligations": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "public_disclosure_at": {
                  "example": "@_integer_public_disclosure_at"
                },
                "first_name": {
                  "example": "@_string_first_name"
                },
                "last_name": {
                  "example": "@_string_last_name"
                },
                "middle_name": {
                  "example": "@_string_middle_name"
                },
                "designated_official_title": {
                  "example": "@_string_designated_official_title"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/preparer": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "business_name": {
                  "example": "@_string_business_name"
                },
                "first_name": {
                  "example": "@_string_first_name"
                },
                "last_name": {
                  "example": "@_string_last_name"
                },
                "middle_name": {
                  "example": "@_string_middle_name"
                },
                "email_id": {
                  "example": "@_email_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/submittion": {
      "put": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "petition_id": {
                  "example": "@_petition_id"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id"
                },
                "is_lca_file_submitted": {
                  "example": "@_boolean_true_or_fasle"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/upload": {
      "post": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "immigration_case_id": {
                  "example": "@_immigration_case_id_uuid"
                },
                "petition_id": {
                  "example": "@_petition_id_uuid"
                },
                "job_title_id": {
                  "example": "@_integer_job_title_id"
                },
                "lca_number": {
                  "example": "@_alphanumaric"
                },
                "client_name": {
                  "example": "@_clinet_name_(String)"
                },
                "certified_date": {
                  "example": "@_date_formet"
                },
                "start_date": {
                  "type": "date",
                  "example": "start_date"
                },
                "end_date": {
                  "type": "date",
                  "example": "integer_state_id"
                },
                "wage_rate": {
                  "type": "float",
                  "example": "wage_rate"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                },
                "client_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address_line_one": {
                        "example": "@_address_line_one"
                      },
                      "address_line_two": {
                        "example": "@_address_line_one"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                },
                "remote_address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address_line_one": {
                        "example": "@_address_line_one"
                      },
                      "address_line_two": {
                        "example": "@_address_line_one"
                      },
                      "city": {
                        "type": "string",
                        "example": "Alphanumeric"
                      },
                      "state_id": {
                        "type": "integer",
                        "example": "integer_state_id"
                      },
                      "country_id": {
                        "type": "integer",
                        "example": "integer_country_id"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": "integer_zipcode"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/lca/re-upload": {
      "post": {
        "tags": ["lca"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "lca_id": {
                  "example": "@_lca_id"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      },
                      "case_document_id": {
                        "type": "integer",
                        "example": "Id_from_documents"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/petition-documents/index": {
      "get": {
        "tags": ["immigration petition document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "description": "petition_id",
            "schema": {
              "type": "UUID",
              "description": "petition_id"
            }
          },
          {
            "in": "query",
            "name": "rfa_id",
            "description": "rfa_id",
            "schema": {
              "type": "UUID",
              "description": "rfa_id"
            }
          },
          {
            "in": "query",
            "name": "premium_case_id",
            "description": "premium_case_id",
            "schema": {
              "type": "UUID",
              "description": "premium_case_id"
            }
          },
          {
            "in": "query",
            "name": "referrable_type_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Mandatory('Referrable Type. 1 - LCA documents, 2 - USCIS, 3 - Beneficiary Documents, 4 - Employer documents, 5 - Client documents, 6- separators, 7 - Premium documents')"
            }
          }
        ],
        "responses": {}
      }
    },
    "/petition-documents/store": {
      "post": {
        "tags": ["immigration petition document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "@_petition_id"
                },
                "referrable_type_id": {
                  "example": "Referrable Type. 1 - LCA documents, 2 - USCIS, 3 - Beneficiary Documents, 4 - Employer documents, 5 - Client documents, 6- separators, 7 - Premium documents"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "case_document_id": {
                        "type": "@_uuid",
                        "example": "Mandatory"
                      },
                      "immigration_document_type_id": {
                        "type": "integer",
                        "example": "Mandatory"
                      },
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      },
                      "request_document": {
                        "type": "integer",
                        "example": " 0 for request sent 1 for submit"
                      },
                      "merge_order": {
                        "type": "integer",
                        "example": "Numbers"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/petition-documents/destroy": {
      "delete": {
        "tags": ["immigration petition document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "document_id": {
                  "example": "@_Id_from_document"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cheque/store": {
      "post": {
        "tags": ["cheque"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "@_uuid_petition_id/one mandatory of three"
                },
                "rfa_id": {
                  "example": "@_uuid_rfa_id /one mandatory of three"
                },
                "premium_case_id": {
                  "example": "@_uuid_premium_case_id/one mandatory of three"
                },
                "petition_type": {
                  "example": "@_string_petition_type"
                },
                "cheque_date": {
                  "example": "@_cheque_date"
                },
                "cheque_number": {
                  "example": "@_string_cheque_number"
                },
                "memo": {
                  "example": "@_string_memo"
                },
                "cheque_amount": {
                  "example": "@_float_cheque_amount"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cheque/destroy": {
      "delete": {
        "tags": ["cheque"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "cheque_id": {
                  "example": "@_cheque_id"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cheque/index": {
      "get": {
        "tags": ["cheque"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "description": "petition_id",
            "schema": {
              "type": "UUID",
              "description": "petition_id"
            }
          },
          {
            "in": "query",
            "name": "rfa_id",
            "description": "rfa_id",
            "schema": {
              "type": "UUID",
              "description": "rfa_id"
            }
          },
          {
            "in": "query",
            "name": "premium_case_id",
            "description": "premium_case_id",
            "schema": {
              "type": "UUID",
              "description": "premium_case_id"
            }
          }
        ],
        "responses": {}
      }
    },
    "/dispatch/update": {
      "put": {
        "tags": ["dispatch"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "reference_number": {
                  "example": "@_string_reference number"
                },
                "remarks": {
                  "example": "@_text_remarks"
                },
                "petition_id": {
                  "example": "@_uuid_petition_id/one mandatory of three"
                },
                "rfa_id": {
                  "example": "@_uuid_rfa_id /one mandatory of three"
                },
                "premium_case_id": {
                  "example": "@_uuid_premium_case_id/one mandatory of three"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/dispatch/index": {
      "get": {
        "tags": ["dispatch"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "description": "petition_id",
            "schema": {
              "type": "UUID",
              "description": "petition_id"
            }
          },
          {
            "in": "query",
            "name": "rfa_id",
            "description": "rfa_id",
            "schema": {
              "type": "UUID",
              "description": "rfa_id"
            }
          },
          {
            "in": "query",
            "name": "premium_case_id",
            "description": "premium_case_id",
            "schema": {
              "type": "UUID",
              "description": "premium_case_id"
            }
          }
        ],
        "responses": {}
      }
    },
    "/notices/update": {
      "put": {
        "tags": ["Notices"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "receipt_number": {
                  "example": "@_string_receipt_number"
                },
                "petition_id": {
                  "example": "@_petition_id"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notices/index": {
      "get": {
        "tags": ["Notices"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/immigration/store": {
      "post": {
        "tags": ["immigration intiate"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_if__id_exists_update_immigration_case_types"
                },
                "employee_id": {
                  "example": "@_UUID_of_the_employee"
                },
                "case_type_id": {
                  "example": "@_case_type_id/integer"
                },
                "filling_type_id": {
                  "example": "@filling_type_id/integer"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/immigration/index": {
      "get": {
        "tags": ["immigration intiate"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "immigration_case_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/immigration/listing": {
      "post": {
        "tags": ["immigration intiate"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "total_date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "approved_date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "denied_date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "inprogress_date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "await_date_between": {
                  "type": "array",
                  "example": "[date1, date2]"
                },
                "status": {
                  "type": "integer",
                  "example": "1 - In Progress, 2 -Awaiting response, 3 - Withdraw, 4 - Approved,  5 -Denied, 6 - On Hold"
                },
                "search": {
                  "type": "string",
                  "example": "employee_name"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/rfa/store-update": {
      "post": {
        "tags": ["rfa"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "rfa_id": {
                  "example": "@_rfa_id"
                },
                "referrable_type_id": {
                  "example": "Referrable Type. 1 - LCA documents, 2 - USCIS, 3 - Beneficiary Documents, 4 - Employer documents, 5 - Client documents, 6- separators, 7 - Premium documents"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "case_document_id": {
                        "type": "@_uuid",
                        "example": "Mandatory"
                      },
                      "immigration_document_type_id": {
                        "type": "integer",
                        "example": "Mandatory"
                      },
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      },
                      "request_document": {
                        "type": "integer",
                        "example": " 0 for request sent 1 for submit"
                      },
                      "merge_order": {
                        "type": "integer",
                        "example": "Numbers"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/rfa/index": {
      "get": {
        "tags": ["rfa"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "immigration_case_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/premium/store": {
      "post": {
        "tags": ["premium"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "immigration_case_id": {
                  "example": "@_uuid_immigration_case_id/mandatory"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/premium/store-update": {
      "post": {
        "tags": ["premium"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "premium_case_id": {
                  "example": "@_uuid_premium_case_id/one mandatory of three"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "case_document_id": {
                        "type": "@_uuid",
                        "example": "Mandatory"
                      },
                      "immigration_document_type_id": {
                        "type": "integer",
                        "example": "Mandatory"
                      },
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      },
                      "request_document": {
                        "type": "integer",
                        "example": " 0 for request sent 1 for submit"
                      },
                      "merge_order": {
                        "type": "integer",
                        "example": "Numbers"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/premium/index": {
      "get": {
        "tags": ["premium"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "immigration_case_id",
            "required": true,
            "description": "Id_from_immigration_cases",
            "schema": {
              "type": "object",
              "description": "Id_from_immigration_cases"
            }
          }
        ],
        "responses": {}
      }
    },
    "/decision/update": {
      "put": {
        "tags": ["decision"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "@_uuid_petition_id/one mandatory of twp"
                },
                "rfa_id": {
                  "example": "@_uuid_rfa_id/one mandatory of two"
                },
                "decision": {
                  "example": "@_integer/1- approved, 2- denied, 3-RFE"
                },
                "remarks": {
                  "example": "@_string"
                },
                "receipt_number": {
                  "example": "@_string"
                },
                "start_date": {
                  "example": "@_date"
                },
                "end_date": {
                  "example": "@_date"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "string",
                        "example": "Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/decision/index": {
      "get": {
        "tags": ["decision"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank and should enter petition_id or rfa_id",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "description": "petition_id",
            "schema": {
              "type": "UUID",
              "description": "petition_id"
            }
          },
          {
            "in": "query",
            "name": "rfa_id",
            "description": "rfa_id",
            "schema": {
              "type": "UUID",
              "description": "rfa_id"
            }
          }
        ],
        "responses": {}
      }
    },
    "/merge-document/index": {
      "get": {
        "tags": ["merge-document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank. please enter any one id",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "petition_id",
            "description": "petition_id",
            "schema": {
              "type": "UUID",
              "description": "petition_id"
            }
          },
          {
            "in": "query",
            "name": "rfa_id",
            "description": "rfa_id",
            "schema": {
              "type": "UUID",
              "description": "rfa_id"
            }
          },
          {
            "in": "query",
            "name": "premium_case_id",
            "description": "premium_case_id",
            "schema": {
              "type": "UUID",
              "description": "premium_case_id"
            }
          }
        ],
        "responses": {}
      }
    },
    "/merge-document/update": {
      "put": {
        "tags": ["merge-document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "Id_from_document"
                      },
                      "merge_order": {
                        "type": "integer",
                        "example": "1_2_3_4.."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/merge-document/pdf": {
      "get": {
        "tags": ["merge-document"],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank. please enter any one id",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "petition_id": {
                  "example": "UUID"
                },
                "rfa_id": {
                  "example": "UUID"
                },
                "premium_case_id": {
                  "example": "UUID"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    }
  }
}
