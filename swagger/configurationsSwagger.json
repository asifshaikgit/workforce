{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Work Force APIs",
    "description": "<h2>Work Force APIs Document Generated by the <b>Codetru</b> Development Team</h2><h3>Key Points</h3> <ul><li>Boolean: true or false / 0 or 1</li><li>Integer: Numbers only</li><li>Alphanumeric: Number and Alphabet</li><li>Date Format: YYYY-MM-DD</li><li>Not Mandatory: If you want to remove or leave blank</li><li>document_id: From Common Document Upload API</li><li>Time: HH:MM</li><li>request_id: is always {{$guid}}</li></ul><p>For more information on the API endpoints, please visit <a href='https://workforce-dev-api.codetru.org/api/v1/document/'>Workforce</a><ul><li><a href='https://workforce-dev-api.codetru.org/api/v1/tenants/'><b>Tenant Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/authentication/'><b>Authentication Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/employee/'><b>Employee Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/configuration/'><b>Configuration Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/placement/'><b>Placements Routes</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/employee-self-service/'><b>Employee Self Service</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/timesheet/'><b>Timesheet</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/payrolls/'><b>Payrolls</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/expense-management/'><b>Expense Management</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/dashboard/'><b>Dashboard</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/exports/'><b>Export</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/imports/'><b>Imports</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/companies/'><b>Companies</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/immigrations/'><b>Immigrations</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/ocr/'><b>OCR</b></a></li><li><a href='https://workforce-dev-api.codetru.org/api/v1/ledgers/'><b>Ledgers</b></a></li></ul>.</p>"
  },
  "host": "workforce-dev-api.codetru.org",
  "basePath": "/api/v1/",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your access token in the format 'Bearer &lt;token&gt;'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/upload": {
      "post": {
        "tags": [
          "Common Document upload"
        ],
        "description": "",
        "parameters": [
          {
            "name": "files",
            "type": "file",
            "consumes": [
              "multipart/form-data"
            ],
            "description": "file to upload",
            "in": "formData"
          }
        ],
        "responses": {}
      }
    },
    "/job-title/store": {
      "post": {
        "tags": [
          "job-title"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "name": {
                  "example": "@_Alphanumeric",
                  "required": true
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/index": {
      "get": {
        "tags": [
          "job-title"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "The id of the job title",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Integer",
              "required": true
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/update/:id": {
      "put": {
        "tags": [
          "job-title"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/listing": {
      "get": {
        "tags": [
          "job-title"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "The search keyword",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/update-status/:id": {
      "put": {
        "tags": [
          "job-title"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/dropdown": {
      "get": {
        "tags": [
          "job-title"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "The search keyword",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/job-title/destroy/:id": {
      "delete": {
        "tags": [
          "job-title"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/store": {
      "post": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "name": {
                  "example": "@_Alphanumeric",
                  "required": true
                },
                "is_mandatory": {
                  "example": "Mandatory"
                },
                "status": {
                  "example": "@_Boolean",
                  "description": "true for active and false for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/update/:id": {
      "put": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_mandatory": {
                  "example": "Mandatory"
                },
                "status": {
                  "example": "@_Boolean",
                  "description": "true for active and false for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/index": {
      "get": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "The id of the on-boarding-document-type",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Integer",
              "required": true
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/listing": {
      "get": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/update-status/:id": {
      "put": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "status": {
                  "example": "@_Boolean",
                  "description": "true for active and false for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/configuration/on-boarding-document-types/destroy/:id": {
      "delete": {
        "tags": [
          "on-boarding-document-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/store": {
      "post": {
        "tags": [
          "country"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/update/:id": {
      "put": {
        "tags": [
          "country"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/dropdown": {
      "get": {
        "tags": [
          "country"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/listing": {
      "get": {
        "tags": [
          "country"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "requird": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/update-status/:id": {
      "put": {
        "tags": [
          "country"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/country/destroy/:id": {
      "delete": {
        "tags": [
          "country"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/store": {
      "post": {
        "tags": [
          "state"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "country_id": {
                  "example": "@_Integer_Id_of_the_countries",
                  "description": "Id of the country"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/update/:id": {
      "put": {
        "tags": [
          "state"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "country_id": {
                  "example": "@_Integer_Id_of_the_country"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/dropdown": {
      "get": {
        "tags": [
          "state"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "country_id",
            "schema": {
              "type": "integer",
              "description": "Country",
              "example": "101"
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/listing": {
      "get": {
        "tags": [
          "state"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search by field",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/update-status/:id": {
      "put": {
        "tags": [
          "state"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/state/destroy/:id": {
      "delete": {
        "tags": [
          "state"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/cycles/dropdown": {
      "get": {
        "tags": [
          "cycles"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "exclude_id",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/days/dropdown": {
      "get": {
        "tags": [
          "days"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/timesheet-configurations/store": {
      "post": {
        "tags": [
          "timesheet-configurations"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "ts_mandatory": {
                  "example": "@_Boolean"
                },
                "cycle_id": {
                  "example": "@_Integer_Id_from_cycles"
                },
                "day_start_id": {
                  "example": "@_Integer_Id_from_days",
                  "description": "day_start_id"
                },
                "default_hours": {
                  "example": "@_time",
                  "description": "time"
                },
                "is_global": {
                  "example": "@_Boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/timesheet-configurations/index": {
      "get": {
        "tags": [
          "timesheet-configurations"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/timesheet-configurations/update/:id": {
      "put": {
        "tags": [
          "timesheet-configurations"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "ts_mandatory": {
                  "example": "@_Boolean"
                },
                "cycle_id": {
                  "example": "@_Integer_Id_from_cycles"
                },
                "day_start_id": {
                  "example": "@_Integer_Id_from_days",
                  "description": "day_start_id"
                },
                "default_hours": {
                  "example": "@_time",
                  "description": "time"
                },
                "is_global": {
                  "example": "@_boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/timesheet-settings/index": {
      "get": {
        "tags": [
          "timesheet-settings"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/timesheet-settings/update/:id": {
      "put": {
        "tags": [
          "timesheet-settings"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notification-settings/update": {
      "put": {
        "tags": [
          "notificationSettings"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_notification_setting_ID"
                },
                "template": {
                  "example": "@_text"
                },
                "assignee_employee_ids": [
                  {
                    "id": {
                      "employee_id": "@_employee_id"
                    }
                  }
                ]
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notification-settings/dropdown": {
      "get": {
        "tags": [
          "notificationSettings"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notification-settings/index": {
      "get": {
        "tags": [
          "notificationSettings"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "module_slug": {
                  "example": "@_slug_name"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notification/listing": {
      "Post": {
        "tags": [
          "Notifications"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "from_date": {
                  "type": "Date",
                  "example":"@_Organization_Date_Format"
                },
                "to_date": {
                  "type": "Date",
                  "example":"@_Organization_Date_Format"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/notification/update-read/:id": {
      "put": {
        "tags": [
          "notificationSettings"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config/dropdown": {
      "get": {
        "tags": [
          "payroll"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "pay_config_setting_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "@_Id_from_payroll_configuration"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "permissions"
        ],
        "description": "Complete list of permissions",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/prefixes/index": {
      "get": {
        "tags": [
          "prefixes"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/prefixes/update": {
      "put": {
        "tags": [
          "prefixes"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "prefixes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "@_prefixes_id"
                      },
                      "prefix_name": {
                        "type": "string",
                        "example": "@_prefix_name"
                      },
                      "separator": {
                        "type": "string",
                        "example": "@_separator"
                      },
                      "number": {
                        "type": "string",
                        "example": "@_integer"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/prefixes/getPrefix": {
      "get": {
        "tags": [
          "prefixes"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "slug",
            "description": "employee, consultant-contractor, invoice, timesheet, client, end-client, vendor, expense, employee-self-service, payement, bill ",
            "schema": {
              "type": "object",
              "description": "Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/templates/list-param": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "Integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "module_slug",
            "required": true,
            "description": "module_slug ex: expenses,employees,placements,etc",
            "schema": {
              "type": "string",
              "description": "@_module_slug",
              "example": "@_parameter_from_template_parameters"
            }
          }
        ],
        "responses": {}
      }
    },
    "/templates/update/:slug": {
      "put": {
        "tags": [
          "templates"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Alphabet_not_manadatory"
                },
                "subject": {
                  "example": "@_html/Alphanumeric"
                },
                "template": {
                  "example": "@_html"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/templates/dropdown": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "Integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/templates/index": {
      "get": {
        "tags": [
          "templates"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "Integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "module_slug",
            "required": true,
            "description": "module_slug ex: expenses,employees,placements,etc",
            "schema": {
              "type": "string",
              "description": "@_Id_from_mail_template"
            }
          }
        ],
        "responses": {}
      }
    },
    "/approvals/(:any)/store": {
      "post": {
        "tags": [
          "timesheet-approvals"
        ],
        "description": "Slug names: timesheet, invoice",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "approval_module": {
                  "example": "@_1_or_2_or_3"
                },
                "is_global": {
                  "example": "@_boolean",
                  "description": "true or false"
                },
                "approvals": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "approver_ids": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "employee_id": {
                              "type": "integer",
                              "example": "@_Employee_Id"
                            }
                          }
                        }
                      },
                      "rank": {
                        "type": "integer",
                        "example": "@_Integer_order_of_approval_like_1,2,3"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/approvals/(:any)/index": {
      "get": {
        "tags": [
          "timesheet-approvals"
        ],
        "description": "Slug names: timesheet, invoice",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/approvals/(:any)/update/:id": {
      "put": {
        "tags": [
          "timesheet-approvals"
        ],
        "description": "Slug names: timesheet, invoice",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "approval_module": {
                  "example": "@_1_or_2_or_3"
                },
                "is_global": {
                  "example": "@_boolean",
                  "description": "true or false"
                },
                "approvals": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "@_Integer_Id_from_approval_levels"
                      },
                      "rank": {
                        "type": "integer",
                        "example": "@_Integer_order_of_approval_like_1,2,3"
                      },
                      "approver_ids": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "employee_id": {
                              "type": "UUID",
                              "example": "@_employee_id"
                            },
                            "id": {
                              "type": "UUID",
                              "example": "@_Id_from_approval_users"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "delete_user_ids": {
                  "type": "array",
                  "example": "Deleted approval_user Ids"
                },
                "delete_approval_level_ids": {
                  "type": "array",
                  "example": "Deleted approval_level Ids"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization-contact-info/store": {
      "post": {
        "tags": [
          "organization-contact-info"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "organization_name": {
                  "example": "@_Alphanumeric"
                },
                "address_line_1": {
                  "example": "@_Alphanumeric"
                },
                "country_id": {
                  "example": "@_Id_from_countries"
                },
                "state_id": {
                  "example": "@_Id_from_states"
                },
                "city": {
                  "example": "@_Alphanumeric"
                },
                "zip_code": {
                  "example": "@_Integer_min_5_max_10_digits"
                },
                "company_email_id": {
                  "example": "@_company_email_id"
                },
                "company_phone_number": {
                  "example": "@_integer_upto_12_digits"
                },
                "website_url": {
                  "example": "@_url"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization-contact-info/index": {
      "get": {
        "tags": [
          "organization-contact-info"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer",
              "description": "Integer",
              "example": "@_Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization-contact-info/update/:id": {
      "put": {
        "tags": [
          "organization-contact-info"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "organization_name": {
                  "example": "@_Alphanumeric"
                },
                "address_line_1": {
                  "example": "@_Alphanumeric"
                },
                "country_id": {
                  "example": "@_Id_from_countries"
                },
                "state_id": {
                  "example": "@_Id_from_states"
                },
                "city": {
                  "example": "@_Alphanumeric"
                },
                "zip_code": {
                  "example": "@_Integer_min_5_max_10_digits"
                },
                "company_email_id": {
                  "example": "@_company_email_id"
                },
                "company_phone_number": {
                  "example": "@_integer_upto_12_digits"
                },
                "website_url": {
                  "example": "@_url"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/store": {
      "post": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "employment_type_id": {
                  "example": "@_Integer_Id_from_employment_types"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/index": {
      "get": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Integer_Id_from_employee_categories"
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/dropdown": {
      "get": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "emp_type_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Employment_type_id",
              "example": "Id_from_employee_categories"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/listing": {
      "get": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/update/:id": {
      "put": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "employment_type_id": {
                  "example": "@_Integer_Id_from_employment_types"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/update-status/:id": {
      "put": {
        "tags": [
          "category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/categories/destroy/:id": {
      "delete": {
        "tags": [
          "category"
        ],
        "description": "employee category",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/store": {
      "post": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/index": {
      "get": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular department",
            "schema": {
              "type": "object",
              "required": true,
              "description": "Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/dropdown": {
      "get": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "emp_type_id",
            "schema": {
              "type": "Integer",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/listing": {
      "get": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/update/:id": {
      "put": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "String/Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/update-status/:id": {
      "put": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/departments/destroy/:id": {
      "delete": {
        "tags": [
          "departments"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/store": {
      "post": {
        "tags": [
          "employee-team"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "department_id": {
                  "example": "@_Integer_Id_from_departments"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/dropdown": {
      "get": {
        "tags": [
          "employee-team"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search by field",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/index": {
      "get": {
        "tags": [
          "employee-team"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_teams"
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/listing": {
      "get": {
        "tags": [
          "employee-team"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search by field",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/update/:id": {
      "put": {
        "tags": [
          "employee-team"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "departments_id": {
                  "example": "@_Integer_Id_from_departments"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/update-status/:id": {
      "put": {
        "tags": [
          "employee-team"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/employee-team/destroy/:id": {
      "delete": {
        "tags": [
          "employee-team"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/employment-types/dropdown": {
      "get": {
        "tags": [
          "employment-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search by field",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/employment-types/listing": {
      "get": {
        "tags": [
          "employment-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/store": {
      "post": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/index": {
      "get": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_relationship_types"
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/dropdown": {
      "get": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/listing": {
      "get": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/update-status/:id": {
      "put": {
        "tags": [
          "relationship-type"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/update/:id": {
      "put": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/relationship-type/destroy/:id": {
      "delete": {
        "tags": [
          "relationship-type"
        ],
        "description": "configurations for relationship-type",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/store": {
      "post": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/index": {
      "get": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Integer_Id_from_skills"
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/dropdown": {
      "get": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/listing": {
      "get": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/update/:id": {
      "put": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/update-status/:id": {
      "put": {
        "tags": [
          "skills"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/skills/destroy/:id": {
      "delete": {
        "tags": [
          "skills"
        ],
        "description": "configurations for skills",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/store": {
      "post": {
        "tags": [
          "visa-document-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "visa_type_id": {
                  "example": "@_Integer_Id_from_visa_types"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/index": {
      "get": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_visa_document_types"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/dropdown": {
      "get": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "visa_type_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Visa Type ID",
              "example": "@_Id_from_visa_types"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/listing": {
      "get": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/update/:id": {
      "put": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "visa_type_id": {
                  "example": "@_Integer_Id_from_visa_types"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/update-status/:id": {
      "put": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-document-types/destroy/:id": {
      "delete": {
        "tags": [
          "visa-document-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/store": {
      "post": {
        "tags": [
          "visa-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/index": {
      "get": {
        "tags": [
          "visa-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_visa_types"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/dropdown": {
      "get": {
        "tags": [
          "visa-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/listing": {
      "get": {
        "tags": [
          "visa-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/update/:id": {
      "put": {
        "tags": [
          "visa-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/update-status/:id": {
      "put": {
        "tags": [
          "visa-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/visa-types/destroy/:id": {
      "delete": {
        "tags": [
          "visa-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/store": {
      "post": {
        "tags": [
          "visa-types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "organization_name": {
                  "example": "@_Alphanumeric"
                },
                "first_name": {
                  "example": "@_Only_Alphabet"
                },
                "middle_name": {
                  "example": "Only_Alphabet"
                },
                "last_name": {
                  "example": "@_Only_Alphabet"
                },
                "address_line_1": {
                  "example": "@_address_line_1"
                },
                "address_line_2": {
                  "example": "@_address_line_2"
                },
                "city": {
                  "example": "@_city"
                },
                "zip_code": {
                  "example": "@_zip_code"
                },
                "email_id": {
                  "example": "@_email_id"
                },
                "ext": {
                  "example": "integer_upto_4_digits"
                },
                "contact_number": {
                  "example": "@_integer_upto_12_digits"
                },
                "mobile_number": {
                  "example": "integer_upto_12_digits"
                },
                "date_format": {
                  "example": "@_Organization_Date_Format"
                },
                "currency_symbol": {
                  "example": "@_Organization_Currency_Format"
                },
                "logo_id": {
                  "type": "UUID",
                  "example": "@_Id_from_temp_upload_documents"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/index": {
      "get": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Id of the particular record",
              "example": "Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/update/:id": {
      "put": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "organization_name": {
                  "example": "@_Alphanumeric"
                },
                "first_name": {
                  "example": "@_Only_Alphabet"
                },
                "middle_name": {
                  "example": "Only_Alphabet"
                },
                "last_name": {
                  "example": "@_Only_Alphabet"
                },
                "email_id": {
                  "example": "@_email_id"
                },
                "address_line_1": {
                  "example": "@_address_line_1"
                },
                "address_line_2": {
                  "example": "@_address_line_2"
                },
                "city": {
                  "example": "@_city"
                },
                "zip_code": {
                  "example": "@_zip_code"
                },
                "ext": {
                  "example": "integer_upto_4_digits"
                },
                "contact_number": {
                  "example": "@_integer_upto_12_digits"
                },
                "mobile_number": {
                  "example": "integer_upto_12_digits"
                },
                "date_format": {
                  "example": "@_Organization_Date_Format"
                },
                "currency_symbol": {
                  "example": "@_Organization_Currency_Format"
                },
                "logo_id": {
                  "type": "UUID",
                  "example": "Id_from_temp_upload_documents"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/settings/:id": {
      "put": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "associated_app_names": {
                  "example": "Only_Alphabet"
                },
                "notify_university_usics": {
                  "example": "@_Boolean"
                },
                "enable_delete_email": {
                  "example": "@_Boolean"
                },
                "enable_settlement_amount": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/get-signature": {
      "get": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/signature/:id": {
      "put": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "signature": {
                  "example": "@_string"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/update-invoice-theme/:id": {
      "put": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "invoice_theme": {
                  "example": "@_json"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/active-invoice-theme": {
      "get": {
        "tags": [
          "organization"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "Integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/organization/profile-url": {
      "get": {
        "tags": [
          "organization"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "description": "NuIntegermber",
              "example": "integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/store": {
      "post": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/index": {
      "get": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_education_levels"
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/dropdown": {
      "get": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/listing": {
      "get": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/update/:id": {
      "put": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/update-status/:id": {
      "put": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/education-levels/destroy/:id": {
      "delete": {
        "tags": [
          "education-levels"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/store": {
      "post": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "number_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_number_is_mandatory_for_this_document_type"
                },
                "number_display": {
                  "example": "@_Boolean",
                  "description": "is_number_is_display_for_this_document_type"
                },
                "valid_from_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_from_is_mandatory_for_this_document_type"
                },
                "valid_from_display": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_from_is_display_for_this_document_type"
                },
                "valid_to_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_to_is_mandatory_for_this_document_type"
                },
                "valid_to_display": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_to_is_display_for_this_document_type"
                },
                "status_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_status_is_mandatory_for_this_document_type"
                },
                "status_display": {
                  "example": "@_Boolean",
                  "description": "is_document_status_is_display_for_this_document_type"
                },
                "upload_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_upload_is_mandatory_for_this_document_type"
                },
                "upload_display": {
                  "example": "@_Boolean",
                  "description": "is_document_upload_is_display_for_this_document_type"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/index": {
      "get": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/dropdown": {
      "get": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/listing": {
      "get": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/update/:id": {
      "put": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "number_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_number_is_mandatory_for_this_document_type"
                },
                "number_display": {
                  "example": "@_Boolean",
                  "description": "is_number_is_display_for_this_document_type"
                },
                "valid_from_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_from_is_mandatory_for_this_document_type"
                },
                "valid_from_display": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_from_is_display_for_this_document_type"
                },
                "valid_to_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_to_is_mandatory_for_this_document_type"
                },
                "valid_to_display": {
                  "example": "@_Boolean",
                  "description": "is_document_validity_to_is_display_for_this_document_type"
                },
                "status_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_status_is_mandatory_for_this_document_type"
                },
                "status_display": {
                  "example": "@_Boolean",
                  "description": "is_document_status_is_display_for_this_document_type"
                },
                "upload_mandatory": {
                  "example": "@_Boolean",
                  "description": "is_document_upload_is_mandatory_for_this_document_type"
                },
                "upload_display": {
                  "example": "@_Boolean",
                  "description": "is_document_upload_is_display_for_this_document_type"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/update-status/:id": {
      "put": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/document-types/(:any)/destroy/:id": {
      "delete": {
        "tags": [
          "document-types"
        ],
        "description": "slugs: placement-documents, client-documents, end-documents, employee-personal-documents, raise-invoices-documents",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/store": {
      "post": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/index": {
      "get": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/dropdown": {
      "get": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/listing": {
      "get": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/update/:id": {
      "put": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/update-status/:id": {
      "put": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payment-mode/destroy/:id": {
      "delete": {
        "tags": [
          "payment-mode"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/store": {
      "post": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "type": {
                  "example": "@_1_for_percentage_2_for_value"
                },
                "value": {
                  "example": "@_Integer"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/index": {
      "get": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "Integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/dropdown": {
      "get": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Name of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/listing": {
      "get": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Name of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/update/:id": {
      "put": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "type": {
                  "example": "@_1_for_percentage_2_for_value"
                },
                "value": {
                  "example": "@_Integer"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/update-enable-tax-invoice": {
      "put": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "enable_taxes_for_invoices": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-taxes/destroy/:id": {
      "delete": {
        "tags": [
          "invoice-taxes"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/store": {
      "post": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "write_off_reason": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/index": {
      "get": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Integer"
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/dropdown": {
      "get": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/listing": {
      "get": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/update/:id": {
      "put": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "write_off_reason": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/update-status/:id": {
      "put": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/write-off/destroy/:id": {
      "delete": {
        "tags": [
          "write-off"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice/raise/configurations/store": {
      "post": {
        "tags": [
          "Invoice Configuration"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "net_pay_terms_id": {
                  "example": "@_Integer_Id_from_net_pay_terms"
                },
                "cycle_id": {
                  "example": "@_Integer_Id_from_cycles"
                },
                "day_start_id": {
                  "example": "required_if_cycle_id_1_or_2",
                  "description": "day_start_id"
                },
                "is_global": {
                  "example": "@_Boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice/raise/configurations/index": {
      "get": {
        "tags": [
          "Invoice Configuration"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice/raise/configurations/update/:id": {
      "put": {
        "tags": [
          "Invoice Configuration"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "net_pay_terms_id": {
                  "example": "@_Integer_Id_from_net_pay_terms"
                },
                "cycle_id": {
                  "example": "@_Integer_Id_from_cycles"
                },
                "day_start_id": {
                  "example": "required_if_cycle_id_1_or_2",
                  "description": "day_start_id"
                },
                "is_global": {
                  "example": "@_Boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/store": {
      "post": {
        "tags": ["expense-service-types"],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "assignee_employee_ids": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "employee_id": {
                        "type": "string",
                        "example": "@_Employee_Id"
                      }
                    }
                  }
                },
                "is_active": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/index": {
      "get": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/dropdown": {
      "get": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/listing": {
      "get": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/config(:any)/update/:id": {
      "put": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "assignee_employee_ids": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "employee_id": {
                        "type": "string",
                        "example": "@_Employee_Id"
                      }
                    }
                  }
                },
                "is_active": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/update-status/:id": {
      "put": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/config/(:any)/destroy/:id": {
      "delete": {
        "tags": [
          "expense-service-types"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/store": {
      "post": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "days": {
                  "example": "@_Integer"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/index": {
      "get": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record",
              "example": "@_Id_from_net_pay_terms"
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/dropdown": {
      "get": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/listing": {
      "get": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/update/:id": {
      "put": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "days": {
                  "example": "@_Integer"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/update-status/:id": {
      "put": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/net-pay-terms/destroy/:id": {
      "delete": {
        "tags": [
          "net-pay-terms"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-settings/index": {
      "get": {
        "tags": [
          "invoice settings"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-settings/update/:id": {
      "put": {
        "tags": [
          "invoice settings"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-email-templates/store": {
      "post": {
        "tags": [
          "invoice-email-templates"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "subject": {
                  "example": "@_String"
                },
                "template": {
                  "example": "@_String"
                },
                "to": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "cc": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "bcc": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "is_global": {
                  "example": "@_Boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-email-templates/index": {
      "get": {
        "tags": [
          "invoice-email-templates"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/invoice-email-templates/update/:id": {
      "put": {
        "tags": [
          "invoice-email-templates"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "subject": {
                  "example": "@_String"
                },
                "template": {
                  "example": "@_String"
                },
                "to": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "cc": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "bcc": {
                  "type": "array",
                  "items": {
                    "type": "Email Id",
                    "example": "@_email_id"
                  }
                },
                "is_global": {
                  "example": "@_Boolean",
                  "description": "true for allow and false for not allow"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/store": {
      "post": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_Boolean"
                },
                "description": {
                  "example": "@_String"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/listing": {
      "get": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/dropdown": {
      "get": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/update/:id": {
      "put": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_Boolean"
                },
                "description": {
                  "example": "@_String"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/updateStatus/:id": {
      "put": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/types/destroy/:id": {
      "delete": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/store": {
      "post": {
        "tags": [
          "immigration document types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_Boolean"
                },
                "referrable_type": {
                  "example": "@_Integer_upto_7_digits"
                },
                "description": {
                  "example": "String"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/listing": {
      "get": {
        "tags": [
          "immigration document types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          },
          {
            "in": "query",
            "name": "sort_column",
            "description": "column name is 'name' of the field and value is asc or desc",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "description": "A for asending and D for desending",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/dropdown": {
      "get": {
        "tags": [
          "immigration document types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "referrable_type",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number in 1,2,3,4,5,6,7",
              "example": "any_number_inBetween_1_to_7"
            }
          },
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/update/:id": {
      "put": {
        "tags": [
          "immigration case types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_Boolean"
                },
                "referrable_type": {
                  "example": "@_Integer_upto_7_digits"
                },
                "description": {
                  "example": "String"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/updateStatus": {
      "put": {
        "tags": [
          "immigration document types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_immigration_document_types_id"
                },
                "is_active": {
                  "example": "@_Boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/work-authorization/documents-types/destroy/:id": {
      "delete": {
        "tags": [
          "immigration document types"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/store": {
      "post": {
        "tags": [
          "groups"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "name": {
                  "example": "@_Alphanumeric",
                  "required": true
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive/ true or false"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "UUID",
                        "example": "@_Employee_Id"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/update/:id": {
      "put": {
        "tags": [
          "groups"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}",
                  "required": true
                },
                "name": {
                  "example": "@_Alphanumeric",
                  "required": true
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive/ true or false"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "UUID",
                        "example": "@_Employee_Id"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/updateStatus/:id": {
      "put": {
        "tags": [
          "groups"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/dropdown": {
      "get": {
        "tags": [
          "groups"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Not Mandatory"
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/index": {
      "get": {
        "tags": [
          "groups"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "The id of the job title",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Integer",
              "required": true,
              "example": "@_Id_from_groups"
            }
          }
        ],
        "responses": {}
      }
    },
    "/groups/destroy/:id": {
      "delete": {
        "tags": [
          "groups"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank <br>",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/store": {
      "post": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "role_name": {
                  "example": "@_Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "permission_id": {
                        "type": "integer",
                        "example": "@_Integer_Id_from_permissions"
                      },
                      "is_allowed": {
                        "type": "boolean",
                        "example": "boolean",
                        "description": "true for allow and false for not allow"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/index": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/permissions": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "Id of the particular record",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/dropdown": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "dropdown for roles",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/listing": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "object",
              "description": "Id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/update/:id": {
      "put": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "role_name": {
                  "example": "Alphanumeric"
                },
                "description": {
                  "example": "Not_Mandatory"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "permission_id": {
                        "type": "string",
                        "example": "@_Integer_Id_from_permissions"
                      },
                      "is_allowed": {
                        "type": "string",
                        "example": "true or false",
                        "description": "true for allow and false for not allow"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/update-status/:id": {
      "put": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "is_active": {
                  "example": "@_Boolean",
                  "description": "1 for active and 0 for inactive"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/role/destroy/:id": {
      "delete": {
        "tags": [
          "role"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/reminder-config/store": {
      "post": {
        "tags": [
          "reminder"
        ],
        "description": "reminder configuraton store api",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "reminder_name_id": {
                  "example": "@_integer"
                },
                "status": {
                  "example": "@_Boolean"
                },
                "content": {
                  "example": "@_string"
                },
                "group_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": "groupid"
                  }
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "occurance_order": {
                        "type": "integer",
                        "example": "@_1_or_2"
                      },
                      "number": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "cycle": {
                        "type": "string",
                        "example": "@_days_weeks_months"
                      },
                      "recurring_days": {
                        "type": "integer",
                        "example": "@_days"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/reminder-config/update/:id": {
      "put": {
        "tags": [
          "reminder"
        ],
        "description": "reminder configuraton update api ",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "reminder_referrable_id": {
                  "example": "@_integer"
                },
                "reminder_name_id": {
                  "example": "@_integer"
                },
                "status": {
                  "example": "@_Boolean"
                },
                "content": {
                  "example": "@_string"
                },
                "group_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": "groupid"
                  }
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": "@_id_on_occurances"
                      },
                      "reminder_referrable_id": {
                        "type": "integer",
                        "example": "@_id of the referrable"
                      },
                      "occurance_order": {
                        "type": "integer",
                        "example": "@_1_or_2"
                      },
                      "number": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "cycle": {
                        "type": "string",
                        "example": "@_days_weeks_months"
                      },
                      "recurring_days": {
                        "type": "integer",
                        "example": "@_days"
                      }
                    }
                  }
                },
                "deleted_reminder_occurance_id": {
                  "example": "ids in an array"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/reminder-config/update-status/:id": {
      "put": {
        "tags": [
          "reminder"
        ],
        "description": "reminder update status api",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "status": {
                  "example": "@_boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/reminder-config/index": {
      "get": {
        "tags": [
          "reminder"
        ],
        "description": "reminder configuraton index api",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "referrable_type",
            "schema": {
              "type": "object",
              "description": "id of the particular record",
              "example": "@_timesheet_invoice_expense-management_immigration_employee_payroll"
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-reminder-config/store": {
      "post": {
        "tags": [
          "reminder"
        ],
        "description": "self reminder configuraton store api",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_string"
                },
                "description": {
                  "example": "@_string"
                },
                "is_payroll_reminder": {
                  "example": "@_Boolean"
                },
                "reminder_date": {
                  "example": "@_date"
                },
                "reminder_time": {
                  "example": "@_time"
                },
                "pay_config_setting_id": {
                  "example": "@_integer"
                },
                "check_date": {
                  "example": "@_date"
                },
                "employee_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": "groupid"
                  }
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "occurance_order": {
                        "type": "integer",
                        "example": "@_1_or_2"
                      },
                      "number": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "cycle": {
                        "type": "string",
                        "example": "@_days_weeks_months"
                      },
                      "recurring_days": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "new_document_id": {
                              "type": "UUID",
                              "example": "@_Id_from_upload_document"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "UUID",
                        "example": "@_Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-reminder-config/update/:id": {
      "put": {
        "tags": [
          "reminder"
        ],
        "description": "self reminder configuraton update api ",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_string"
                },
                "reminder_referrable_id": {
                  "example": "@_integer"
                },
                "description": {
                  "example": "@_string"
                },
                "is_payroll_reminder": {
                  "example": "@_Boolean"
                },
                "reminder_date": {
                  "example": "@_date"
                },
                "reminder_time": {
                  "example": "@_time"
                },
                "pay_config_setting_id": {
                  "example": "@_integer"
                },
                "check_date": {
                  "example": "@_date"
                },
                "employee_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": "groupid"
                  }
                },
                "reminders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "reminder_referrable_id": {
                        "example": "@_integer"
                      },
                      "occurance_order": {
                        "type": "integer",
                        "example": "@_1_or_2"
                      },
                      "number": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "cycle": {
                        "type": "string",
                        "example": "@_days_weeks_months"
                      },
                      "recurring_days": {
                        "type": "integer",
                        "example": "@_days"
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "new_document_id": {
                              "type": "UUID",
                              "example": "@_Id_from_upload_document"
                            },
                            "id": {
                              "type": "UUID",
                              "example": "@_Id_from_upload_document"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-reminder-config/index": {
      "get": {
        "tags": [
          "reminder"
        ],
        "description": "reminder configuraton index api",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "object",
              "description": "id of the particular record"
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-reminder-config/listing": {
      "get": {
        "tags": [
          "reminder"
        ],
        "description": "reminder configuraton index api",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "date format",
              "description": "Random Number",
              "example": "date"
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-reminder-config/destroy/:id": {
      "delete": {
        "tags": [
          "reminder"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/store": {
      "post": {
        "tags": [
          "payroll"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Name_of_payroll_config_Settings"
                },
                "payroll_cycle_id": {
                  "example": "@_Id_from_cycles"
                },
                "from_date": {
                  "example": "@_Date"
                },
                "to_date": {
                  "example": "@_Date"
                },
                "check_date": {
                  "example": "@_Date"
                },
                "actual_check_date": {
                  "example": "@_Date"
                },
                "second_from_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_to_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_check_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_actual_check_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/update/:id": {
      "put": {
        "tags": [
          "payroll"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Name_of_payroll_config_Settings"
                },
                "payroll_cycle_id": {
                  "example": "@_Id_from_cycles"
                },
                "from_date": {
                  "example": "@_Date"
                },
                "to_date": {
                  "example": "@_Date"
                },
                "check_date": {
                  "example": "@_Date"
                },
                "actual_check_date": {
                  "example": "@_Date"
                },
                "second_from_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_to_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_check_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                },
                "second_actual_check_date": {
                  "example": "@_required_if_payroll_cycle_id_3"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/listing": {
      "get": {
        "tags": [
          "payroll"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/payroll-list": {
      "get": {
        "tags": [
          "payroll"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          },
          {
            "in": "query",
            "name": "payConfigSettingId",
            "schema": {
              "type": "integer",
              "description": "add it to the condition"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "integer",
              "description": " 1 is yet to generate, 2 is drafted, 3 is submitted, 4 is skippedn"
            }
          },
          {
            "in": "query",
            "name": "pending",
            "schema": {
              "type": "integer",
              "description": " 1 for pending configurations"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/dropdown": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "dropdown for payrole config settings",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/index": {
      "get": {
        "tags": [
          "payroll"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "payroll_config_settings_id",
            "schema": {
              "type": "object",
              "description": "@_payroll_config_settings_id"
            }
          }
        ],
        "responses": {}
      }
    },
    "/payroll-config-settings/previous": {
      "get": {
        "tags": [
          "payroll"
        ],
        "description": " @ is required <br> Not_Mandatory If you want to remove or leave blank",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          }
        ],
        "responses": {}
      }
    },
    "/chat-upload": {
      "post": {
        "tags": [
          "Chat Document Upload"
        ],
        "description": "",
        "parameters": [
          {
            "name": "files",
            "type": "file",
            "consumes": [
              "multipart/form-data"
            ],
            "description": "file to upload",
            "in": "formData"
          }
        ],
        "responses": {}
      }
    },
    "/self-onboarding-documents/store": {
      "post": {
        "tags": [
          "self-onboarding-documents"
        ],
        "description": "self-onboarding-documents store",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "is_active": {
                  "example": "@_true_or_false"
                },
                "is_editable": {
                  "example": "@_true_or_false"
                },
                "description": {
                  "example": "@_Alphanumeric"
                },
                "information": {
                  "example": "@_alphanumeric"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-onboarding-documents/update": {
      "put": {
        "tags": [
          "self-onboarding-documents"
        ],
        "description": "self-onboarding-documents update",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "name": {
                  "example": "@_Alphanumeric"
                },
                "self_onboarding_document_id": {
                  "example": "@_integer"
                },
                "is_active": {
                  "example": "@_true_or_false"
                },
                "is_editable": {
                  "example": "@_true_or_false"
                },
                "information": {
                  "example": "@_alphanumeric"
                },
                "description": {
                  "example": "@_Alphanumeric"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-onboarding-documents/dropdown": {
      "get": {
        "tags": [
          "self-onboarding-documents"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-onboarding-documents/update-status": {
      "put": {
        "tags": [
          "self-onboarding-documents"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "id": {
                  "example": "@_self_onboarding_id"
                },
                "is_active": {
                  "example": "@_boolean"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/self-onboarding-documents/listing": {
      "get": {
        "tags": [
          "self-onboarding-documents"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/ocr-document/dropdown": {
      "get": {
        "tags": [
          "ocr-document"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/ocr-mapping/store": {
      "post": {
        "tags": [
          "ocr-mapping"
        ],
        "description": "ocr-mapping store",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "ocr_document_id": {
                  "example": "@_integer"
                },
                "document_id": {
                  "example": "@_integer"
                },
                "type": {
                  "example": "@_1_or_2"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/ocr-mapping/update": {
      "put": {
        "tags": [
          "ocr-mapping"
        ],
        "description": "ocr-mapping update",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "ocr_mapping_id": {
                  "example": "@_integer"
                },
                "ocr_document_id": {
                  "example": "@_integer"
                },
                "document_id": {
                  "example": "@_integer"
                },
                "type": {
                  "example": "@_1_or_2"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/ocr-mapping/listing": {
      "get": {
        "tags": [
          "ocr-mapping"
        ],
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/activity/configuration/listing": {
      "get": {
        "tags": [
          "activity"
        ],
        "description": "activity listing api",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": "{{$guid}}"
            }
          },
          {
            "in": "query",
            "name": "referrable_id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Random Number",
              "example": " 1-employee category, 2-department, 3-educational level, 4-employee team, 5-relationship type, 6-skills, 7-visa type, 8-visa document type, 9-payment mode, 10-write off, 11-invoice taxes, 12-invoice configuration, 13-countries, 14-states, 15-job title, 16-timesheet configuration, 17-self service types, 18- net pay terms, 19-Placement Documents, 20-aprroval configuration, 21-organization, 22-organization contacts, 23-payroll config setting, 24-prefix, 25-expense types, 26-roles, 27-reminders, 28 - Notification, 29 -Timesheet Approval Configuration, 30 - Employee Personal Document, 31 - On-boarding Document Type, 32 - Client Documents,  33 -End Client Documents, 34 - Raise Invoices Documents, 35 - Off-boarding CheckList, 36 - Announcemnet(slugs: 1-web, 2- mobile), 37 - groups"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "description": "The number of items to skip before starting to collect the result set"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer",
              "description": "The numbers of items to return"
            }
          }
        ],
        "responses": {}
      }
    },
    "/announment/(:any)/store": {
      "post": {
        "tags": [
          "Announcement"
        ],
        "description": "Announcement store(slugs: web, mobile)",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "new_document_id": {
                        "type": "UUID",
                        "example": "@_Id_from_upload_document"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/announment/(:any)/publish/:id": {
      "put": {
        "tags": [
          "Announcement"
        ],
        "description": "Announcement Publish(slugs: web, mobile)",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                },
                "publish_date": {
                  "example": "@_Organization_Date_Format_current_date"
                }                
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/announment/(:any)/listing": {
      "get": {
        "tags": [
          "Announcement"
        ],
        "description": "Announcement Listing(slugs: web, mobile)",
        "parameters": [
          {
            "in": "query",
            "name": "request_id",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/announment/(:any)/delete/:id": {
      "delete": {
        "tags": [
          "Announcement"
        ],
        "description": "Announcement Delete(slugs: web, mobile)",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "properties": {
                "request_id": {
                  "example": "{{$guid}}"
                }               
              }
            }
          }
        ],
        "responses": {}
      }
    }
  }
}