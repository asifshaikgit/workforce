exports.responseMessages = {

  /* Common messages */
  common: {
    requestIdRequired: 'Request id is required',
    updateIdRequired: 'Update id is required',
    updateIdNotExist: 'Update id doesnot exist',
    somethindWentWrong: 'Some thing went wrong. Please try again some time later',
    subDomainNameRequired: 'sub domain name required',
    subDomainNameNotExists: 'sub domain name does not exists',
    tenantIdRequired: 'tenant id required',
    failedToCreate: 'Failed to create an entry',
    failedToUpdate: 'Failed to update an entry',
    failedToFetch: 'Failed to fetch the entry',
    failedToDelete: 'Failed to update an entry',
    success: 'Success',
    fail: 'Failed',
    invalidEmailId: 'No data with given Email Id',
    inavalidOtp: 'Wrong OTP',
    noRecordFound: 'No data available',
    subdomainInvalid: 'invalid subdomain name',
    loginRequired: 'Please login again to access the application',
    addedSuccessfully: 'Added Successfully',
    updatedSuccessfully: 'Updated Successfully',
    deletedSuccessfully: 'Deleted Successfully',
    unAuthorisedAccess: "You don't have permission to perform this operation. Please contact your admin",
    contractorConsultantNotAllowed: 'Consultant / Contractor are not allowed to perform this operation',
    fromAndToDateRequired: ' from Date and to Date is required',
    invalidOCRDocumentId: 'Invalid OCR document id',
    ocrDocumentIdRequired: 'OCR document Id Required',
    idRequired: 'ID required',
    IdInvalid: 'Invalid ID',
    IdNotExists: 'ID does not exists'
  },
  /* Main Dashboard Error Messages */
  mainDashboard: {
    cashFlowViewTypeRequired: 'Cash Flow View Type Required',
    cashFlowViewTypeInvalid: 'Invalid Cash Flow View Type',
    payrollSettingIdRequired: 'Payroll Setting Id is required',
    payrollSettingIdInvalid: 'Invalid Payroll setting Id',
  },
  /* Common messages */
  prefixes: {
    prefixesPrefixNameRequired: 'Prefix Name Required',
    prefixesSeparatorRequired: 'Separator Required',
    prefixesPrefixNameInvalid: 'Invalid Prefix Name',
    prefixesNumberRequired: 'Number Required',
    prefixesIdNotFound: 'Prefixes Id Not Found',
    prefixesIdRequired: 'Prefixes Id Required',
    prefixesNotFound: 'Prefixes Name Not Found',
  },
  client: {
    clientNameRequired: 'Client Name Required',
    clientNameInvalid: 'Invalid Client name',
    clientIdRequired: 'Client Id Required',
    clientIdInvalid: 'Invalid Client Id',
    clientNameExists: 'Client name already exists',
    clientIdExists: 'Client id Already Exists',
    clientReferanceIdInvalid: 'Reference Id invalid',
    clientReferanceIdRequired: 'Reference Id required',
    clientReferanceIdExists: 'Reference Id already exists',
    invalidReferencesObject: 'Invalid Reference Array Object',
    addressLineOneRequired: 'Address Line One is Required',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    addressTypeInvalid: 'Address type is Invalid',
    contactFirstNameRequired: 'First Name is Required',
    contactFirstNameInvalid: 'First Name is Invalid',
    contactLastNameInvalid: 'Last Name is Invalid',
    contactLastNameRequired: 'Last Name is Required',
    contactmiddleNameInvalid: 'Last Name is Invalid',
    emailRequired: 'Email is Required',
    emailInvalid: 'Email is Invalid',
    contactNumberRequired: 'Contact is Required',
    InvalidExtension: 'Invalid Extension Number',
    InvalidMobileNumber: 'Invalid Mobile Number',
    balanceNotNumber: 'Balance should be a Number',
    startDateRequired: 'Start date is Required',
    startDateInvalid: 'Start date is Invalid',
    InvalidPaymentTerms: 'Payment Mode Id is not valid',
    InvalidInvoiceId: 'Invoice cycle Id is not valid',
    InvalidWeekStart: 'Week start Day is not valid',
    InvalidTimesheetCycle: 'Timesheet cycle Id is not valid',
    timesheetCycleRequired: 'Timesheet cycle is Required',
    paymentTermsRequired: 'Payment Terms is required',
    invoiceRequired: 'Invoice Cycle is required',
    employeeAlreadyPlaced: 'Employee already placed',
  },

  /* Response messages for login */
  login: {
    loginError: 'Please login to access the application',
    invalidAccess: 'You are not allowed to perform this action',
    invalidUserId: 'Invalid User ID',
    errorOccured: 'An error occurred. Please Try again.',
    tokenRequired: 'Token missing in the headers',
    tokenInvalid: 'Token expired. Please login to access the application.',
    notAllowedToken: 'Your token is not allowed to access the application. Please login again.',
    accountNotFound: 'Your Email Id Not Registered With Us. Please contact admin.',
    accountInActive: 'Your account is either suspended or inactive. Contact admin to re-activate your account.',
    loginOutError: 'Please login to perform this action',
    accountLocked: 'Your account is locked for 15 minutes due to multiple login attempts.',
    passwordMismatch: 'Password is not matching with your email ID',
    passwordLengthError: 'Password must be minimum 6 characters length',
    otpRequired: 'OTP Required',
    otpError: 'Invalid otp',
    otpAlreadyVerified: 'OTP already verified',
    fail: 'Failed',
    emailIdRequired: 'Email ID required',
    passwordRequired: 'Password required',
    passwordInvalid: 'Password Invalid',
    confirmPasswordRequired: 'Confirm Password required',
    oldPasswordRequired: 'Password required',
    emailIdInvalid: 'Invalid email ID',
    confirmPasswordMismatch: 'Passwords do not match',
    subDomainNameRequired: 'sub domain name required',
    subDomainNameNotExists: 'sub domain name does not exists',
    loginIdRequired: 'login id is required',
    loginIdInvalid: 'login id is Invalid',
    requestId: 'request Id required',
    changePassword: 'please change password',
    passwordExpied: 'Please reset your password',
    contractorConsultantNotAllowed: 'Access to the application is restricted for consultants and contractors. Kindly reach out to your administrator for assistance.',
  },
  /* Response messages for login */

  /* Response messages for registration */
  registration: {
    firstNameInvalid: 'First name invalid',
    firstNameRequired: 'First name required',
    middleNameInvalid: 'Middle name invalid',
    lastNameInvalid: 'Last name invalid',
    lastNameRequired: 'Last name required',
    emailIdRequired: 'Email ID required',
    emailIdExists: 'Email ID already exists',
    emailIdNotExists: 'Email ID not exists',
    emailIdInvalid: 'Invalid email id',
    emailIdNotAllowed: 'Email ID not allowed',
    contactNumberRequired: 'Contact Number Required',
    contactNumberInvalid: 'Contact Number invalid',
    contactNumberExists: 'Contact Number already exists',
    domainNameRequired: 'Domain Name Required',
    domainNameInvalid: 'Domain Name Not Found',
    tenantNameRequired: 'Tenant Name Required',
    tenantNameInvalid: 'Invalid Tenant Name',
    checkMailTenantDetails: 'Please check your mail for login details',
    organizationNameRequired: 'Sub domain name required',
    organizationIdRequired: 'organization Id Required',
    organizationNameExists: 'Organization already exists',
    subDomainNameInvalid: 'Only Characters and numbers are allowed for Sub domain name.',
    subDomainNameSpaceContains: 'Space not allowed in sub domain name',
    subDomainNameExists: 'Sub Domain Already Exists',
    maxDomainLimitReached: 'Maxi limit reached for the domain. Please reach us for more information',
    accountAlreadyVerified: 'Your account already verified. Please check your mail for login details.',
    subdomainCreationFailed: 'Failed to create Sub Domiain. Please try again.',
    otpRequired: 'OTP is mandatory',
    otpInvalid: 'Please enter a valid OTP',
    newSuperAdminCreationFailed: 'Failed to create a new super admin account',
    failedToSendOtp: 'Failed to send OTP',
    organizationIdInvalid: 'organization id is Invalid',
    organizationIdNotExists: 'organization Id Not Exists',
    invoiceThemeIdRequired: 'Invoice theme Id Required',
    invoiceThemeIdInvalid: 'Invoice Theme Id Should be Integer',
    invoiceThemeIdNotExists: 'invoice Theme Id Not Exists',
    logoDocumentNameRequired: 'logo document name required',
    logoDocumentNameInvalid: 'logo document name Invalid',
    signatureRequired: 'signature required',
    dateFormatRequired: 'Organization date format required',
    currencySymbolRequired: 'Organization Currency Symbol required',
    organizationFaxNumberRequired: 'Organization Fax Number is Required',
    websiteURLReequired: 'website URL is Reequired',
    payableToRequired: 'Payable To is Required',
    additionalInformationRequired: 'Additional Information is Required'
  },
  /* Response messages for registration */

  /* Response messages for invited employee onboarding */
  invitedEmployee: {
    invalidDocument: 'Invalid Document Sent for Approval',
    uploadDocumentsRequired: 'Upload Documents are Required',
    allowedOnlyConsultant: 'Employeer Can Send Invite Link Only to Consultant',
    invalidOfferLetterId: 'Invalid Offer Letter Id',
    invitedEmployeeStatusInvalid: 'Invited Employee Status Invalid',
    invitedEmployeeIdNotExists: 'Invited Employee Id Not Exists',
    invitedEmployeeLinkExpired: 'Invited Employee link Expired',
    inviteEmployeeIdInvalid: 'Invite Employee Id Invalid',
    inviteEmployeeIdRequired: 'Invite Employee Id Required',
    requiredI9DocumentId: 'I9 Document is required',
    requiredW4DocumentId: 'W4 Document is required',
    documentNotFound: 'Document Not Found',
    invalidI9DocumentId: 'Invalid I9 Docuemnt Id',
    invalidW4DocumentId: 'Invalid W4 Docuemnt Id',
    documentDataRequired: 'Document Data Required',
    employeeAlreadyExists: 'Employee Already Exists in Employee Module',
    invitationAlreadySent: 'Invitation Alerady sent for this email id',
    requiredOfferLetter: 'Please upload the offer letter',
    mobileNumberRequired: 'mobile number required',
    AlreadyAcceptedOffer: 'Offer is Accepted ALready',
    mobileNumberInvalid: ' mobile number must be a number'
  },
  /* Response messages for invited employee onboarding */

  /* Response messages for employee offboarding */
  offBoardEmployee: {
    idNotExist: 'Off Boarding Invalid Udpate Id',
    inValidUpdateId: 'Off Boarding Invalid Udpate Id',
    invalidDiableUserAccessValue: 'Invalid Value for disabled user access across apps',
    invalidKeyValue: 'Invalid Key Value to update employee offboard data',
    updateIdNotExist: 'Empoloyee Off Board update Id not exist',
    settlementModeisRequired: 'Settle Mode is required',
    invalidSettlementMode: 'Invalid Settlement Mode value',
    invalidDeleteEmailIdOn: 'Invalid Delete Email Id On date',
    employeeIdRequired: 'Employee id is required',
    employee_IdInvalid: 'Employee id is not valid',
    employeeIdNotExists: 'Employee Id Not Exists',
    employeeIdNotFound: 'Employee id not found',
    lastWorkingDayRequired: 'Last Working Day is required',
    inValidLastWorkingDay: 'Last Working Day is In valid',
    placementEndDateInvalid: 'Invalid Placement End Date',
    placementEndDateLWD: 'Placement End Date shouold not be greater than Last Working Day',
    invalidDisableUserAccess: 'InValid Disable User Access Across Apps',
    revocationDateInvalid: 'Send Revocation Date is Invalid',
    revocationDateInvalidLWD: 'Revocation Date should not be Future Date',
    inValidEmailSentTo: 'Email Sent to is Invalid',
    deleteEmailDeletedOnInvalid: 'Invalid Mail Deleted On Date',
    deleteEmailDeletedOnInvalidCurrent: 'Mail Deleted On Date should not be greater than Last working Date',
    invalidReimbursementPayment: 'Invalid Reimbursement Payment',
    invalidDeductionPayment: 'Invalid Deduction Payment',
    sendRevocationDocumentInvalid: 'Send Revocation Proof of Document Id is invalid',
    sendRevocationDocumentIdNotExist: 'Send Revocation Proof of Docuemnt Id Not exist',
    deleteMailDocumentInvalid: 'Delete Mail Proof of Document Id is invalid',
    deleteMailDocumentIdNotExist: 'Delete Mail Proof of Docuemnt Id Not exist'
  },
  /* Response messages for employee offboarding */

  /* Response messages for employee onboarding */
  employee: {
    employeeFirstNameRequired: 'First Name Required',
    employeeIdIsInvalid: 'employee Id is Invalid',
    employeeIdNotExists: 'employee Id Not Exists',
    employeeIdsArrayRequired: 'Employee IDs array required',
    employeeLastNameRequired: 'Last Name Required',
    employeeFirstNameInvalid: 'Invalid First name',
    employeeReferenceNameInvalid: 'Invalid Reference name',
    employeeLastNameInvalid: 'Invalid Last name',
    employeeMiddleNameInvalid: 'Invalid Middle name',
    invalidEmployeeName: 'Invalid Employee name',
    employeeIdRequired: 'Employee Id Required',
    dobRequired: 'Date of birth is Required',
    dateOfJoinRequired: 'Joining date is Required',
    dateOfJoinInvalid: 'Joining date is Invalid',
    genderRequired: 'Gender is Required',
    dobInvalid: 'Date of birth is Invalid',
    employeeIdInvalid: 'Invalid Employee Id',
    employeeNameExists: 'Employee name already exists',
    employeeIdExists: 'Employee id already Exists',
    employeeReferanceIdInvalid: 'Employee referance Id invalid',
    employeeReferanceIdRequired: 'Employee referance Id required',
    employeeReferanceIdExists: 'Employee referance Id already exists',
    invalidReferencesObject: 'Invalid References Array Object',
    addressLineOneRequired: 'Address Line One is Required',
    addressLineLength: 'Address Line max length is 225 characters',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    emailRequired: 'Email is Required',
    employmentTypeRequired: 'Employment Type is Required',
    employmentCategoryRequired: 'Employment Category is Required',
    joiningDateRequired: 'Joining Date is Required',
    ssnRequired: 'SSN is Required',
    visaRequired: 'Visa type is Required',
    referralTeamRequired: 'Referral Team is Required',
    emailInvalid: 'Email is Invalid',
    contactNumberRequired: 'Contact is Required',
    InvalidMobileNumber: 'Invalid Mobile Number',
    InvalidEmailAddress: 'Invalid Email address',
    InvalidAltEmailAddress: 'Invalid alternate Email address',
    emailAddressReqired: 'Email address Required',
    descrption: 'description is required',
    isActive: 'isActive is required',
    InValidIsActive: 'InValid IsActive',
    openingBalanceRequired: 'Opening Balance is Required',
    openingBalanceInvalid: 'Opening Balance is Invalid',
    payrollConfigIdRequired: 'Payroll config id is required',
    payrollConfigIdInvalid: 'Invalid payroll config Id',
    payrollConfigIsNotConfigured: 'Payroll Configuration is not Configured for this Employee.',
    balanceAmountRequired: 'Balance amount is required',
    balanceAmountInvalid: 'Invalid Balance amount',
    standardPayAmountInvalid: 'Invalid Standard Pay Amount',
    hoursWorkedInvalid: 'Invalid hours Worked',
    alreadyEverified: 'Employee already E-Verified',
    lastWorkingDayRequired: 'Last working Date Required',
    lastWorkingDayInvalid: 'Invalid Last working Date',
    employeeDefaulyPay: 'Default Pay Type is not set for the employee',
    selfOnbaording: {
      domainNameRequired: 'Domain Name Required',
      domainNameInvalid: 'Domain Name Not Found',
      tenantNameRequired: 'Tenant Name Required',
      tenantNameInvalid: 'Invalid Tenant Name',
      checkMailTenantDetails: 'Please check your mail for login details',
      subDomainNameRequired: 'Sub domain name required',
      subDomainNameInvalid: 'Only Characters and numbers are allowed for Sub domain name.',
      subDomainNameSpaceContains: 'Space not allowed in sub domain name',
      subDomainNameExists: 'Sub Domain Already Exists',
      maxDomainLimitReached: 'Maxi limit reached for the domain. Please reach us for more information',
      notActive: 'Your account is either suspended or inactive. Contact admin to re-activate your account.',
    },
    behalfOnboarding: {
      employmentNotArray: 'employment type must be array',
      categoryMustBeArray: 'Category must be Array',
      visaMustBeArray: 'Visa must be Array',
      alternateContactNumber: 'Alternate contact number is Invalid',
      isActiveRequired: 'is active required',
      isActiveInvalid: 'is active Invalid',
      roleIdRequired: 'role id is required',
      employeeIdRequired: 'employee id is required',
      employee_IdInvalid: 'employee id is not valid',
      employeeIdNotFound: 'employee id not found',
      actionNotAllowed: 'You are nor Allowed to perform this action',
      stateIdInvalid: 'State ID Invalid',
      stateIdNotExists: 'State ID does not exists',
      firstNameRequired: 'First Name Required',
      firstNameInvalid: 'First Name Only 33 Characters with white space are allowed',
      associatedAppNamesInvalid: 'Associated App Name allows only Characters with white space.',
      middleNameRequired: 'Middle Name Required',
      middleNameInvalid: 'Middle Name Only 33 Characters with white space are allowed',
      lastNameRequired: 'Last Name Required',
      lastNameInvalid: 'Last Name Only 33 Characters with white space are allowed',
      orgNameInvalid: 'organization name invalid',
      emailIdRequired: 'Email ID Required',
      emailIdNotAllowed: 'Email ID not allowed to create an account',
      emailIdInvalid: 'Email ID Contain Invalid Characters',
      invalidWorkEmailId: 'Invalid work email id',
      emailIdExists: 'Email ID Already Exists',
      alternateEmailIdInvalid: 'Alternate Email ID Contain Invalid Characters',
      passwordRequired: 'Password Required',
      passwordInvalid: 'Password should be combination of one uppercase , one lower case, one digit, one special character and min 8 , max 20 char long',
      confirmPasswordRequired: 'Confirmation password required',
      passwordConfirmInvalid: 'Password Confirmation does not match password',
      oldPasswordRequired: 'Old Password required',
      invalidOldPassword: 'Invalid old password',
      phoneNumberRequired: 'Phone number required',
      phoneNumberInvalid: 'Phone number must be a number',
      phoneNumberExists: 'Phone number already exists',
      genderRequired: 'Gender required',
      genderInvalid: 'Gender is Invalid',
      nameRequired: 'Name required',
      nameInvalid: 'Special characters are not allowed',
      thirtyThreeCharOnly: 'Name Only 33 Characters with white space are allowed',
      statusRequired: 'Active status required',
      descriptionRequired: 'description required',
      symbolRequired: ' Currency symbol required',
      nameExists: 'Name already exists',
      statusInvalid: 'Invalid active status',
      descriptionInvalid: 'Invalid description',
      invalidRoleId: 'Invalid role id',
      requiredRoleId: 'Role id is required',
      roleIdNotExists: 'Role id does not Exists',
      invalidDepartmentId: 'Invalid Department Name',
      invalidImageId: 'Invalid profile image id',
      requiredDepartmentId: 'Department Name is required',
      invalidDob: 'Invalid DOB',
      requiredDob: 'DOB Required',
      dateOfJoiningRequired: 'Date of joining required',
      dateOfJoiningInvalid: 'Invalid Date Of joining',
      reportingEmployeeIdRequired: 'Reporting Employee Required',
      reportingEmployeeIdInvalid: 'Reporting Employee Invalid',
      reportingEmployeeIdNotExists: 'Reporting Employee does not exists',
      invalidReportingEmployeeId: 'Invalid Repoting Employee',
      stateRequired: 'State name Required',
      stateIdRequired: 'State Id Required',
      stateAlreadyExists: 'State name already exists',
      stateIdInactive: 'Inactive State Name',
      invalidStateId: 'Invalid state name',
      countryInactive: 'Inactive Country Name',
      countryRequired: 'Country Required',
      countryInvalid: 'Invalid Country Name',
      invalidCountryId: 'Invalid country',
      countryIdRequired: 'Country Id Required',
      countryIdInvalid: 'Invalid Country Id ',
      countryIdNotExists: 'Country Id does not Exists',
      cityRequired: 'City Required',
      cityInvalid: 'City Only 50 AlphaNumeric characters are allowed',
      referredNameRequired: 'Referred Name Required',
      referredNameInvalid: 'Reffered name Special characters are not allowed',
      addressRequired: 'Address array required',
      addressIdRequired: 'Address ID Required',
      addressIdInvalid: 'Address ID invalid',
      addressOneRequired: 'Address Line one Required',
      addressOneInvalid: 'Address Line one must not be greater than 255 characters in length',
      addressTwoRequired: 'Address Line two Required',
      addressTwoInvalid: 'Address Line two must not be greater than 255 characters in length',
      ssnRequired: 'SSN Required',
      ssnInvalid: 'SSN format Invalid',
      ssnAlreadyExists: 'SSN already exists',
      referralTeamRequired: ' Referral team is required',
      referralTeamIdNotExists: ' Referral team Id does not exists',
      referralTeamInvalid: 'Invalid Team. Team Must be Internal, Consultant/Contractors, Social Account, Other Source',
      referralNameRequired: ' Referral name is required',
      referralNameInvalid: 'Referral Name is invalid',
      referralSourceInvalid: 'Referral source is invalid',
      referralIdRequired: ' Referral ID is required',
      referralIdNotExists: 'Refernece Employee Id does not exists',
      zipCodeRequired: ' Zip code / Pincode Code Required',
      zipCodeInvalid: 'Invalid Zip code / Pincode',
      requiredEmployeeId: 'Employee id is required',
      invalidEmployeeId: 'employee Id not exists',
      currentAddressIdRequired: 'Current Address ID is Required',
      currentAddressIdInvalid: 'Current Address ID is Invalid',
      CurrentAddressNotExists: 'Current Address ID does not exists',
      projectExists: 'employee is already in a placement please change the end date',
      employeeIdNotExists: 'Employee id does not exists',
      employeeIdInvalid: 'Employee id is invalid',
      invalidConsultantId: 'Invalid Consultant id',
      rankRequired: 'Rank required',
      rankInvalid: 'Rank must be a number',
      rankOrder: 'Invalid rank order',
      rankDuplicate: 'Rank cannot be duplicated',
      documentCategoryIdInvalid: 'Invalid document category ID',
      documentCategoryIdRequired: 'Document category ID required',
      employeeRegisteredIdRequired: 'Employee registered ID Required',
      employeeRegisteredIdAlreadyExists: 'Employee registered already exists',
      invalidUSCitizen: 'Invalid Employee US Citizen Status. It aceepts only boolean',
      requiredUSCitizen: 'Employee US Citizen Status Required',
      visaTypeIdRequired: 'Visa Type Id Required',
      visaTypeIdInvalid: 'Visa Type Id Invalid',
      visaTypeIdNotExists: 'visa Type Id does not exists',
      employmentTypeIdRequired: 'Employment Type Id Required',
      employmentTypeIdNotExists: 'Employment Type Id does not exists',
      employmentMustBeArray: 'Employment Type must be array',
      employeeCategoryIdRequired: 'Employee Category Id Required',
      employeeCategoryIdInvalid: 'Invalid Employee Category ID',
      employeeCategoryIdNotExists: 'Employee category Id does not exists',
      teamIdRequired: 'Team Id Required',
      teamIdInvalid: 'Invalid Team Id',
      teamIdNotExists: 'Team Id does not exists',
      isEnableLoginRequired: 'Enable login is required',
      isEnableLoginIsInvalid: 'Invalid enable login. It aceepts only boolean',
      isSuperAdminRequired: 'Is a super admin Required',
      isSuperAdminIsInvalid: 'Invalid super admin allow . It aceepts only boolean',
      referralEmployeeIdInvalid: 'referral employee id is invalid',
      departmentIdInvalid: 'department id invalid',
      departmentIdRequired: 'department id required',
      departmentIdNotExists: 'department id does not Exists ',
      employmentTypeId: 'employment type Id required',
      employmentTypeIdInvalid: 'employment type Id Invalid',
      unabletodisable: 'unable to disable employee',
      endDateNotCorrect: 'End date should be less than today\'s date',
      rejoinDateRequired: 'Rejoin date is required',
      alreadEnabled: 'Employee is already enabled',
      invalidRejoinDate: 'Please enter a valid date',
      invalidRehireDate: 'Please ensure rehire date is greater than Last working day',
      relievingDateRequired: 'Relieving Date Required',
      relievingDateInvalid: 'Relieving Date Invalid',
      invalidRelievingDate: 'Relieving Date format should be YYYY-MM-DD',
      invalidDocumentFormat: 'Document format is invalid',
      enablePayrollInvalid: 'Invalid enable payroll. It aceepts only boolean',
      enablePayrollRequired: 'Enable payroll is required',
      enableBalancelInvalid: 'Invalid enable Balance Sheet. It aceepts only boolean',
      enableBalanceRequired: 'Enable Balance Sheet is required',
      openingBalanceisInvalid: 'Opening balance should be Numeric',
      dobInvalid: 'Invalid DOB',
      zipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
      linkedinUrlInvalid: 'Invalid linkedin url',
      twitterUrlInvalid: 'Invalid twitter url',
      bloodGroupInvalid: 'Invalid blood group',
      maritalStatusInvalid: 'Invalid marital status',
      isOnlyApprover: 'User is the Only approver for ',
      prefarableVendorInvalid: ' Invalid prefarable vendor Id',
      prefarableVendorNotExists: 'prefarable vendor Id does not exists',
      vendorPriceHourRequired: 'vendor price per hour required',
      vendorPriceHourInvalid: 'Invalid vendor price per hour',
      isUsEmployeeRequired: 'Is us-citizen is Required',
      isUsEmployeeInvalid: 'Is us-citizen is Invalid',
      draftStageRequired: 'Draft stage is Required',
      draftStageInvalid: 'Draft stage is Invalid, it must be in General Details or Documents or Pay Configuration',
      invalidStatus: 'Invalid status, status must be Active or In Active',
      invalidSortOrder: 'Invalid sort order',
      invalidSortColumn: 'Invalid sort column',
    },
    skills: {
      requestId: 'Request Id is required',
      skillsRequired: 'Skills required',
      skillNameRequired: 'Skills Name required',
      invalidSkillName: 'Invalid Skills Name',
      yearsOfExperienceRequired: 'Years of experience required',
      invalidYearsOfExperience: 'Invalid Years of experience',
      certificateDate: 'Certificate Date is Required',
      skillCertificationRequired: 'Skill certification required',
      skillStatusRequired: 'certification Status required',
      invalidSkillsId: 'Invalid employee Skills ID',
      noMatchingSkillDetails: 'no matching skills record for the following employee',
      skillStatusInvalid: 'Invalid certification Status',
      skillsIdRequired: 'Skills ID required',
      skillsIdNotExists: 'Skills ID does not exists',
      invalidSkillId: 'Invalid Skill Name',
      invalidDate: 'Please ensure certification date is not in future',
      experienceYearsInvalid: 'invalid value for experience years',
      certificationNameInvalid: 'Certification name can only contain letters and spaces',
      certificationURLInvalid: 'Please enter a valid certificate URL',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      experienceInvalid: 'Please enter valid Experience',
      expertiseInvalid: 'Please enter a valid Expertise'
    },
    educationDetails: {
      educationDetailsIdInvalid: 'education details id is invalid',
      noMatchingDetailsEducation: 'No matching education details Id for the following employee',
      educationLevelIdInvalid: 'Invalid education level Id ',
      requestId: 'Request Id is required',
      educationDetailsRequired: 'Education details required',
      employeeIdRequired: 'Employee ID required',
      employeeIdExists: 'Employee ID already exists',
      employeeIdNotExists: 'Employee ID not exists',
      filedOfStudyRequired: 'Field of study required',
      filedOfStudyInvalid: 'Field of study Invalid',
      invalidFieldOfStudy: 'Invalid Field of study',
      degreeTypeIdRequired: 'Degree Type Id required',
      universityRequired: 'University Name required',
      startDateRequired: 'Start Date required',
      endDateRequired: 'End Date required',
      invalidStartDate: 'Invalid Start date',
      invalidEndDate: 'Invalid End date',
      educationIdRequired: 'Employee Education ID required',
      invalidEducationId: 'Invalid Employee education ID',
      invalidEducationDetailsId: 'Invalid Employee education Details ID',
      commentRequired: 'Comment Required',
      certificateRequired: 'Document required',
      certificateNameRequired: 'Document name required',
      invalidDegreeId: 'Invalid Degree Type ID',
      invalidUniversityName: 'Invalid University Name',
      stateRequired: 'State name Required',
      stateInvalid: 'State name can only contain letters and spaces',
      countryIDRequired: 'Country ID Required',
      countryIDInvalid: 'Country ID Invalid',
      countryIDNotExists: 'Country ID Not Exists',
      educationDetailsIdRequired: 'Education Details ID required',
      educationDetailsIdNotExists: 'Education Details ID not exists',
      educationLevelRequired: 'Education Level id Required',
      educationLevelIdNotExists: 'Education Level id not exists',
      invalidReferencesObject: 'Invalid References Object',
      universityNameInvalid: 'Invalid University Name',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      percentageRequired: 'Percentage Required',
      percentageInvalid: 'Percentage Invalid',
    },
    i94Details: {
      documentsNotArray: 'Documents should be array',
      invalidData: 'Please verify and resubmit the form as some fields have not been filled in or contain invalid data',
      noMatchingDetailsi94: 'no matching record of i94 id for following employee',
      documentNumberRequired: 'i94 Number is Mandatory',
      validFromRequired: 'Valid From Required',
      validTillRequired: 'Valid Till Required',
      InvalidDateValidTill: 'Please ensure that the date of expiry is later than the date of issue.',
      i94DetailsIdRequired: 'I94 Details ID Required',
      I94DetailsIdInvalid: 'Invalid I94 Details ID',
      descriptionRequired: 'Description Required',
      statusRequired: 'Status Required',
      statusInvalid: 'Invalid Status',
      i94DetailsIdNotFound: 'I94 Details ID Not Found',
      InvalidDateValidFrom: 'Invalid Date Valid From',
      expiryTypeRequired: 'Expiry Type is Required',
      expiryTypeInvalid: 'Expiry Type is Invalid',
      expiryTypeShouldBe: 'Expiry Type Should be 1 or 2',
      documentNumber: 'Document Number Required',
      documentNumberInvalid: 'Invalid Document Number',
      documentNumberAlreadyExists: 'Document Number already exists',
      invalidReferencesObject: 'Invalid References Object',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      employeeI94: 'employee already have an active I94',
      issuedCountryRequired: 'issued country id required',
      issuedCountryInvalid: 'issued country id invalid',
      issuedCountryNotExist: 'issued country not exists',
      placeBirthInvalid: 'place of birth is invalid',
      placeIssueInvalid: 'place of issue is invalid',
    },
    visaDetails: {
      invalidData: 'Please verify and resubmit the form as some fields have not been filled in or contain invalid data',
      noMatchingDetailsVisa: 'no matching record of visa details id for following employee',
      validFromRequired: 'Valid From Required',
      validTillRequired: 'Valid Till Required',
      visaDetailsIdRequired: 'Visa Details ID Required',
      documentNumber: 'Document Number Required',
      documentName: 'Document Name Required',
      statusRequired: 'Status Required',
      statusInvalid: 'Invalid Status',
      documentNumberInvalid: 'Invalid Document Number',
      visaDocumentUploadIdRequired: 'Visa Document Upload Id Required',
      visaDocumentUploadIdInvalid: 'Visa Document Upload Id Invalid',
      visaDocumentUploadIdNotExists: 'Visa document Upload Id Not Exists',
      i9DocumentUploadIdRequired: 'I-9 Document upload Id required',
      i9DocumentUploadIdInvalid: 'I-9 Document upload Id Invalid',
      i9DoucmentUploadIdNotExists: 'i-9 Document Upload Id Not exists',
      supportVisaDocumentUploadIdInvalid: 'Supporting Visa Document Upload Id Invalid',
      supportVisaDocumentUploadIdNotExists: 'Supporting Visa document Upload Id Not Exists',
      supportVisaDocumentTypeIdInvalid: 'Supporting Visa Document Type Id Invalid',
      supportVisaDocumentTypeIdNotExists: 'Supporting Visa Document Type Id Not Exists',
      InvalidDateValidFrom: 'Please ensure that the date of expiry is later than the date of issue.',
      InvalidDateValidTill: 'Please ensure that the date of expiry is later than the date of issue.',
      employeeVisaDetailsNotFound: 'Employee Visa Details Not Found',
      IdRequired: 'Employee Visa Details Id Required',
      IdNotExists: 'Employee Visa Details Id Not Exists',
      IdInvalid: 'Employee Visa Details Id Invalid',
      invalidReferencesObject: 'Invalid References Object',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      documentRequired: 'Document required',
      i9DocumentRequired: 'Document required',
      maxTenFilesOnly: 'You can upload a maximum of 10 files at a time. Please remove excess files and try again',
      maxOneFilesOnly: 'You can upload a maximum of 1 files at a time. Please remove excess files and try again',
      maxFiveFilesOnly: 'You can upload a maximum of 5 files at a time. Please remove excess files and try again',
      cannotAcceptDates: 'Please ensure that visa type or documents are selected'

    },
    passportDetails: {
      documentsNotArray: 'Documents should be array',
      invalidData: 'Please verify and resubmit the form as some fields have not been filled in or contain invalid data',
      passportNumberRequired: 'Passport Number Required',
      passportNumberInvalid: 'Invalid Passport Number',
      passportDetailsIdRequired: 'Passport Details ID Required',
      passportDetailsIdNotFound: 'Passport Details ID Not Found',
      validFromRequired: 'Valid From Required',
      validTillRequired: 'Valid Till Required',
      InvalidDateValidFrom: 'Please ensure that the date of expiry is later than the date of issue.',
      InvalidDateValidTill: 'Please ensure that the date of expiry is later than the date of issue.',
      statusRequired: 'Status Required',
      statusInvalid: 'Invalid Status',
      documentNumber: 'Passport Number is Mandatory',
      documentNumberInvalid: 'Invalid Document Number',
      IdInvalid: 'Employee Passport Details Id Invalid',
      IdNotExists: 'Employee Passport Details Id Not Exists',
      noMatchingDetailsPassport: 'No matching passport details Id for the following employee',
      invalidReferencesObject: 'Invalid References Object',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      employeePassport: 'employee already have an active passport',
      nomatchPassport: "passport id doesn't match employee",
      placeBirthInvalid: 'place of birth is invalid',
      placeIssueInvalid: 'place of issue is invalid',
      issuedCountryRequired: 'issued country id required',
      issuedCountryInvalid: 'issued country id invalid',
      issuedCountryNotExist: 'issued country not exists',
      documentNumberAlreadyExists: 'Document Number already exists',
      lengthInvalid: 'Passport Number must be between 8 and 12 characters in length',
    },
    bankDetails: {
      documentsNotArray: 'Documents should be array',
      maxBankDetails: 'Employee can add max upto 5 bank accounts',
      noMatchingEmployee: 'Bank Account doesnot match with employee',
      noTwoAccountNumberShouldbeSame: 'No 2 account number should be same.',
      inValidBankDetails: 'Invalid bank details. Expected an array.',
      noMatchingDetailsBank: 'No matching bank details Id for the following employee',
      requestId: 'Request Id is required',
      bankDocumentNameRequired: 'bank Document Name Required',
      bankNameExists: 'bank name already exists',
      bankAccountNumberExists: 'bank Account Number Exists',
      bankDocumentNameInvalid: 'bankDocumentNameInvalid',
      bankDocumentNameExists: 'bank Document Name Exists',
      bankDocumentStatus: 'bank Document Status Required',
      bankDocumentURL: 'bank Document URL Required',
      bankDocumentIdRequired: 'bank Document Id Required',
      bankNameRequired: 'Bank Name required',
      invalidBankName: 'Invalid Bank Name',
      accountTypeRequired: 'Account Type required',
      confirmAccountNumberInvalid: 'Account Number Confirmation does not match Account Number',
      confirmAccountNumberRequired: 'Confirmation Account Number required',
      accontNumberRequired: 'Account Number required',
      invalidAccountNumber: 'Invalid Account Number',
      invalidConfirmationAccountNumber: 'Invalid confirmation Account Number',
      routeNumberRequired: 'Route Number required',
      invalidRouteNumber: 'Invalid Route Number',
      confirmRouteNumberInvalid: 'Route Number Confirmation does not match route Number',
      confirmRouteNumberRequired: 'Confirmation Route Number required',
      invalidBankDetailsId: 'Invalid Bank Details ID',
      bankDetailsIdRequired: 'Bank Details ID required',
      invalidBankId: 'Invalid Bank ID',
      bankIdRequired: 'Bank ID required',
      depositValueRequired: 'deposit Value Required',
      depositValueInvalid: 'deposit Value can\'t be more than 100 for percentage',
      depositTypeRequired: 'deposit Type Required',
      depositTypeInvalid: 'deposit Type configuration is invalid',
      invalidDepositValue: 'Invalid Deposit Value',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      bankAccountDetailsIdRequired: 'bank Account Details Id Required',
      bankAccountDetailsIdInvalid: 'bank Account Details Id Invalid',
      IdNotExists: 'bank account details Id not exists',
      IdNotFound: 'Id not found',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      invalidDocumentType: 'Document Type Invalid',
      lengthInvalid: 'Account Number must be between 8 and 12 characters in length',
      bankLengthInvalid: 'Bank Name must be between 2 and 100 characters in length',
      routeLengthInvalid: 'Route Number must be 9 characters in length',

      voidChequeDocumentRequired: 'Void Cheque document required',
      depositFormDocumentRequired: 'Deposit Form document required',
      voidChequeDocumentIdInvalid: 'Void Cheque document Id Invalid',
      voidChequeDocumentIdNotExists: 'Void Cheque document Id does not exists',
      depositFormDocumentIdInvalid: 'Deposit Form document Id Invalid',
      depositFormDocumentIdNotExists: 'Deposit Form document Id does not exists',
      voidChequeDocumentNotExists: 'Void Cheque document does not exists',
      depositFormDocumentNotExists: 'Deposit Form document does not exists',


      fullpaymentError: 'Not allowed to add more than one bank account for full net payment distribution',
      fullpaymentPartialAllowedError: 'Full net payment Deposit Type  not allowed as one bank account consists of partial distribution',
      partialPercentagePaymentPartialAllowedError: 'Full net payment Deposit Type  not allowed as one bank account consists of partial distribution',
      partialpaymentError: 'For partial payment distribution bank details, one Remainder payment distribution bank must be exists',
      bankDetailsError: 'Alteast one bank account must be required for distribution',
      partialHasNoRemainderError: ` Partial deposit bank account must and should have remainder payment distribution bank account`,
      partialPercentagePartialPaymentError: `Not allowed to have both Partial distribution and Partial percentage distribution payment bank details for a single employee.`,

      partialPercentageNoRemainderError: ` Partial percentage deposit bank accounts must 100 %`,
      partialPercentagePartialPaymentError: ` Partial percentage deposit bank accounts and Partial Payment deposit bank not allowed for a single employee.`,
      remainderPaymentError: ` Remainder payment bank details not allowed`,
    },
    documents: {
      documentsNotArray: 'Documents should be array',
      requestId: 'Request Id is required',
      documentIdRequired: 'document id is required',
      documentIdInvalid: 'document id is invalid',
      newDocumentIdRequired: 'New Document ID is Required',
      newDocumentIdInvalid: 'new document id is invalid',
      newDocumentIdNotExists: 'new document id does not exists',
      documentTypeRequired: 'Document Type ID required',
      documentTypeIdNotExists: 'document type Id Not Exists',
      documentTypeInvalid: 'Invalid Document Type ID',
      documenIdNoExists: 'Document Id does not exists',
      noMatchDocument: "Document ID doesn't match to following employee",
      documentNumberRequired: 'Document Number required',
      invalidDocumentNumber: 'Invalid Document Number',
      validFromRequired: 'date of issue is required',
      validFromInvalid: 'Please ensure that the date of expiry is later than the date of issue.',
      validToRequired: 'date of expiry is required',
      validToInvalid: 'Please ensure that the date of expiry is later than the date of issue.',
      documentsIdRequired: 'Document Details ID required',
      invalidDocumentsId: 'Invalid Document Details ID',
      documentMandatory: 'Atleast one document is required',
      activeDocumentExists: 'Already active document exists',
      logoIdRequired: 'Logo ID required',
      invalidLogoId: 'Invalid Logo ID',
      DocumentNotFound: 'Document not found',
      DeleteVisaDocumentInvalid: 'Delete Uploaded Visa Document invalid',
      DeleteI9DocumentInvalid: 'Delete Uploaded I94 Document invalid',
      DeleteDocumentInvalid: 'Delete Uploaded Document invalid',
      DeletePlacementDocumentInvalid: 'Delete Upload Placement Document invalid',
      experienceInvalid: 'Please enter valid experience',
      onlyOneDocumentAllowed: 'You can upload a maximum of 1 files at a time. Please remove excess files and try again',
    },
    imigration: {
      requestId: 'Request Id is required',
      //Employee Immigration Passport Details
      passportDetailsIdRequired: 'Passport Details ID required',
      passportDetailsIdInvalid: 'Invalid Passport Details ID',

      //Employee Immigration I94 Details
      I94DetailsIdRequired: 'I94 Details ID required',
      I94DetailsIdInvalid: 'Invalid I94 Details ID',

      //Employee Immigration Visa Details
      visaTypeRequired: 'Visa Type ID required',
      visaTypeInvalid: 'Invalid Visa Type ID',
      visaNumberRequired: 'Visa Number required',
      invalidVisaNumber: 'Invalid Visa Number',
      visaIdRequired: 'Visa Details ID required',
      invalidVisaId: 'Invalid Visa Details ID',
    },
    personalDocuments:
    {
      noMatchingDetailsPensonal: 'no matching personal details id for the following employee',
      InvalidfromDate: 'valid_from date is invalid',
      InvalidTillDate: 'valid_till date is invalid',
      fromDateRequired: 'valid_from date is Required',
      tillDateRequired: 'valid_till date is Required',
      document_number: 'document number is required',
      inValid_Document_Number: 'Invalid Document Number',
      employeePersonalDocumentId: 'employee perosnal details id Required',
      IdNotExists: 'personal details Id not exists',
      personaldocumentId: 'personal document Id Required',
      personaldocumentIdInvalid: 'personal document Id Invalid',
      documentIdRequired: 'document Id required',
      documentIdInvalid: 'document Id invalid',
      documentTypeInvalid: 'document type value is invalid',
      validFromDateInvalid: 'Please ensure that the date of expiry is later than the date of issue.',
      validTillDateInvalid: 'Please ensure that the date of expiry is later than the date of issue.',
      statusRequired: 'status required',
      statusInvalid: 'status Invalid',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      documentStatusRequired: 'Document status is Required',
      documentStatusInvalid: 'Document status is Invalid',
      personaldocumentIdDoesNotExist: 'personal Document id does not exists',
      lengthInvalid: 'Document Number must be between 2 and 25 characters in length',
    },
    common: {
      invalidType: 'Invalid Type ID',
      typeIdRequired: 'Type ID is required',
      invalidCycle: 'Cycle ID is Invalid',
    },
    employeeDependentDetails: {
      id: 'employee dependent id is required',
      IdInvalid: 'employee dependent id Invalid',
      IdNotExists: 'employee dependent id not exists',
      relationship_id: 'relationship Id required',
      relationshipIdInvalid: 'relationship Id Invalid',
      relationIdNotExists: 'relationship type id not exists',
      employeeDependentId: 'employee Dependent Id required',
      employeeDependentIdNotExists: 'employee Dependent Id Not Exists',
      noMatchingDetailsDependent: 'No matching dependent details Id for the following employee',
      relationship_id: 'relationship Id required',
      employeeIdRequired: 'employee Id required',
      employeeIdInvalid: 'employee Id invalid',
      employeeIdNotExists: 'employee Id does not exists',
      relationshipAlreadyExists: 'This Relationship entry already exists',
      dependentPassport: 'Dependent already have an active passport',
      passportDocumentRequired: 'Dependent passport document required',
      i94DocumentRequired: 'Dependent i94 document required',
      passportDocumentIdInvalid: 'Dependent passport document Id Invalid',
      passportDocumentIdNotExists: 'Dependent passport document Id does not exists',
      i94DocumentIdInvalid: 'Dependent i94 document Id Invalid',
      i94DocumentIdNotExists: 'Dependent i94 document Id does not exists',
      passportDocumentNotExists: 'Dependent passport document does not exists',
      i94DocumentNotExists: 'Dependent i94 document does not exists',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
    },
    emergencyContactInfo: {
      cityInvalid: 'Emergency Contact City Invalid',
      invalid: 'invalid Emergency Contact Details',
      id: 'emergency contact id is required',
      IdInvalid: 'emergency contact id Invalid',
      IdNotExists: 'emergency contact id not exists',
      relationship_id: 'relationship Id required',
      relationshipIdInvalid: 'relationship Id Invalid',
      duplicateRelationId: 'Already have existing relation for this employee',
      relationIdNotExists: 'relation ship type id not exists',
      employeeEmergencyContactId: 'employee Emergency Contact Id required',
      employeeIdInvalid: 'employee Id invalid',
      employeeIdNotExists: 'employee Id does not exists',
      employeeIdRequired: 'employee Id required',
      emailIdInvalid: 'Email ID Contain Invalid Characters',
      atLeastTwoContacts: 'Two Emergency contacts are mandatory for the Employee',
      anyOneRequired: 'Please ensure that at least one field has been entered.',
      addressOneInvalid: 'Emergency Contact Address Line one must not be greater than 255 characters in length',
      addressTwoInvalid: 'Emergency Contact Address Line two must not be greater than 255 characters in length'
    },
    employeeVacation: {
      nameRequired: 'vacation name is required',
      nameInvalid: 'vacation name is invalid',
      fromDateRequired: 'from date is required',
      fromDateInvalid: 'from date is invalid',
      toDateRequired: 'to date is required',
      toDateInvalid: 'to date is invalid',
      doNotDisturbRequired: 'do not disturb is required',
      doNotDisturbInvalid: 'do not disturb is invalid',
      preferredFromTimeRequired: 'preferred from time is required',
      preferredFromTimeInvalid: 'preferred from time is invalid',
      preferredToTimeRequired: 'preferred to time is required',
      preferredToTimeInvalid: 'preferred to time is invalid',
      timeZoneRequired: 'time zone is required',
      timeZoneInvalid: 'time zone is invalid',
      idRequired: 'vacation id is required',
      idInvalid: 'vacation id is invalid',
      IdNotExists: 'vacation id not exists',
      employeeIdInvalid: 'employee Id invalid',
      employeeIdNotExists: 'employee Id does not exists',
      employeeIdRequired: 'employee Id required',
      dateInvalid: 'date format is Invalid',
      startDateAndEndDateRequired: 'Start date and End date Required',
      invalidToDate: 'To Date is Invalid',
      employeeVacationExists: 'Employee already has a vacation in the given dates'
    },
    Import: {
      employmentTypeRequired: "Employment Type Required",
      employmentTypeInvalid: "Employment Type invalid",
      employmentTypeNotExists: "Employment Type Does Not Exists",
      employmentCategoryRequired: "Employment Category Required",
      employmentCategoryInvalid: "Employment Category invalid",
      employmentCategoryNotExists: "Employment Category Does Not Exists",
      visaTypeRequired: "Visa Type Required For Non US Citizen",
      visaTypeInvalid: "Visa Type invalid",
      visaTypeNotExists: "Visa Type Does Not Exists",
      reportingEmployeeRequired: "Reporting Employee Required For Internal Employee",
      reportingEmployeeInvalid: "Reporting Employee invalid",
      reportingEmployeeNotExists: "Reporting Employee Does Not Exists",
      departmentRequired: "Department Required For Internal Employee",
      departmentInvalid: "Department invalid",
      departmentNotExists: "Department Does Not Exists",
      teamRequired: "Team Required For Internal Employee",
      teamInvalid: "Team invalid",
      teamNotExists: "Team Does Not Exists",
      stateRequired: "State Required",
      stateInvalid: "State invalid",
      stateNotExists: "State Does Not Exists",
      countryRequired: "Country Required",
      countryInvalid: "Country invalid",
      countryNotExists: "Country Does Not Exists",
      zipcodeRequired: "Zipcode Required",
      zipcodeInvalid: "Zipcode invalid",
      zipcodeNotExists: "Zipcode Does Not Exists",
      referenceIdExists: "Reference Id Exists"
    }
  },
  /* Response messages for employee onboarding */

  /* Response messages for uploading */
  upload: {
    imageNotFound: 'Image Cannot Blank',
    documentNotFound: 'Failed to fetch document. Please reupload your document',
    errorUploading: 'Error while uploading. Please try again!!!',
    invalidImageUploadFormat: 'Invalid upload image format. Accepted format ',
    invalidUploadFormat: 'Please upload files in ',
    invalidInviteUploadFormat: 'Invalid upload format. Accepted format PDF, PNG or JPEG',
    invalidTargetUrl: 'Invalid URL please check again',
    invalidDocumentUploadFormat: 'Invalid upload document format. Accepted format PDF and DOC',
    fileSizeExceedsLimit: 'File size must be ',
    noOfFilesExceedsLimit: 'You can upload a maximum of '

  },
  /* Response messages for uploading */

  /* Response messages for application configurations */
  configurations: {

    actionNotifications: {
      slugNameRequired: 'Slug Name Required',
      slugNameInvalid: 'Slug Name Invalid',
      updateIdRequired: 'Update Id Required',
      updateIdInvalid: 'Update Id Invalid',
      updateIdNotExists: 'Update Id not Exist',
      groupMustBeArray: 'Group must be array',
      invalidGroup: 'Invalid Group Id',
      slugNameShouldbe: 'Slug name should be `employee-self-service-types` or `expense-management-types`',
    },

    employeeTeam: {
      employeeTeamNameRequired: 'employeeTeam name is Required',
      employeeTeamNameInvalid: 'employeeTeam name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      employeeTeamNameExists: 'employeeTeam name already exists',
      employeeTeamId: 'employeeTeam Id Required',
      IdNotExists: 'employeeTeam Id doesnot exists',
      employeeTeamIdInvalid: 'employee Team Id Invalid',
      emplyIdExists: 'team Id exists in employee table',
    },

    documentTypes: {
      documentTypeNameRequired: 'documentType name is Required',
      documentTypeNameInvalid: 'documentType name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      documentTypeNameExists: 'Document Type name already exists',
      documentTypeId: 'Document Type Id Required',
      IdNotExists: 'Document Type Id does not exists',
      IdInvalid: 'Document Type Id Invalid',
      documentTypeIdInvalid: 'Document Type Id Invalid',
      categorySlugNameRequired: 'Category Slug Name Required',
      documentCategorySlugInvalid: 'document category slug name invalid',
      IdBeingUsedforPersonalDocument: 'document type Id is being used for employee personal document',
      NumberMandatoryRequired: 'Document Number Mandatory is Required',
      NumberMandatoryInvalid: 'Document Number Mandatory is Invalid',
      NumberDisplayRequired: 'Document Number Display is Required',
      NumberDisplayInvalid: 'Document Number DIsplay is Invalid',
      ValidFromMandatoryRequired: 'Valid From Mandatory is Required',
      ValidFromMandatoryInvalid: 'Valid From Mandatory is Invalid',
      ValidFromDisplayRequired: 'Valid From Display is Required',
      ValidFromDisplayInvalid: 'Valid From Display is Invalid',
      ValidToMandatoryRequired: 'Valid To Mandatory is Required',
      ValidToMandatoryInvalid: 'Valid To Mandatory is Invalid',
      ValidToDisplayRequired: 'Valid To Display is Required',
      ValidtoDisplayInvalid: 'Valid To Display is Invalid',
      StatusMandatoryRequired: 'Status Mandatory is Required',
      StatusMandatoryInvalid: 'Status Mandatory is Invalid',
      StatusDisplayRequired: 'Status Display is Required',
      StatusDisplayInvalid: 'Status Display is Invalid',
      UploadMandatoryRequired: 'Upload Mandatory is Required',
      UploadMandatoryInvalid: 'Upload Mandatory is Invalid',
      UploadDisplayRequired: 'Upload Display is Required',
      UploadDisplayInvalid: 'Upload Display is Invalid',
      NumberMandatoryDisplayNone: 'Document Number Mandatory with Document Number Display Hide Is Not Allowed',
      ValidFromMandatoryDisplayNone: 'Valid From Mandatory with Valid From Display Hide Is Not Allowed',
      ValidToMandatoryDisplayNone: 'Valid To Mandatory with Valid To Display Hide Is Not Allowed',
      StatusMandatoryDisplayNone: 'Status Mandatory with Display Hide Is Not Allowed',
      UploadMandatoryDisplayNone: 'Upload Mandatory with Display Hide Is Not Allowed',
      notAllowToModify: 'Not Allowed To Modify The System Created Items',
      discriptionLengthExceed: "Description should not exceed 50 characters"
    },

    employmentType: {
      employmentTypeNameRequired: 'employment Type name is Required',
      employmentTypeNameInvalid: 'employment Type name is Invalid',
      descriptionRequired: 'description is required',
      employmentTypeStatusRequired: 'isActive status is required',
      employmentTypeStatusInvalid: 'isActive status is invalid',
      employmentTypeNameExists: 'employment Type name already exists',
      employmentTypeId: 'employment Type Id Required',
      IdNotExists: 'employment Type Id doesnot exists',
      cannotAddCategory: 'Internal Employee Cannot have Category',
      IdRequired: 'employment Type Id Required',
      IdInvalid: 'employment Type Id Invalid',
      emplyIdExists: 'employment Type Id exists in employee table',
      catgIdExists: 'employment Type Id exists in category table',
    },

    approvalConfiguration: {
      approvalLevelIdInvalid: 'Approval Level Id Invalid',
      IdRequired: 'Approval Id is required',
      approvalRequired: 'Approval Levels Required',
      approvalModuleRequired: 'Approval Module name is Required',
      invalidApprovalModule: 'Approval Module name is Invalid',
      globalRequired: 'isglobal status is required',
      globalInvalid: 'Invalid datatype for is_global',
      globalAlreadyExist: 'Global Setting already exists for this module',
      approverIdRequired: 'Approver user Id is required',
      approverIdInvalid: 'Approver user Id is invalid',
      rankRequired: 'Approval Rank is required',
      rankInvalid: 'Approval Rank is Invalid',
      rankOrderInvalid: 'Rank Order is Invalid',
      approvalIdNotExists: 'Approval Id doesnot exists',
      IdNotExists: 'Approval User Id doesnot exists',
      approvalUserIdInvalid: 'Approval User Id Invalid',
      deleteUserIdNotExists: 'Delete Approval User Id doesnot exists',
      levelIdNotExists: 'Approval Level Id doesnot exists',
      deleteLevelIdNotExists: 'Deleted approval Level Id doesnot exists',
      settingIdNotExists: 'Approval Setting Id doesnot exists',
      settingIdRequired: 'Approval Setting Id Required',
      canNotDeleteLevel: 'Can not delete when existing level have only 1 level',
      canNotDeleteUser: 'Can not delete when existing level have only 1 user in the level',
    },
    payCycleConfiguration: {
      employeeIdRequired: 'Employee Id is Required',
      IdAlreadyExists: 'Employee Id already Exists',
      payTypeRequired: 'pay type is required',
      payTypeInvalid: 'pay Type is invalid',
      approverIdRequired: 'Approver Id is required',
      payRateRequired: 'Pay Rate is required',
      invalidPayRate: 'Pay Sequence is Invalid',
      invalidEmployeeID: 'Employee ID is Invalid',
      IdNotExists: 'employee Id doesnot exists',
      IdAlreadyExists: 'employee Id already exists',
      fromHourRequired: 'From hour is required',
      fromHourInvalid: 'From hour is invalid',
      toHourInvalid: 'To hour is invalid',
      valueRequired: 'Pay value is Required',
      valueInvalid: 'Pay value is invalid',
      IdRequired: 'pay cycle Id required',
      IdInvalid: 'pay cycle Id is invalid',
      payCycleIdNotExists: 'pay cycle Id does not exists',
      payInRequired: 'pay_in value is required',
      payInInvalid: 'pay_in value is invalid',
      payValueReqired: 'pay value is required',
      payValueInvalid: 'pay value is Invalid',
      payrollPayReqired: 'payroll pay value is required',
      payrollPayValueInvalid: 'payroll pay value is Invalid',
    },

    invoiceSettings: {
      statusInvalid: 'isActive status is invalid',
      statusrequired: 'isActive status required',
      invoiceSettingsIdRequired: 'invoiceSettings Id Required',
      invoiceSettingsIdInvalid: 'Invalid invoiceSettings Id',
      IdNotExists: 'invoiceSettings Id not exists',
      invoiceSettingsIdExists: 'invoiceSettings id Already Exists',
    },
    timesheetSettings: {
      statusInvalid: 'isActive status is invalid',
      statusrequired: 'isActive status required',
      timesheetSettingsIdRequired: 'timesheet Settings Id Required',
      timesheetSettingsIdInvalid: 'Invalid timesheet Settings Id',
      IdNotExists: 'timesheet Settings Id not exists',
      timesheetSettingsIdExists: 'timesheet Settings id Already Exists',
    },
    paymentMode: {
      paymentModeNameRequired: 'paymentMode Name Required',
      paymentModeNameInvalid: 'paymentMode Document name',
      descriptionRequired: 'description is required',
      statusInvalid: 'isActive status is invalid',
      paymentModeIdRequired: 'paymentMode Id Required',
      paymentModeIdInvalid: 'Invalid paymentMode Id',
      paymentModeNameExists: 'paymentMode Name Already Exists',
      IdNotExists: 'paymentMode Id doesnot exists',
      paymentModeIdExists: 'paymentMode id Already Exists',
      statusRequired: 'is active status required',
    },
    selfServiceTypes: {
      nameRequired: 'Name required',
      nameInvalid: 'Name is invalid',
      nameExists: 'Name already Exists',
      employeeIdRequired: "Employee ID required",
      selfServiceTypesNameRequired: 'selfServiceTypes Name Required',
      selfServiceTypesNameInvalid: 'selfServiceTypes Document name',
      descriptionRequired: 'description is required',
      statusInvalid: 'isActive status is invalid',
      selfServiceTypesIdRequired: 'selfServiceTypes Id Required',
      selfServiceTypesIdInvalid: 'Invalid selfServiceTypes Id',
      selfServiceTypesNameExists: 'selfServiceTypes Name Already Exists',
      IdNotExists: 'selfServiceTypes Id doesnot exists',
      selfServiceTypesIdExists: 'selfServiceTypes id Already Exists',
      selfServiceTypesIdNotExists: 'selfServiceTypes id does not Exists',
      selfServiceTypeIdRequired: 'self Service TypeId Required',
      assignEmployeeIdAlreadyExists: 'assign EmployeeId Already Exists',
      assignEmployeeIdIsInvalid: 'assign Employee Id Is Invalid',
      IdInvalid: 'Id Invalid',
      assignEmployeeIdRequired: 'assign Employee Id Required',
      IdBeingUsedForEmployeeSelfService: 'Id Being Used For Employee Self Service',
      employeeIdDoesNotExist: 'Employee ID does not exists',
    },
    clientDocumentType: {
      clientDocumentTypeNameRequired: ' clientDocumentType name is Required',
      clientDocumentTypeNameInvalid: ' clientDocumentType name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      clientDocumentType_idRequired: 'client document type ID is required',
      clientDocumentTypeNameExists: ' client document type name already exists',
      IdNotExists: ' client document type Id does not exists',
    },

    netPayTerms: {
      daysRequired: 'Days Required',
      daysInvalid: 'Invalid Days',
      daysAlreadyExists: 'Days already exists',
      statusRequired: 'status required',
      statusInvalid: 'Invalid status',
      IdRequired: 'Net pay term id required',
      IdNotExists: 'Net pay term id not exists',
      descriptionRequired: 'description is required',
      IdInvalid: 'Net pay terms Id Invalid',
      IdBeingUsedForInvoiceConfiguration: 'Net pay terms Id is being used for invoice configuration',
      IdBeingUsedForInvoice: 'Net pay terms Id is being used for invoice',
    },
    category: {
      categoryNameRequired: 'Category name is Required',
      categoryNameInvalid: 'Category name is Invalid',
      employmentTypeIdRequired: 'employmentType Id is Required',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      categoryNameExists: 'This category has been already created',
      categoryLimitExceeded: 'Only 5 Categories can be added for a employment Type apart from default categories',
      categoryIdRequired: 'Category Id Required',
      IdNotExists: 'Category Id doesnot exists',
      IdRequired: ' Category Id Required',
      IdInvalid: ' Category Id invalid',
      emplyIdExists: 'Category Id exists in employee table',
      notAllowToModify: 'Not Allowed To Modify The System Created Categories',
    },
    visaType: {
      visaTypeNameRequired: 'Visa Type name required',
      visaAlreadyExists: 'Active visa is available for the user',
      visaTypeNameInvalid: 'Invalid Visa Type name',
      visaTypeNameExists: 'Visa Type name already exists',
      visaTypeDescriptionRequired: 'Visa Type description is required',
      visaTypeStatusRequired: 'Visa Type status required',
      visaTypeStatusInvalid: 'Invalid Visa Type status',
      IdRequired: 'Visa Type is required',
      IdNotExists: 'Visa Type not exists',
      IdInvalid: 'Invalid Visa Type id',
      emplyIdExists: 'Visa Type Id exists in employee table',
      visaDocIdExists: 'Visa Type Id exists in visa document type table',
    },
    visaDocumentType: {
      visaDocumentTypeNameRequired: 'Visa Document Type name required',
      visaDocumentTypeNameInvalid: 'Invalid Visa Document Type name',
      visaDocumentTypeNameExists: 'Visa Type name already exists',
      visaDocumentTypeDescriptionRequired: 'Visa Type description is required',
      visaDocumentTypeStatusRequired: 'Visa Type status required',
      visaDocumentTypeStatusInvalid: 'Invalid Visa Type status',
      IdRequired: 'Visa Document Type id required',
      IdNotExists: 'Visa Document Type id not exists',
      IdInvalid: 'Invalid Visa Document Type id',
      visaDetailsIdExists: 'Visa Document Type Id exists in employee visa details table',
      NumberMandatoryRequired: 'Document Number Mandatory is Required',
      NumberMandatoryInvalid: 'Document Number Mandatory is Invalid',
      NumberDisplayRequired: 'Document Number Display is Required',
      NumberDisplayInvalid: 'Document Number DIsplay is Invalid',
      ValidFromMandatoryRequired: 'Valid From Mandatory is Required',
      ValidFromMandatoryInvalid: 'Valid From Mandatory is Invalid',
      ValidFromDisplayRequired: 'Valid From Display is Required',
      ValidFromDisplayInvalid: 'Valid From Display is Invalid',
      ValidToMandatoryRequired: 'Valid To Mandatory is Required',
      ValidToMandatoryInvalid: 'Valid To Mandatory is Invalid',
      ValidToDisplayRequired: 'Valid To Display is Required',
      ValidtoDisplayInvalid: 'Valid To Display is Invalid',
      StatusMandatoryRequired: 'Status Mandatory is Required',
      StatusMandatoryInvalid: 'Status Mandatory is Invalid',
      StatusDisplayRequired: 'Status Display is Required',
      StatusDisplayInvalid: 'Status Display is Invalid',
      UploadMandatoryRequired: 'Upload Mandatory is Required',
      UploadMandatoryInvalid: 'Upload Mandatory is Invalid',
      UploadDisplayRequired: 'Upload Display is Required',
      UploadDisplayInvalid: 'Upload Display is Invalid',
      visaDocumentTypeNameRequired: 'Visa Document Type Name is Required',
      visaDocumentTypeNameIDInvalid: 'Visa Document Type Upload  is Invalid',
      visaDocumentTypeLimitExceeded: 'Only 5 documents for each Visa Type are allowed',
    },
    educationLevel: {
      educationLevelNameRequired: 'Education Level name required',
      educationLevelNameInvalid: 'Invalid Education Level name',
      educationLevelNameExists: 'Education Level name already exists',
      educationLevelDescriptionRequired: 'Education Level description is required',
      educationLevelStatusRequired: 'Education Level status required',
      educationLevelStatusInvalid: 'Invalid Education Level status',
      educationLevelIdRequired: 'Education Level id required',
      educationLevelIdNotExists: 'Education Level id not exists',
      IdRequired: 'Education Level id required',
      IdInvalid: 'Invalid Education Level id',
      IdNotExists: 'Education Level id not exists',
      edudetailsIdExists: 'Education Level id exists in employee education details',
    },
    skills: {
      skillNameRequired: 'Skill name required',
      skillNameInvalid: 'Invalid Skill  name',
      skillNameExists: 'This skill has been already created',
      skillDescriptionRequired: 'Skill  description is required',
      skillStatusRequired: 'Skill  status required',
      skillStatusInvalid: 'Invalid Skill status',
      skillIdRequired: 'Skill id required',
      skillIdNotExists: 'Skill id not exists',
      IdRequired: 'Skill Name required',
      IdNotExists: 'Skill Name not exists',
      employeeSkillIdRequired: 'employee skill id required',
      skillIdInvalid: 'skill id is invalid',
      skilldetailsIdExists: 'skill id exists in employee skill details',
    },
    jobTitle: {
      jobTitleNameRequired: 'Job Title  name required',
      jobTitleNameInvalid: 'Job Title name Invalid',
      jobTitleNameExists: 'Job Title  name already exists',
      jobTitleDescriptionRequired: 'Job Title  description is required',
      jobTitleStatusRequired: 'Job Title status  required',
      jobTitleStatusInvalid: 'Job Title status Invalid',
      jobTitleIdRequired: 'Job Title  id required',
      jobTitleIdNotExists: 'Job Title  id not exists',
      IdRequired: 'Job Title id required',
      IdNotExists: 'Job Title id not exists',
      IdInvalid: 'Job Title id Invalid',
      jobTileIdInvalid: 'job Title Id Invalid',
      IdBeingUsed: 'Job Title id is being used by placement records',
    },
    team: {
      departmentId: 'department Id required',
      teamNameRequired: 'team name is Required',
      teamNameInvalid: 'team name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      teamNameExists: 'team name already exists',
      IdNotExists: 'team Id doesnot exists',
      departmentId: 'departmentId required',
      teamId: 'teamId required',
      teamIdInvalid: 'team Id Invalid',
    },
    department: {
      departmentNameRequired: 'department name is Required',
      departmentNameInvalid: 'department name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      departmentNameExists: 'department name already exists',
      departmentId: 'department Id Required',
      departmentIdInvalid: 'department Id Invalid',
      IdNotExists: 'department Id doesnot exists',
      teamIdExists: 'department Id exists in team table',
      emplyIdExists: 'department Id exists in employee table',
      notAllowToModify: 'Not Allowed To Modify The System Created Items',
    },
    personalDocument: {
      personalDocumentNameRequired: 'personalDocument name is Required',
      personalDocumentNameInvalid: 'personalDocument name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      personalDocumenttNameExists: 'personalDocument name already exists',
      personalDocumentId: 'personalDocument Id Required',
      IdNotExists: 'personalDocument Id doesnot exists',
      personalDocumentNameExists: 'personalDocumentNameExists already exists',
    },
    country: {
      countryNameRequired: 'country name is Required',
      countryNameInvalid: 'country name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      countryNameExists: 'country name already exists',
      countryId: 'country Id Required',
      IdNotExists: 'country Id doesnot exists',
      countryIdInvalid: 'country Id Invalid',
      notAllowToModify: 'Not Allowed To Modify The System Created Countries',
    },
    state: {
      stateNameRequired: 'state name is Required',
      stateNameInvalid: 'state name is Invalid',
      stateIdRequired: 'State Id is Required',
      stateIdInvalid: 'State Id is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      stateNameExists: 'state name already exists',
      IdNotExists: 'state Id doesnot exists',
      stateIdInvalid: 'state Id Invalid',
      countryNameExists: 'country name already exists',
      countryId: 'country Id Required',
      countryIdInvalid: 'country Id Invalid',
      notAllowToModify: 'Not Allowed To Modify The System Created States',
    },
    timesheetCycle: {
      timesheetCycleNameRequired: 'timesheetCycle name is Required',
      timesheetCycleNameInvalid: 'timesheetCycle name is Invalid',
      descriptionRequired: 'description is required',
      statusRequired: 'isActive status is required',
      statusInvalid: 'isActive status is invalid',
      timesheetCycleNameExists: 'timesheetCycle name already exists',
      timesheetCycleId: 'timesheetCycle Id Required',
      IdNotExists: 'timesheetCycle Id doesnot exists',
      daysRequired: 'days required',
      IdBeingUsed: 'timesheet Cycle id is being used by timesheet records',
      IdBeingUsedforInvoice: 'timesheet Cycle id is being used by invoice records',
    },
    expenseManagement: {
      expenseStatusRequired: 'Status Required',
      expenseStatusInvalid: 'invalid status',
      invalidName: 'invalid name',
      nameExists: 'name already exists',
      nameRequired: 'name required',
      templateRequired: 'Template is required',
      IdRequired: 'expenseManagement id is required',
      idInvalid: 'expenseManagement id is Invalid',
      IdNotExists: 'expenseManagement Id doesnot exists',
      descriptionRequired: 'description is required',
      statusRequired: 'is active status required',
      statusInvalid: 'is active status invalid',
      IdBeingUsedForExpenseManagement: 'expense Management id is being used by expense Management records',
      subjectRequired: 'subject is required',
      dontHavePermission: 'Only Contractor/Consultant have access to update the status.',
    },
    writeOff: {
      invalidId: 'Invalid Write -off Id',
      IdNotExists: 'Write-off Id does not exist',
      writeOffRequired: 'Write-off reason is Required',
      writeOffInvalid: 'Write-off reason is invalid',
      writeOffExists: 'Write-off reason exists',
      IdRequired: 'Write-off Id required',
      descriptionRequired: 'description Required',
      statusRequired: 'Write-off status Required',
      statusInvalid: 'Write-off status Invalid',

    },
    organizationContactInformation: {
      nameRequired: 'Organization name is required',
      recordAlreadyExists: 'Record already exists',
      invalidName: 'Invalid Organization name',
      nameAlreadyExists: 'Organization name already exists',
      addressLine1Required: 'address Line 1 is required',
      addressInvalid: 'please enter valid address',
      addressLine2Required: 'address Line 2 is required',
      cityNameRequired: 'city name is required',
      cityNameInvalid: 'please enter valid city name',
      zipCode: 'Zipcode / Pincode is required',
      zipCodeIsInvalid: 'Zipcode / Pincode is invalid',
      companyEmailIdRequired: 'company Email Id Required',
      companyEmailIdInvalid: 'Email Id Invalid',
      companyPhoneNumberRequired: 'company Phone Number Required',
      invalidPhoneNumber: 'Invalid Phone number',
      websiteURLReequired: 'web url is required',
      websiteURLInvalid: 'web site url is invalid',
      contactIdRequired: 'contact Id Required',
      contactIdInvalid: 'contact Id Invalid',
      IdNotExists: 'Id not exists',
      phoneNumberRequired: 'phone number required',
      companyEmailIdAlreadyExists: 'company Email Id Already Exists',
      InvalidContactId: 'Invalid contact Id',
      zipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
      notifyUniversityStatusRequired: 'Notify University Status Required',
      notifyUniversitystatusInvalid: 'Notify University Status Invalid',
      deleteEmailStatusRequired: 'Delete Email Status Required',
      deleteEmailStatusInvalid: 'Delete Email Status Invalid',
      settlementAmountStatusRequired: 'Settlement Amount Status Required',
      settlementAmountStatusInvalid: 'Settlement Amount Status Invalid'
    },
    invoiceConfiguration: {
      IdRequired: 'Id is required',
      IdNotExists: 'Id does not exists',
      cycleIdRequired: 'Invoice Cycle is required',
      cycleIdNotExists: 'Cycle is does not exists',
      invalidCycleId: 'Invoice Cycle Id is invalid',
      netPayTermsIdRequired: 'Net Pay Terms is required',
      netPayTermsIdNotExists: 'Net Pay Terms dpes not exists',
      invalidNetPayTermsId: 'Net Pay Terms Id is invalid',
      globalRequired: 'isglobal status is required',
      globalInvalid: 'Invalid datatype for is global',
      globalAlreadyExist: 'Global Setting already exists',
      startDayRequired: 'Day Starts from is required',
      invalidDayId: 'Day Starts from is invalid',
      dayStartIdNotExists: 'Day Starts Id does not Exists',
      defaultHourRequired: 'default Hours Required',
      defaultHourInvalid: 'default Hour is Invalid',
      globalDoesNotExist: 'Invoice Global setting does not exist',
      invGlobalConfigDoesNotExist: 'Invoice Global Configuration setting does not exist',
      invGlobalapprovalDoesNotExist: 'Invoice Global Approval setting does not exist',
      clientConfigurationDoesNotExist: 'Client Setting does not exist',
      clientNotHaveTimesheetConfiguration: 'Client does not have timesheet configuration',
      clientConfigurationSettingDoesNotExist: 'Client Configuration Setting does not exist',
      clientApprovalSettingDoesNotExist: 'Client Approval Setting does not exist',
      configurationTypeRequired: 'Configuration Type is required',
      invConfigurationTypeInvalid: 'Invoice Configuration Type is invalid',
      invConfigurationTypeRequired: 'Invoice Configuration Type is required',
      invGlobalConfigurationRequired: 'Invoice Global Configuration Setting is required',
      invGlobalConfigurationInvalid: 'Invoice Global Configuration Setting is invalid',
      invGlobalApprovalRequired: 'Invoice Global Approval Setting is required',
      invGlobalApprovalInvalid: 'Invoice Global Approval Setting is invalid',
      startDateRequired: 'Invoice Start date is Required',
      startDateInvalid: 'Invoice Start date is Invalid',
      clientInvAlreadyExists: 'Invoice already exists for client',
      clientInvEmailAlreadyExists: 'Invoice Email Template Already Configred',
      invoiceApprovalIdRequired: 'Invoice approval id is required',
      invoiceApprovalIdInvald: 'Invoice approval id is invalid',
      invoiceConfigIdRequired: 'Invoice Configuration id is required',
      invoiceConfiglIdInvald: 'Invoice Configuration id is invalid',
      invoiceEmailTemplateIdRequired: 'Invoice Email Template ID is required',
      invoiceEmailTemplateIdInvalid: 'Invoice Email Template ID id invalid',
      invoiceEmailTemplateTypeRequired: 'Invoice Email Template Type is required',
      invoiceEmailTemplateTypeInvalid: 'Invoice Email Template Type is invalid',
    },

    invoiceEmailTemplates: {
      fromEmailIdRequired: 'from email is required',
      fromEmailIdInvalid: 'from email is invalid',
      toRequired: 'to email Array is required',
      toInvalid: 'to email should be an array',
      toEmailIdRequired: 'to email id required',
      toEmailIdInvalid: 'to email id is invalid',
      subjectRequired: 'subject is required',
      templateRequired: 'subject is invalid',
      ccRequired: 'cc emails array is required',
      ccInvalid: 'cc emails should be an array',
      ccEmailIdInvalid: 'cc email id is invalid',
      bccRequired: 'bcc emails array is required',
      bccInvalid: 'bcc emails should be an array',
      bccEmailIdInvalid: 'bcc emai id is invalid',
      globalRequired: 'isglobal status is required',
      globalInvalid: 'Invalid datatype for is global',
      globalAlreadyExist: 'Global Setting already exists',
      isAttachementRequired: '',
      isAttachementInvalid: '',
      isInvoiceAttachedRequired: '',
      isInvoiceAttachedInvalid: '',
      invoiceAttachedInvalid: '',
      toArray: 'To emails should be send in an array',
      BccArray: 'BCC emails should be send in an array',
      CCArray: 'CC emails should be send in an array',
    },

    billEmailTemplates: {
      fromEmailIdRequired: 'from email is required',
      fromEmailIdInvalid: 'from email is invalid',
      toRequired: 'to email Array is required',
      toInvalid: 'to email should be an array',
      toEmailIdRequired: 'to email id required',
      toEmailIdInvalid: 'to email id is invalid',
      subjectRequired: 'subject is required',
      templateRequired: 'subject is invalid',
      ccRequired: 'cc emails array is required',
      ccInvalid: 'cc emails should be an array',
      ccEmailIdInvalid: 'cc email id is invalid',
      bccRequired: 'bcc emails array is required',
      bccInvalid: 'bcc emails should be an array',
      bccEmailIdInvalid: 'bcc emai id is invalid',
      globalRequired: 'isglobal status is required',
      globalInvalid: 'Invalid datatype for is global',
      globalAlreadyExist: 'Global Setting already exists',
      isAttachementRequired: 'Is Attachement is required',
      isAttachementInvalid: 'Is attachement is invalid',
      isBillAttachedRequired: 'Is bill attachement is required',
      isbillAttachedInvalid: 'Is bill attachement is invalied',
      ispaymentAttachedRequired: 'Is payment attachement is Required',
      ispaymentAttachedInvalid: 'Is payment attchement is invalid',
      invoiceAttachedInvalid: '',
      toArray: 'To emails should be send in an array',
      BccArray: 'BCC emails should be send in an array',
      CCArray: 'CC emails should be send in an array',
    },
    timesheetConfiguration: {
      IdRequired: 'Timesheet configuration Id is required',
      IdInvalid: 'Invalid Timesheet configuration Id',
      IdNotExists: 'Timesheet configuration Id does not exists',
      cycleIdRequired: 'Timesheet Cycle is required',
      invalidCycleId: 'Timesheet Cycle Id is invalid',
      timesheetRequired: 'Timesheet Submission is required',
      timesheetInvalid: 'Timesheet Submission is invalid',
      globalRequired: 'isglobal status is required',
      globalInvalid: 'Invalid datatype for is global',
      globalAlreadyExist: 'Global Setting already exists',
      startDayRequired: 'Day Starts from is required',
      invalidDayId: 'Day Starts from is invalid',
      dayStartIdNotExists: 'Day starts id not exists',
      defaultHourRequired: 'default Hours Required',
      defaultHourInvalid: 'default Hour is Invalid',
      globalDoesNotExist: 'Global time sheet configuration does not exist',
      timesheetGlobalApprovalNotExists: 'Global configurations have not been completed. Please configure them to reflect the changes here.',
      clientTimesheetApprovalNotExists: 'For client the default approval does not exists',
      clientConfigurationDoesNotExist: 'Client Setting does not exist',
      tsConfigurationTypeRequired: 'Time Sheet Configuration Type is required',
      tsConfigurationTypeInvalid: 'Time Sheet Configuration Type is invalid',
      configurationTypeRequired: 'Configuration Type is required',
      approvalConfigurationTypeRequired: 'Approval configuration Type is required',
      approvalConfigurationTypeInvalid: 'Approval configuration type is invalid',
      startDateRequired: 'Time Sheet Start date is Required',
      timesheetStartDateInvalid: 'Time sheet start date invalid or invalid date formet',
      startDateInvalid: 'Time Sheet Start date Cannot greater than Placement start date',
      clientTimeSheetAlreadyExists: 'Time Sheet already exists for client',
      tsApprovalIdRequired: 'Time Sheet approval id is required',
      tsApprovalIdInvald: 'Time Sheet approval id is invalid',
      tsConfigIdRequired: 'Time Sheet Configuration id is required',
      tsConfiglIdInvald: 'Time Sheet already generated for start date. Not allowed to change',
      tsConfigEfetiveDateRequired: 'Time Sheet effective Start Date is required',
      tsConfigEfetiveDateInvalid: 'Time Sheet effective start date is invalid',
      forBiweeklyCycleError: 'For Biweekly Cycle the timesheet startdate day and Biweekly Cycle Day should be same',
      approvalLevelRequired: 'At least one approval level is required',
      approvalEmployeeRequired: 'At least one employee ID is required for each approval level',
    },
    relationshipTypes: {
      relationshipTypesNameRequired: 'relationship types Name Required',
      relationshipTypesNameInvalid: 'relationship types name invalid',
      statusRequired: 'status is required',
      statusInvalid: 'status is invalid',
      relationshipTypesId: 'relationship types Id Required',
      relationshipTypesIdInvalid: 'Invalid relationship types Id',
      IdNotExists: 'relationship types Id doesnot exists',
      relationshipTypesNameExists: 'relationship types Name Already Exists',
    },
    InvoiceTaxes: {
      InvoiceTaxesNameRequired: 'Invoice Taxes Name Required',
      InvoiceTaxesNameInvalid: 'Invoice Taxes name invalid',
      InvoiceTaxesTypeRequired: 'Invoice Taxes types type Required',
      InvoiceTaxesTypeInvalid: 'Invalid Invoice Taxes type invalid should be 1 or 2',
      InvoiceTaxesValueRequired: 'Invoice Taxes value Required',
      InvoiceTaxesValueInvalid: 'Invoice Taxes value invalid / if type is 1 then value should be 0-100',
      IdNotExists: 'Invoice Taxes Id doesnot exists',
      InvoiceTaxesNameExists: 'Invoice Taxes Name Already Exists',
      invoiceTaxesIdNotExists: 'Invoice Taxes Id Not Exists',
      invoiceTaxesIdRequired: 'Invoice Taxes Id is Required',
      invoiceTaxesIdInvalid: 'Invoice Taxes Id is invalid',
      enableTaxesForInvoicesRequired: 'Enable Taxes For Invoices status Required',
      enableTaxesForInvoicesInvalid: 'Enable Taxes For Invoices status Invalid',
    },
    payrollConfigurations: {
      nameRequired: 'Payroll config settings name is required',
      nameUnique: 'Payroll config settings name must be unique',
      payrollTypeIdRequired: 'pay roll cycle id is required',
      payrollTypeIdInvalid: 'pay roll cycle id is Invalid',
      payrollTypeIdNotExist: 'pay roll cycle id does not exists',
      payrollConfigSettingIdRequired: 'Payroll config setting id is required',
      payrollConfigSettingIdInvalid: 'Payroll config setting id is Invalid',
      payrollConfigSettingIdNotExist: 'Payroll config setting id does not exists',
      payrollConfigIdRequired: 'Payroll configuration setting id is required',
      payrollConfigIdInvalid: 'Payroll configuration setting id is Invalid',
      payrollConfigIdNotExist: 'Payroll configuration setting id does not exists',
      checkDateRequired: 'Check date is required',
      checkDateInvalid: 'Check date is invalid',
      fromDateRequired: 'from date is required',
      fromDateInvalid: 'from date is Invalid',
      toDateRequired: 'to date is required',
      toDateInvalid: 'to date is Invalid',
      payConfigSettingIdRequired: 'Pay config setting id is required',
      payConfigSettingIdInvalid: 'Pay config setting id is Invalid',
      payConfigSettingIdNotExist: 'Pay config setting id does not exists',
      secondFromDateRequired: 'Second from date is required',
      secondFromDateInvalid: 'Second from date is Invalid',
      actualCheckDateRequired: 'Actual Check date is required',
      actualCheckDateInvalid: 'Actual Check date is Invalid',
      secondToDateRequired: 'Second to date is required',
      secondToDateInvalid: 'Second to date is Invalid',
      secondCheckDateRequired: 'Second Check date is required',
      secondCheckDateInvalid: 'Second Check date is Invalid',
      secondActualCheckDateRequired: 'Second actual Check date is required',
      secondActualCheckDateInvalid: 'Second actual Check date is Invalid',
      statusInvalid: 'Status is Invalid',
      finalizeIdRequired: 'finalize id required',
      finalizeIdInvalid: 'invalid finalize id',
      finalizeIdNotExist: 'finalize id does not exists.',
    },
    template: {
      templateNameRequired: 'template Name Required',
      templateNameInvalid: 'template name invalid',
      slugNameRequired: 'slug Name Required',
      slugNameNotExists: 'slug Name does not exists',
      descriptionRequired: 'description is required',
      subjectRequired: 'subject is required',
      templateRequired: 'template is required',
    },
    invoiceTheme: {
      IdRequired: 'Invoice theme Id Required',
      IdInvalid: 'Id Is Invalid',
      IdNotExists: 'Invoice theme Id not exists',
      isActive: 'Is active status required',
      isActivestatusInvalid: 'Invoice theme status is invalid',

    },
    groupsConfigurations: {
      IdRequired: 'Group ID is required',
      IdInvalid: 'Group ID is Invalid',
      IdDoesnotExist: 'Group ID does not exist',
      nameRequired: 'Group name is Required',
      nameInvalid: 'Group name is Invalid',
      nameExists: 'Group name already exists',
      statusRequired: 'Group status is required',
      statusInvalid: 'Group status is Invalid',
      memberIdInvalid: 'Group member ID is Invalid',
      memberIdDoesNotExists: 'Group member does not exists',
    },
    notificationSettings: {
      IdRequired: 'Notification Id is Required',
      IdInvalid: 'Notification Id is invalid',
      IdDoesnotExist: 'Notification Id does not exists',
    },
    reminder: {
      invalidTimesheetCycle: 'Invalid Timesheet Cycle',
      invalidReminderStatus: 'In Valid Reminder Status',
      idRequired: 'reminder id Required',
      idInvalid: 'Invalid reminder id',
      idNotExists: 'id does not exists',
      idSlugNotExists: 'id does not exists for the slug',
      nameRequired: 'name Required',
      nameInvalid: 'Invalid name',
      namealreadyExists: 'name already exists',
      reminderPersonsRequired: 'reminder persons Required',
      reminderPersonsInvalid: 'Invalid reminder persons',
      daysRequired: 'days Required',
      daysInvalid: 'Invalid days',
      reminderTimeRequired: 'Reminder Time Required',
      reminderTimeInvalid: 'Invalid Reminder Time',
      typeRequired: 'type Required',
      typeInvalid: 'Invalid type',
      ccRequired: 'CC Required',
      ccInvalid: 'Invalid CC',
      bccRequired: 'BCC Required',
      bccInvalid: 'Invalid BCC',
      subjectRequired: 'subject Required',
      subjectInvalid: 'Invalid subject',
      templateRequired: 'template Required',
      templateInvalid: 'Invalid template',
      notificationTemplateRequired: 'notification template Required',
      notificationTemplateInvalid: 'Invalid notification template',
      enabledRequired: 'enabled Required',
      enabledInvalid: 'Invalid enabled',
      enableConsultantRequired: 'enable consultant Required',
      enableConsultantInvalid: 'Invalid enable consultant',
      remindApproverRequired: 'remind approver Required',
      remindApproverInvalid: 'Invalid remind approver',
      remindClientVendorRequired: 'remind client/vendor Required',
      remindClientVendorInvalid: 'Invalid remind client/vendor',
      BccArray: 'BCC emails should be send in an array',
      CCArray: 'CC emails should be send in an array',
      ccEmailIdInvalid: 'cc email id is invalid',
      bccEmailIdInvalid: 'bcc emai id is invalid',
      slugInvalid: 'Invalid url',
      groupIdNotExists: "group id does not exists",
      timeTypeRequired: "time type required",
      timeTypeInvalid: "time type invalid",
      reminderSender: "please mark any one reminder",
      reminderNameIdRequired: "Reminder Name Id Required",
      reminderNameIdInvalid: "Invalid Reminder Name Id",
      reminderNameIdNotExists: "Reminder Name Id Not Exists",
      reminderAlreadyExists: "Reminder Already Exists",
      referrableIdInvalid: 'Invalid Referrable Id',
      statusInvalid: 'Invalid status',
      statusRequired: 'status required',
      groupIdsArray: 'Group Ids should be send in an array',
      groupIdsInvalid: 'Group id is invalid',
      employeeIdsArray: 'Employee Ids should be send in an array',
      employeeIdsInvalid: 'Employee id is invalid',
      employeeIdNotExists: 'Employee id Not Exists',
      occuranceOrderRequired: "Occurance Order required",
      occuranceOrderInvalid: "Occurance Order invalid",
      numberRequired: 'Number Required',
      numberInvalid: 'Invalid Number',
      cycleRequired: 'Cycle Required',
      cycleInvalid: 'Invalid Cycle',
      recurringRequired: 'Is Recurring Required',
      recurringInvalid: 'Invalid Is Recurring',
      reminderDateRequired: 'Reminder Date Required',
      reminderDateInvalid: 'Invalid Reminder Date',
      recurringDaysInvalid: 'Recurring Days Invalid',
      contentInvalid: 'Invalid Content',
      contentRequired: 'Content required',
      descriptionInvalid: 'Invalid description',
      descriptionRequired: 'description required',
      reminderOccuranceIdRequired: 'Reminder Occurance Id Required',
      reminderOccuranceIdInvalid: 'Invalid Reminder Occurance Id',
      reminderOccuranceIdNotExists: 'Reminder Occurance Id Not Exists',
      reminderReferrableIdRequired: 'Reminder Referrable Id Required',
      reminderReferrableIdInvalid: 'Invalid Reminder Referrable Id',
      reminderReferrableIdNotExists: 'Reminder Configuration Id Not Exists',
      reminderConfigurationIdRequired: 'Reminder Configuration Id Required',
      reminderConfigurationIdInvalid: 'Invalid Configuration Referrable Id',
      reminderConfigurationIdNotExists: 'Reminder Referrable Id Not Exists',
      multipleRecurring: 'Recurring Cannot be done for multiple Cycles',
      referrableTypeInvalid: 'Invalid Referrable Type',
      referrableTypeRequired: 'Referrable Type Required',
      referrableTypeNotExist: 'Referrable Type does not Exists',
      nameInvalid: 'Invalid Reminder Name',
      nameRequired: 'Reminder Name Required',
      nameExists: 'Reminder Name Exists',
      documentIdRequired: 'Document Id is Required',
      documentIdInvalid: 'Document Id is invalid',
      documentIdNotExists: 'Document Id is does not exists',
      payrollReminderInvalid: 'Invalid Payroll Reminder',
      payrollReminderRequired: 'Payroll Reminder required',
      checkDateBeforeDate: 'Check Date Not Allowed To Have Past Date'
    },
    onboardingDocument: {
      onboardingNameRequired: 'self onboarding document name Required',
      onboardingNameInvalid: 'self onboarding document name Invalid',
      onboardingNameExists: 'self onboarding document name Exits',
      documentStatusRequired: 'document status Required',
      documentStatusInvalid: 'Invalid document status',
      onboardingIdRequired: 'self onboarding document Id Required',
      onboardingIdInvalid: 'self onboarding document Id Invalid',
      onboardingIdNotExists: 'self onboarding document Id not Exits',
      isEditableRequired: 'is editable Required',
      isEditableInvalid: 'is editable invalid',
      informationRequired: 'information Required',
      informationInvalid: 'information invalid',
      IdNotExists: 'Document ID does not exist',
      isMandatoryInvalid: 'Is Mandatory is Invalid',
      status: 'Status is Invalid'
    },
    ocrMapping: {
      ocrDocumentIdRequired: 'ocr document Id Required',
      ocrDocumentIdInvalid: 'ocr document Id Invalid',
      ocrDocumentIdNotExists: 'ocr document Id not Exits',
      documentIdRequired: 'document Id Required',
      documentIdInvalid: 'document Id Invalid',
      documentNotExists: 'document Id not exists',
      typeRequired: 'type Required',
      typeInvalid: 'Invalid type',
      ocrMappingExists: 'ocr mapping with the documents already exists',
      ocrMappingIdRequired: 'ocr mapping Id Required',
      ocrMappingIdInvalid: 'ocr mapping Id Invalid',
      ocrMappingIdNotExists: 'ocr mapping Id not Exits',
    },
    formFields: {
      slugRequired: 'Slug Required',
      slugInvalid: 'Invalid Slug',
      IdRequired: 'Form Feild Id is Required',
      IdInvalid: 'Form Feild Id is inavlid',
      nameIsRequired: 'Name is Required',
      nameIsInvalid: 'Name is Invalid',
      isEditableRequired: 'is Editable is Required',
      isEditableInvalid: 'is Editable is Invalid',
      isRequiredRequired: 'is Editable is Required',
      isRequiredInvalid: 'is Editable is Invalid',
      isDisplayRequired: 'is Editable is Required',
      isDisplayInvalid: 'is Editable is Invalid',
    },

    announcement: {
      expressionTypeRequired: "Expression Type Required",
      expressionTypeInvalid: "Expression Type Invalid",
      announcementIdRequired: "Announcement Id Required",
      announcementIdInvalid: "Announcement Id Invalid",
      announcementIdNotExists: 'Announcement Id Not Exits',
      publishDateRequired: "Publish Date Required",
      publishDateInvalid: "Publish Date Invalid"
    }
  },
  /* Response messages for application configurations */

  /* Response messages for endclient */
  endClients: {
    endClientsNameRequired: 'endClients Name Required',
    endClientsNameInvalid: 'endClients name invalid',
    descriptionRequired: 'description is required',
    isActivestatusInvalid: 'isActive status is invalid',
    isActivestatusRequired: 'isActive status is required',
    isDraftstatusInvalid: 'isDraft status is invalid',
    isDraftstatusRequired: 'isDraft status is required',
    endClientsIdRequired: 'end Clients Id Required',
    endClientsContactIdRequired: 'end Clients Contact Id Required',
    endClientsIdInvalid: 'Invalid endClients Id',
    endClientsContactIdInvalid: 'Invalid endClients Contact Id',
    endClientsNameExists: 'endClients Name Already Exists',
    IdNotExists: 'endClients Id doesnot exists',
    contactIdNotExists: 'endClients contact Id doesnot exists',
    endClientsIdExists: 'endClients id Already Exists',
    endClientReferenceIdRequired: ' reference Id required',
    endClientReferanceNameRequired: 'end Client referance name required',
    endClientReferenceIdExists: ' end client reference Id exists',
    endClientReferenceIdinvalid: ' end client reference Id invalid',
    endClientIdInvalid: 'end client id is Invalid',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',
    addressLineOneRequired: 'Address Line One is Required',
    addressLineTwoRequired: 'Address Line Two is Required',
    addressLineOneInvalid: 'Address Line One is Invalid',
    addressLineTwoInvalid: 'Address Line Two is Invalid',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    zipCodeInvalid: 'Zipcode / Pincode is Invalid',
    stateIdInvalid: 'state Id Invalid',
    countryIdInvalid: 'country Id Invalid',
    endClientContactsIdExists: 'end client Contacts id Already Exists',
    firstNameRequired: 'First Name Required',
    firstNameInvalid: 'First Name Only Characters with white space are allowed',
    middleNameRequired: 'Middle Name Required',
    middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
    lastNameRequired: 'Last Name Required',
    lastNameInvalid: 'Middle Name Only Characters with white space are allowed',
    emailIdRequired: 'Email ID Required',
    emailIdNotAllowed: 'Email ID not allowed to create an account',
    emailIdInvalid: 'Email ID Contain Invalid Characters',
    emailIdExists: 'Email ID Already Exists',
    contactNumberRequired: ' contact number required',
    contactNumberInvalid: ' contact number must be a number',
    contactNumberExists: ' contact number already exists',
    mobileNumberRequired: 'mobile number required',
    mobileNumberInvalid: ' mobile number must be a number',
    mobileNumberExists: ' mobile number already exists',
    extensionRequired: 'extension required',
    extensionInvalid: 'extension must be a number',
    endClientContactsIdRequired: 'end client Contacts Id Required',
    endClientContactsIdInvalid: 'Invalid end client Contacts Id',
    contactIdNotExists: 'end client Contacts Id doesnot exists',
    countryId: 'country Id Required',
    countryIdNotExists: 'country Id doesnot exists',
    stateIdNotExists: 'state Id doesnot exists',
    stateId: 'state Id Required',
    statusInvalid: 'Invalid status',
    statusRequired: 'status required'
  },
  endClientContacts: {
    endClientsNameRequired: 'endClients Name Required',
    endClientsNameInvalid: 'endClients name invalid',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    endClientsIdRequired: 'endClients Id Required',
    endClientsIdInvalid: 'Invalid endClients Id',
    endClientsNameExists: 'endClients Name Already Exists',
    IdNotExists: 'endClients Id doesnot exists',
    endClientsIdExists: 'endClients id Already Exists',
    endClientReferenceIdRequired: ' end client reference Id required',
    endClientReferanceNameRequired: 'end Client referance name required',
    endClientReferenceIdExists: 'end client reference Id exists',
    endClientReferenceIdinvalid: 'end client reference Id invalid',
    endClientIdInvalid: 'end client id is Invalid',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',
    addressLineOneRequired: 'Address Line One is Required',
    addressLineTwoRequired: 'Address Line Two is Required',
    addressLineOneInvalid: 'Address Line One is Invalid',
    addressLineTwoInvalid: 'Address Line Two is Invalid',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    zipCodeInvalid: 'Zipcode / Pincode is Invalid',
    stateIdInvalid: 'state Id Invalid',
    countryIdInvalid: 'country Id Invalid',
    endClientContactsNameRequired: 'end client Contacts Name Required',
    endClientContactsNameInvalid: 'end client Contacts Document name',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    endClientContactsIdRequired: 'end client Contacts Id Required',
    endClientContactsIdInvalid: 'Invalid end client Contacts Id',
    endClientContactsNameExists: 'end client Contacts Name Already Exists',
    contactIdNotExists: 'end client Contacts Id doesnot exists',
    endClientContactsIdExists: 'end client Contacts id Already Exists',
    firstNameRequired: 'First Name Required',
    firstNameInvalid: 'First Name Only Characters with white space are allowed',
    middleNameRequired: 'Middle Name Required',
    middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
    lastNameRequired: 'Last Name Required',
    lastNameInvalid: 'Middle Name Only Characters with white space are allowed',
    emailIdRequired: 'Email ID Required',
    emailIdNotAllowed: 'Email ID not allowed to create an account',
    emailIdInvalid: 'Email ID Contain Invalid Characters',
    emailIdExists: 'Email ID Already Exists',
    contactNumberRequired: ' contact number required',
    contactNumberInvalid: ' contact number must be a number',
    contactNumberExists: ' contact number already exists',
    mobileNumberRequired: 'mobile number required',
    mobileNumberInvalid: ' mobile number must be a number',
    mobileNumberExists: ' mobile number already exists',
    extensionRequired: 'extension required',
    extensionInvalid: 'extension must be a number',
  },
  /* Response messages for end client */

  /* Response messages for client */
  client: {
    clientNameRequired: 'Client Name Required',
    clientNameInvalid: 'Invalid Client name',
    clientIdRequired: 'Client Id Required',
    clientIdInvalid: 'Client Id Invalid',
    clientIdNotExists: 'Client Id doesnot exists',
    clientNameExists: 'Client Name Already Exists',
    clientIdExists: 'Client id Already Exists',
    clientReferanceNameInvalid: 'Client referance name invalid',
    clientReferanceNameRequired: 'Client referance name required',
    invalidReferencesObject: 'Invalid References Array Object',
    IdRequired: 'Id required',
    IdInvalid: 'Invalid id',
    IdNotExists: 'Client Id not exists',
  },
  clientAddress: {
    clientAddressNameRequired: 'client Address Name Required',
    clientAddressNameInvalid: 'client Address Document name',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    clientAddressIdRequired: 'client Address Id Required',
    clientAddressIdInvalid: 'Invalid client Address Id',
    clientAddressNameExists: 'client Address Name Already Exists',
    IdNotExists: 'client Address Id doesnot exists',
    clientAddressIdExists: 'client Address id Already Exists',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',
    addressLineOneRequired: 'Address Line One is Required',
    addressLineTwoRequired: 'Address Line Two is Required',
    addressLineOneInvalid: 'Address Line One is Invalid',
    addressLineTwoInvalid: 'Address Line Two is Invalid',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    zipCodeInvalid: 'Zipcode / Pincode is Invalid',
    stateIdInvalid: 'state Id Invalid',
    countryIdInvalid: 'country Id Invalid',
    zipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
  },
  clientContacts: {
    clientContactsNameRequired: 'client Contacts Name Required',
    clientContactsNameInvalid: 'client Contacts Document name',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    clientContactsIdRequired: 'client Contacts Id Required',
    clientContactsIdInvalid: 'Invalid client Contacts Id',
    clientContactsNameExists: 'client Contacts Name Already Exists',
    IdNotExists: 'client Contacts Id doesnot exists',
    clientContactsIdExists: 'client Contacts id Already Exists',
    firstNameRequired: 'First Name Required',
    firstNameInvalid: 'First Name Only Characters with white space are allowed',
    middleNameRequired: 'Middle Name Required',
    middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
    lastNameRequired: 'Last Name Required',
    lastNameInvalid: 'Last Name Only Characters with white space are allowed',
    emailIdRequired: 'Email ID Required',
    emailIdNotAllowed: 'Email ID not allowed to create an account',
    emailIdInvalid: 'Email ID Contain Invalid Characters',
    emailIdExists: 'Email ID Already Exists',
    contactNumberRequired: 'contact number required',
    contactNumberInvalid: ' Invalid contact number ',
    contactNumberExists: ' contact number already exists',
    mobileNumberRequired: ' mobile number required',
    mobileNumberInvalid: ' Invalid mobile number ',
    mobileNumberExists: ' mobile number already exists',
    extensionRequired: 'extension required',
    extensionInvalid: 'extension must be a number',
    clientsIdRequired: 'clients Id Required',
    clientsIdInvalid: 'Invalid clients Id',
    clientIdNotExists: 'clients Id doesnot exists',
    clientsIsPrimaryRequired: 'Clients Contact Is Primary Required',
    clientsIsPrimaryInvalid: 'Clients Contact Is Primary Invalid',
    clientsIsPrimaryExists: 'Primary Contact with Primary Already Exists'
  },
  clientComments: {
    clientCommentsIdRequired: 'Comments Id Required',
    clientCommentsIdInvalid: 'Comments Id Invalid',
    clientsIdRequired: 'clients Id Required',
    clientsIdInvalid: 'Invalid clients Id',
    clientIdNotExists: 'clients Id doesnot exists',
    commentRequired: 'comment Required',
    commentInvalid: 'Invalid comment',
  },
  clients: {
    companyNameRequired: 'Name is Required',
    companyNameInvalid: 'name Invalid',
    companyNameExists: 'Name Already Exists',
    referenceIdRequired: ' Reference Id required',
    referenceIdExists: ' Reference Id exists',
    referenceIdinvalid: ' Reference Id invalid',
    clientAddressNameRequired: 'client Address Name Required',
    clientsNameRequired: 'clients Name Required',
    clientsNameInvalid: 'clients name invalid',
    descriptionRequired: 'description is required',
    isdraftstatusInvalid: 'isdraft status is invalid',
    isdraftstatusRequired: 'isdraft status is Required',
    clientsIdRequired: 'clients Id Required',
    clientsIdInvalid: 'Invalid clients Id',
    clientsNameExists: 'clients Name Already Exists',
    IdNotExists: 'clients Id doesnot exists',
    clientsIdExists: 'clients id Already Exists',
    openingBalanceRequired: 'Opening Balance Required',
    openingBalanceinvalid: 'Opening Balance invalid',
    clientReferenceIdRequired: ' client reference Id required',
    clientReferanceNameRequired: ' client referance name required',
    clientReferenceIdExists: ' client reference Id exists',
    clientReferenceIdinvalid: ' client reference Id invalid',
    clientAddressNameRequired: 'client Address Name Required',
    clientAddressNameInvalid: 'client Address Document name',
    descriptionRequired: 'description is required',
    isActivestatusInvalid: 'isActive status is invalid',
    isActivestatusRequired: 'isActive status is Required',
    clientAddressIdRequired: 'client Address Id Required',
    clientAddressIdInvalid: 'Invalid client Address Id',
    clientAddressNameExists: 'client Address Name Already Exists',
    ShippingaddressIdNotExists: ' Shipping address Id doesnot exists',
    communicationaddressIdNotExists: 'communication address Id doesnot exists',
    clientAddressIdExists: 'client Address id Already Exists',
    clientAddressIdNotExists: 'client Address id does not Exists',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',
    commaddressLineOneRequired: 'communication Address Line One is Required',
    commaddressLineTwoRequired: 'communication Address Line Two is Required',
    commaddressLineOneInvalid: 'communication Address Line One is Invalid',
    commaddressLineTwoInvalid: 'communication Address Line Two is Invalid',
    shipaddressLineOneRequired: 'shipping Address Line One is Required',
    shipaddressLineTwoRequired: 'shippingAddress Line Two is Required',
    shipaddressLineOneInvalid: 'shippingAddress Line One is Invalid',
    shipaddressLineTwoInvalid: 'shippingAddress Line Two is Invalid',
    shipaddressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',
    commcityRequired: 'communication City is Required',
    commcityInvalid: 'communicationCity Id is Invalid',
    commstateRequired: 'communication State ID Required',
    commcountryRequired: 'communication Country ID Required',
    commstateInvalid: 'communication State Id is Invalid',
    commcountryInvalid: 'communication Country Id is Invalid',
    commzipCodeRequired: 'communication Zipcode / Pincode is Required',
    commzipCodeInvalid: 'communication Zipcode / Pincode is Invalid',
    commstateIdInvalid: 'communication State Id Invalid',
    commstateIdNotExists: 'communication State Id does not exists',
    commcountryIdInvalid: 'communication Country Id Invalid',
    commcountryIdNotExists: 'communication country Id does not exists',
    shipcityRequired: 'shipping City is Required',
    shipcityInvalid: 'shippingCity Id is Invalid',
    shipstateRequired: 'shipping State ID Required',
    shipcountryRequired: 'shipping Country ID Required',
    shipstateInvalid: 'shipping State Id is Invalid',
    shipcountryInvalid: 'shipping Country Id is Invalid',
    shipzipCodeRequired: 'shipping Zipcode / Pincode is Required',
    shipzipCodeInvalid: 'shipping Zipcode / Pincode is Invalid',
    shipstateIdInvalid: 'shipping State Id Invalid',
    shipstateIdNotExists: 'shipping State Id does not exists',
    shipcountryIdInvalid: 'shipping Country Id Invalid',
    shipcountryIdNotExists: 'shipping country Id does not exists',
    invalidOpeningBalance: 'Invalid Client Opening Balance',
    clientsIdExistsContacts: 'clients id Exists in client contacts',
    clientsIdExistsAddress: 'clients id Exists in client address',
    clientsIdExistsPlacements: 'clients id Exists in placements',
    clientsIdExistsInvoices: 'clients id Exists in invoices',
  },
  companies: {
    slugNameRequired: 'Slug Name is Required',
    slugNameInvalid: 'Slug Name is Invalid',
    slugNameShouldbe: `Slug Name should be 'client' or 'vendor' or 'end-client'`,
    companyNameRequired: 'Name is Required',
    companyNameInvalid: 'name Invalid',
    companyNameExists: 'Name Already Exists',
    referenceIdRequired: ' Reference Id required',
    referenceIdExists: 'Reference Id already exists',
    referenceIdinvalid: ' Reference Id invalid',
    isActivestatusInvalid: 'isActive status is invalid',
    isActivestatusRequired: 'isActive status is Required',
    billingAddressIdRequired: 'Billing address Id is Required',
    billingAddressIdInvalid: 'Billing address Id is Invalid',
    AddressLineOneRequired: 'Address Line One is Required',
    AddressLineOneInvalid: 'Address Line One is Invalid',
    AddressLineTwoInvalid: 'Address Line Two is Invalid',
    CityRequired: 'City is Required',
    CityInvalid: 'City is Invalid',
    StateRequired: 'State ID Required',
    StateInvalid: 'State Id Invalid',
    StateIdNotExists: 'State Id does not exists',
    CountryRequired: 'Country ID Required',
    CountryInvalid: 'Country Id is Invalid',
    CountryNotExists: 'country Id does not exists',
    ZipCodeRequired: 'Zipcode / Pincode is Required',
    ZipCodeInvalid: 'Zipcode / Pincode is Invalid',
    ZipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',

    billingAddressLineOneRequired: 'Billing Address Line One is Required',
    billingAddressLineTwoRequired: 'Billing Address Line Two is Required',
    billingAddressLineOneInvalid: 'Billing Address Line One is Invalid',
    billingAddressLineTwoInvalid: 'Billing Address Line Two is Invalid',
    shippingAddressLineOneRequired: 'shipping Address Line One is Required',
    shippingAddressLineTwoRequired: 'shippingAddress Line Two is Required',
    shippingAddressLineOneInvalid: 'shippingAddress Line One is Invalid',
    shippingAddressLineTwoInvalid: 'shippingAddress Line Two is Invalid',
    billingCityRequired: 'Billing City is Required',
    billingCityInvalid: 'Billing City is Invalid',
    billingStateRequired: 'Billing State ID Required',
    billingStateInvalid: 'Billing State Id Invalid',
    billingStateIdNotExists: 'Billing State Id does not exists',
    billingCountryRequired: 'Billing Country ID Required',
    billingCountryInvalid: 'Billing Country Id is Invalid',
    billingCountryNotExists: 'Billing country Id does not exists',
    billingZipCodeRequired: 'Billing Zipcode / Pincode is Required',
    billingZipCodeInvalid: 'Billing Zipcode / Pincode is Invalid',
    billingZipCodeShouldBe: 'Billing Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
    billingAddressIdNotExists: 'Billing address Id doesnot exists',
    billingAddressArray: 'Billing address should be an array',
    billingAddressArrayRequired: 'Billing address array required',
    shipaddressLineOneRequired: 'shipping Address Line One is Required',
    shipaddressLineTwoRequired: 'shippingAddress Line Two is Required',
    shipaddressLineOneInvalid: 'shippingAddress Line One is Invalid',
    shipaddressLineTwoInvalid: 'shippingAddress Line Two is Invalid',
    shippingAddressArray: 'Shipping address should be an array',
    shippingAddressArrayRequired: 'Shipping address array required',
    shippingAddressIdRequired: 'Shipping address Id is Required',
    shippingAddressIdInvalid: 'Shipping address Id is Invalid',
    shipcityRequired: 'shipping City is Required',
    shipcityInvalid: 'shippingCity Id is Invalid',
    shipstateRequired: 'shipping State ID Required',
    shipstateInvalid: 'shipping State Id is Invalid',
    shipstateIdNotExists: 'shipping State Id does not exists',
    shipcountryRequired: 'shipping Country ID Required',
    shipcountryInvalid: 'shipping Country Id is Invalid',
    shipcountryIdNotExists: 'shipping country Id does not exists',
    shipzipCodeRequired: 'shipping Zipcode / Pincode is Required',
    shipzipCodeInvalid: 'shipping Zipcode / Pincode is Invalid',
    shipZipCodeShouldBe: 'shipping Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
    ShippingaddressIdNotExists: ' Shipping address Id doesnot exists',
    sameAsAboveRequired: 'Same As Above is Required',
    sameAsAboveInvalid: 'Same As Above is Invalid',
    companyIdRequired: 'Company ID Required',
    companyIDInvalid: 'Company ID Invalid',
    companyIdNotExists: 'Company ID does not exists',
    companyIdExistsPlacements: 'Company id Exists in placements',
    companyIdExistsInvoices: 'company id Exists in invoices',
    companyIdExistsBills: 'company ID Exists in Bills',
    vendorPriceRequired: 'Vendor price per hour is required',
    invalidVendorPrice: 'invalid vendor price',
    vendorIdNotExists: 'Vendor id doesn\'t exists',

    clientAddressNameRequired: 'client Address Name Required',
    clientsNameRequired: 'clients Name Required',
    clientsNameInvalid: 'clients name invalid',
    descriptionRequired: 'description is required',
    isdraftstatusInvalid: 'isdraft status is invalid',
    isdraftstatusRequired: 'isdraft status is Required',
    clientsIdRequired: 'clients Id Required',
    clientsIdInvalid: 'Invalid clients Id',
    clientsNameExists: 'clients Name Already Exists',
    IdNotExists: 'clients Id doesnot exists',
    clientsIdExists: 'clients id Already Exists',
    openingBalanceRequired: 'Opening Balance Required',
    openingBalanceinvalid: 'Opening Balance invalid',
    clientReferenceIdRequired: ' client reference Id required',
    clientReferanceNameRequired: ' client referance name required',
    clientReferenceIdExists: ' client reference Id exists',
    clientReferenceIdinvalid: ' client reference Id invalid',
    clientAddressNameRequired: 'client Address Name Required',
    clientAddressNameInvalid: 'client Address Document name',
    descriptionRequired: 'description is required',

    clientAddressIdRequired: 'client Address Id Required',
    clientAddressIdInvalid: 'Invalid client Address Id',
    clientAddressNameExists: 'client Address Name Already Exists',
    clientAddressIdExists: 'client Address id Already Exists',
    clientAddressIdNotExists: 'client Address id does not Exists',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',

    shipaddressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',


    invalidOpeningBalance: 'Invalid Client Opening Balance',
    clientsIdExistsContacts: 'clients id Exists in client contacts',
    clientsIdExistsAddress: 'clients id Exists in client address',
  },
  companyComments: {
    commentsIdRequired: 'Comments Id Required',
    commentsIdInvalid: 'Comments Id Invalid',
    commentIdNotExists: 'Comments Id does not exists',
    companyIdRequired: 'Company Id Required',
    companyIdInvalid: 'Invalid clients Id',
    companyIdNotExists: 'Company Id doesnot exists',
    commentRequired: 'comment Required',
    commentInvalid: 'Invalid comment',
  },
  companyContacts: {
    idRequired: 'Contact ID required',
    idInvalid: 'Contact ID invalid',
    idNotExists: 'Contact ID does not exists',
    firstNameRequired: 'First Name Required',
    firstNameInvalid: 'First Name Only Characters with white space are allowed',
    middleNameRequired: 'Middle Name Required',
    middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
    lastNameRequired: 'Last Name Required',
    lastNameInvalid: 'Last Name Only Characters with white space are allowed',
    emailIdRequired: 'Email ID Required',
    emailIdNotAllowed: 'Email ID not allowed to create an account',
    emailIdInvalid: 'Email ID Contain Invalid Characters',
    emailIdExists: 'Email ID Already Exists',
    contactNumberRequired: 'contact number required',
    contactNumberInvalid: ' Invalid contact number ',
    contactNumberLength: 'Contact number length sholud be min 10 digits and max 12 digits',
    contactNumberExists: ' contact number already exists',
    mobileNumberRequired: ' mobile number required',
    mobileNumberInvalid: ' Invalid mobile number ',
    mobileNumberExists: ' mobile number already exists',
    mobileNumberLength: 'Mobile number length sholud be min 10 digits and max 12 digits',
    extensionRequired: 'Extension Required',
    extensionInvalid: 'Extension Invalid',
    companyContactIdnotExists: 'Company contact not Mapped to the Company',
    contactDetailsAlreadyExists: 'Contact details aleardy exists'
  },

  /* Response messages for client */

  /* Response messages for Vendor */
  vendors: {
    vendorNameRequired: 'Vendor Name Required',
    vendorNameInvalid: 'Invalid Vendor name',
    vendorIdRequired: 'Vendor Id Required',
    vendorIdInvalid: 'Invalid Vendor Id',
    vendorNameExists: 'Vendor Name Already Exists',
    vendorReferenceIdRequired: 'Vendor ReferenceId Required',
    vendorReferenceIdInvalid: 'Invalid Vendor Reference Id',
    vendorReferenceIdExists: 'Vendor Reference id Already Exists',
    invalidReferencesObject: 'Invalid References Array Object',
    addressInvalid: 'Invalid Address',
    displayNameRequired: 'Display Name Required',
    displayNameInvalid: 'Invalid Display name',
    invalidShippingAddressObject: 'Invalid Shipping Address Array Object',
    websiteAddressRequired: 'Website Address Required',
    desknumberRequired: 'Desk Number Required',
    desknumberInvalidL: 'Invalid Desk Number',
    extensionRequired: 'Extension Required',
    extensionInvalid: 'Invalid Extension',
    orderInvalid: 'Rank must be a number',
    invalidContactObject: 'Invalid Contact Details Array Object',
    invalidPaycycleObject: 'Invalid Pay Cycle Details Array Object',
    currencyTypeRequired: 'Currency Type Required',
    openingBalanceRequired: 'Opening Balance Required',
    paymentTermsRequired: 'Payment Terms Required',
    weekStartsFromRequired: 'Week Starts From Required',
    weekStartsFromInvalid: 'Week Starts From is invalid',
    contactIdRequired: 'Contact ID Required',
    contactIdInvalid: 'Invalid Contact ID',
    documentNotFound: 'Document Cannot Blank',
    vendorFirstnameRequired: 'Vendor first name required',
    vendorFirstnameInvalid: 'Vendor first name invalid',
    vendorMiddlenameRequired: 'Vendor middle name required',
    vendorMiddlenameInvalid: 'Vendor middle name invalid',
    vendorLastnameRequired: 'Last name required',
    vendorLastnameInvalid: 'Last name invalid',
    vendorEmailidRequired: 'Vendor email id required',
    vendorEmailidInvalid: 'Vendor email id invalid',
    vendorDisplayRequired: 'Display name required',
    vendorDesknumberRequired: 'Vendor desk number required',
    vendorDesknumberInvalid: 'Vendor desk number invalid',
    vendorExtensionRequired: 'Vendor extension required',
    vendorExtensionInvalid: 'Vendor extension invalid',
    vendorMobilenumberRequired: 'Vendor mobile number required',
    vendorMobilenumberInvalid: 'Vendor mobile number invalid',
    vendorRankRequired: 'Vendor rank required',
    vendorRankInvalid: 'Vendor rank invalid',
    vendorContactsExists: 'Vendor contact already exists',
    currencyTypeIdRequired: 'Currency Type ID required',
    currencyTypeIdInvalid: 'Currency Type ID invalid',
    netPaymentTermsIdRequired: 'Net Pay Terms ID required',
    netPaymentTermsIdInvalid: 'Net Pay Terms ID Invalid',
    invoiceTsCycleIdRequired: 'Invoice Time Sheet Cycle ID required',
    invoiceTsCycleIdInvalid: 'Invoice Time Sheet Cycle ID invalid',
    vendorIdDoesNotExist: 'Vendor ID does not exists',
    vendorStatusRequired: 'Vendor Status is Required',
    VendorStatusInvalid: 'Vendor Status is Invalid',
    vendorsIdExistsPlacements: 'Vendors id Exists in placements',
    vendorsIdExistsInvoices: 'clients id Exists in invoices',
    isdraftstatusRequired: 'Is Draft Status is Required',
    isdraftstatusInvalid: 'Is Draft Status is Invalid',
    isActivestatusRequired: 'Is Active Status is Required',
    isActivestatusInvalid: 'Is Active Status is Invalid',
    commaddressLineOneInvalid: 'Address Line One is Invalid',
    commaddressLineOneRequired: 'Address Line One is Required',
    commaddressLineTwoInvalid: 'Address Line Two is Invalid',
    employeeAlreadyMappedToVendor: 'Employee already mapped to another vendor'

  },

  vendorAddress: {
    vendorAddressNameRequired: 'vendor Address Name Required',
    vendorAddressNameInvalid: 'vendor Address Document name',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    vendorAddressIdRequired: 'vendor Address Id Required',
    vendorAddressIdInvalid: 'Invalid vendor Address Id',
    vendorAddressNameExists: 'vendor Address Name Already Exists',
    IdNotExists: 'vendor Address Id doesnot exists',
    vendorAddressIdExists: 'vendor Address id Already Exists',
    addressTypeInvalid: ' Address Type Invalid',
    addressTypeRequired: ' Address Type Required',
    addressLineOneRequired: 'Address Line One is Required',
    addressLineTwoRequired: 'Address Line Two is Required',
    addressLineOneInvalid: 'Address Line One is Invalid',
    addressLineTwoInvalid: 'Address Line Two is Invalid',
    addressRequired: 'Address is Required',
    addressIdRequired: 'Address Id is Required',
    addressIdInvalid: 'Address Id is invalid',
    cityRequired: 'City is Required',
    cityInvalid: 'City Id is Invalid',
    stateRequired: 'State is Required',
    countryRequired: 'Country is Required',
    stateInvalid: 'State Id is Invalid',
    countryInvalid: 'Country Id is Invalid',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    zipCodeInvalid: 'Zipcode / Pincode is Invalid',
    stateIdInvalid: 'state Id Invalid',
    countryIdInvalid: 'country Id Invalid',
    zipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
  },

  vendorContacts: {
    vendorContactsNameRequired: 'vendor Contacts Name Required',
    vendorContactsNameInvalid: 'vendor Contacts Document name',
    descriptionRequired: 'description is required',
    statusInvalid: 'isActive status is invalid',
    vendorContactsIdRequired: 'vendor Contacts Id Required',
    vendorContactsIdInvalid: 'Invalid vendor Contacts Id',
    vendorContactsNameExists: 'vendor Contacts Name Already Exists',
    vendorContactsIdRequired: 'Vendor Contact Id doesnot exists',
    vendorContactsIdExists: 'vendor Contacts id Already Exists',
    firstNameRequired: 'First Name Required',
    firstNameInvalid: 'First Name Only Characters with white space are allowed',
    middleNameRequired: 'Middle Name Required',
    middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
    lastNameRequired: 'Last Name Required',
    lastNameInvalid: 'Last Name Only Characters with white space are allowed',
    emailIdRequired: 'Email ID Required',
    emailIdNotAllowed: 'Email ID not allowed to create an account',
    emailIdInvalid: 'Email ID Contain Invalid Characters',
    emailIdExists: 'Email ID Already Exists',
    contactNumberRequired: 'contact number required',
    contactNumberInvalid: ' Invalid contact number ',
    contactNumberExists: ' contact number already exists',
    mobileNumberRequired: ' mobile number required',
    mobileNumberInvalid: ' Invalid mobile number ',
    mobileNumberExists: ' mobile number already exists',
    extensionRequired: 'extension required',
    extensionInvalid: 'extension must be a number',
    vendorsIdRequired: 'vendors Id Required',
    vendorsIdInvalid: 'Invalid vendors Id',
    vendorIdNotExists: 'vendors Id doesnot exists',
  },

  vendorComments: {
    vendorCommentsIdRequired: 'Vendor Comments ID is Required',
    vendorCommentsIdInvalid: 'Vendor Comments ID is Invalid',
    IdNotExists: 'Vendor Comments ID not exists',
    commentRequired: 'Comment is Required',
    commentInvalid: 'Comment is Invalid'
  },
  /* Response messages for Vendor */

  /* Response messages for Placement */
  placement: {
    inValidIdToGetApprovedusers: 'Invalid id to get Approved Users',
    idRequired: 'Id Required',
    slugRequired: 'Slug is required to get approved users',
    slugInvalid: 'Invalid slug to get approved users',
    timesheetAlreadyExistsForPlacement: 'Timesheet already configured for this placement',
    placementReferenceRequired: 'Placement Reference ID required',
    endClientIdRequired: 'End Client Id is required',
    endClientIdInvalid: 'End Client Id is Invalid',
    clientContactOneIdRequired: 'client contact one Id required',
    clientContactTwoIdRequired: 'client contact two Id required',
    clientContactOneIdInvalid: 'client contact one Id Invalid',
    clientContactTwoIdInvalid: 'client contact two Id Invalid',
    endClientContactTwoIdNotExists: 'end client contact two id doesnot exists',
    clientContactOneTwoUnique: 'client contact one and client contact two should be different',
    endClientContactOneIdRequired: 'end client contact one Id required',
    endClientContactOneIdInvalid: 'end client contact one Id Invalid',
    endClientContactOneIdNotExists: 'end client contact one id doesnot exists',
    endClientContactTwoIdInvalid: 'end client contact two Id Invalid',
    placementReferenceAlreadyExists: 'Placement Reference ID already exists',
    jobTitleIdInvalid: 'Invalid Job Title ID',
    jobTitleIdRequired: 'Job Title ID required',
    projectStartDateRequired: 'Project start date required',
    workEmailRequired: 'Work Email ID required',
    billingTypeRequired: 'Billing Type required',
    billingTypeInvalid: 'Billing Typeinvalid. It may be salary or hourly',
    billigRateRequired: 'Bill rate required',
    billingRateInvalid: 'Invalid Bill rate',
    payRateRequired: 'Pay Rate required',
    placementIdRequired: 'Placement ID required',
    placementIdInvalid: 'Placement ID invalid',
    placementIdNotExists: 'Placement ID does not exists',
    placementInvoiceConfigDone: 'Placement Invoice Configurations Exists',
    inavlidConfigType: 'Invalid config type. Config type must be 1 or 2',
    configTypeRequired: 'Config type required',
    projectNameRequired: 'project name is required',
    projectNameInvalid: 'project name is Invalid',
    noticePeriodRequired: 'notice period is required',
    noticePeriodInvalid: 'notice period is Invalid',
    startDateRequired: 'start date is Required',
    startDateInvalid: 'start date is Invalid',
    endDateRequired: 'End Date required',
    invalidEndDate: 'Invalid End date',
    endDateShouldGreater: 'End Date should be greater than Start Date',
    timesheetConfigIdRequired: 'Timesheet configuration Id is required',
    timesheetConfigIdInvalid: 'Timesheet configuration Id is Invalid',
    invoiceConfigIdRequired: 'Invoice configuration Id is required',
    invoiceConfigIdInvalid: 'Invoice configuration Id is Invalid',
    timesheetApprovalIdRequired: 'Timesheet approval id is required',
    timesheetApprovalIdInvalid: 'Timesheet approval id is Invalid',
    invoiceApprovalIdRequired: 'Invoice approval id is required',
    invoiceApprovalIdInvalid: 'Invoice approval id is Invalid',
    payRateInvalid: 'payrate is Invalid',
    payRateEffectiveDateRequired: 'effective from date required',
    payRateEffectiveToDateRequired: 'effective from date required',
    payRateEffectiveDateInvalid: 'effective from date Invalid',
    billingIdRequired: 'billing id required',
    billingIdInvalid: 'billing id is Invalid',
    isCurrentRateRequired: 'current rate is required (0-1)',
    isCurrentRateInvalid: 'current rate value is (0-1)',
    placedEmployeeIdInvalid: 'placed employee id invalid',
    placedEmployeeIdRequired: 'placed employee id required',
    InvalidDocumentId: 'Invalid document id',
    InvalidRoute: 'Invalid Route',
    InvalidContactId: 'Invalid contact id',
    InvalidPlacementConfigurationID: 'Invalid Configuration ID',
    InvalidPlacementApprovalID: 'Invalid Approval ID',
    InvalidPlacementDocumentId: 'Invalid Placement Document ID',
    InvalidPlacementDocumentIdFormat: 'Invalid Placement Document ID format',
    clientIDInvalid: 'Client ID Invalid',
    clientIDRequired: 'Client ID Required',
    clientIdNotExists: 'Client ID does not exists',
    cycleIDInvalid: 'Cycle ID Invalid',
    employeeIDInvalid: 'Employee ID Invalid',
    clientIdEndClientIdUnique: 'Cleint Id and End Client Id should be unique',
    placementAlreadyExists: 'Placement Already Exists between the Employee and Client',
    clientIdChangeNotAllowed: 'Client Cannot be changed',
    employeeIdChangeNotAllowed: 'Employee Cannot be changed',
    payTypeConfigurationIdRequired: 'Pay Type Configuration Id is required',
    payrollConfigurationTyperequired: 'Payroll configuration Type is required',
    payrollConfigurationTypeInvalid: 'Payroll configuration Type is invalid',
    payTypeConfigurationRequired: 'Pay Type configuration is invalid',
    otBillHoursRateInvalid: 'OT Bill hours is invalid',
    otPayRateInvalid: 'OT Pay rate is Invalid',
    otPayRateRequired: 'OT Pay rate is Required',
    otBillRateInvalid: 'OT Bill rate is Invalid',
    otBillRateRequired: 'OT Bill rate is Required',
    payRollPayRequired: 'Pay Roll Pay is Required',
    payValueRequired: 'Pay Value is Required',
    otPayRateConfigTypeInvalid: 'OT payrate config type is Invalid, it must be 1 or 2 or 3',
    otPayRateConfigTypeRequired: 'OT pay config type is Required',
    otPayRateMultiplierInvalid: 'OT Pay rate multiplier is Invalid',
    otPayRateMultiplierRequired: 'OT Pay rate multiplier is Required',
    locationTypeRequired: 'Location type is Required',
    locationTypeInvalid: 'Location type is Invalid. It should be either Remote or Client',
    locationAddressOneRequired: 'Location address one is Required',
    locationAddressOneInvalid: 'Location address one is Invalid',
    locationAddressTwoInvalid: 'Location address two is Invalid',
    locationCityRequired: 'Location City is Required',
    locationCityInvalid: 'Location City is Invalid',
    locationstateIdInvalid: 'Location State Id Invalid',
    locationstateIdRequired: 'Location State Id Required',
    locationCountryIdInvalid: 'Location Country Id Invalid',
    locationCountryIdRequired: 'Location Country Id Required',
    zipCodeRequired: 'Zipcode / Pincode is Required',
    invalidZipCode: 'invalid Zipcode / Pincode',
    zipCodeShouldBe: 'Zipcode / Pincode should minimum 5 digits and maximum 10 digits',
    employeeIDNotMatchWithPlacement: 'Employee ID should match with Placement ID',
    discountBillRateInvalid: 'Discount Bill rate is Invalid',
    discountBillDiscountTypeInvalid: 'Discount Bill rate Type is Invalid',
    discountBillRateRequired: 'Discount Bill rate is required',
    employeeEnablePayroll: 'Payroll is not enabled for the employee',
    employeePayroll: 'Payroll configuration is not set for employee',
    employeeVerified: 'Employee is not e-verified',
    payRateIdInavlid: 'Pay Rate Id Invalid',
    defaultPayTypeEmployee: 'Default Pay Type Does Not Exists for the Employee',
    calendarViewRequired: 'calendar view required',
    calendarViewInvalid: 'Invalid calendar view'

  },
  /* Response messages for Placement */

  timesheet: {
    invalidData: 'Please verify and resubmit the form as some fields have not been filled in or contain invalid data',
    TimesheetIdRequired: 'Timesheet Id is Required',
    TimesheetIdInvalid: 'Timesheet Id is Invalid',
    TimesheetNotDelete: 'Timesheet Cannot Be Deleted',
    TimesheetIdDoesNotExist: 'Timesheet Id does not Exist',
    timesheetDoesnotExists: 'Invalid Timesheet',
    dateRequired: 'Date is Required',
    invalidDate: 'Invalid Date Format',
    dateDoesnotExist: 'Date does not exists',
    startDateDoesnotExist: 'Start Date does not exists',
    endDateDoesnotExist: 'End Date does not exists',
    approvedStatusRequired: 'Approved Status is Required',
    approvedStatusInvalid: 'Approved Status is Invalid',
    statusRequired: 'Status is Required',
    statusInvalid: 'Status is Invalid',
    weeklyIdRequired: 'Weekly ID is required',
    weeklyIdInvalid: 'Weekly ID is Invalid',
    weeklyIdDoesnotExist: 'Weekly ID doesnot Exists',
    idRequired: 'Timesheet Hours ID is required',
    IdDoesnotExist: 'Timesheet Hours ID does not exists',
    InvalidApprovedStatus: 'Please Update the Status',
    totalHoursRequired: 'Total hours is required',
    totalHoursInvalid: 'Total hours format is invalid',
    totalOtHoursInvalid: 'Total Ot hours format is invalid',
    approvedHoursRequired: 'Approved hours is required',
    approvedHoursInvalid: 'Approved hours format is invalid',
    billableHoursRequired: 'Billable hours is required',
    billableHoursInvalid: 'Billable hours format is invalid',
    otHoursRequired: 'OT hours is required',
    otHoursInvalid: 'OT hours format is invalid',
    placementIdRequired: 'Placement Id Required',
    placementIdDoesNotExist: 'Placement Id does not exists',
    invalidPlacementID: 'Placement Id is Invalid',
    startDateRequired: 'Start Date Required',
    invalidStartDate: 'Start Date is Invalid',
    timsheetDateIsGreaterThanStartDate: 'Start Date is Not Fall Under Placement Duration',
    endDateRequired: 'End Date Required',
    invalidEndDate: 'End date is invalid',
    documentIdRequired: 'Document Id is Required',
    documentIdInvalid: 'Document Id is invalid',
    commentsInvalid: 'Invalid Comments',
    dateInvalid: 'date format is Invalid',
    invalidDate: 'Date should be in between Start Date and End Date',
    timesheetAlreadyExists: 'Timesheet already exists between the given dates',
    timesheetDatesRequired: 'Timesheet dates are missing',
    cycleInvalid: 'Timesheet is not Configurable',
    invalidTotalBillableHours: 'Invalis Total Billable Hours',
    userIsNotAuthorized: 'User is not an Approver',
    totalBillableHoursRequired: 'Total Billable Hours Required',
    totalBillableHoursInvalid: 'Total Billable hours Invalid',
    totalHoursRequired: 'Total Hours Required',
    totalHoursInvalid: 'Total hours Invalid',
    hoursInvalid: 'Hours Invalid',
    totalApprovedHoursRequired: 'Total Approved Hours Required',
    totalApprovedHoursInvalid: 'Total Approved hours Invalid',
    employeeIDInvalid: 'Employee ID Invalid',
    employeeIDNotExists: 'Employee ID does not exist',
    endClientIDInvalid: 'End Client ID Invalid',
    clientIDInvalid: 'Client ID Invalid',
    approvalLevelRequired: 'Approval Level Required',
    invalidApprovalLevel: 'Invalid Approval Level',
    tsMandatoryInvalid: 'Timesheet Mandatory Invalid',
    enableToConfigureTimesheet: 'enable to configure timesheet in placement',
    startDateAndEndDateRequired: 'Start date and End date Required',
    invalidToDate: 'To Date is Invalid',
    invalidTimesheetHourId: 'Invalid timesheet hour id',
    timesheetApproved: 'Timesheet Already Approved. Not allowed to delete',
    timesheetHourInvoices: 'Invoice Raised for the selected hours. Not allowed to delete',
    timesheetHourPayrolls: 'Payroll Generated for the selected hours. Not allowed to delete',
    inValidTimeSheetConfigId: 'Invalid Time sheet configurations id',
    timesheetHoursNotInRange: 'Timesheet Hours date are not in between StartDate and EndDate',
    timesheetHoursInvalid: 'Required more timesheet hours for above StartDate and EndDate',
    noTimeSheetConfiguration: 'Timesheet configuration is not set for the Placement',
    employeesMustBeInArray: 'Employees must be in array',
    fromToDateRequired: 'from date and to date are required',
    fromDateInvalid: 'from date is invalid',
    toDateInvalid: 'to date is invalid'
  },

  ledgers: {
    cannotPerformSameAction: 'Not Allowed to Perform Same Action',
    ledgerIdRequired: 'Ledger ID Required',
    actionNotAllowed: 'Not Allowed to Perform Actions',
    draftNotAllowedWhenPartiallyPaid: 'Draft Not allowed when payment is initiated',
    draftNotAllowed: 'Draft Not Allowed',
    draftNotAllowedWhenPaid: 'Draft Not allowed when payment is done',
    voidNotAllowedWhenPartiallyPaid: 'Void Not allowed when payment is initiated',
    voidNotAllowedWhenPaid: 'Void Not allowed when payment is done',
    writeOffNotAllowed: 'Not Allowed to write off when status is paid',
    invalidLedgerAmount: 'Invalid Ledger Amount',
    recurringCycleNumberInvalid: 'Recurring Cycle Number In valid',
    invalidApprover: 'Logged in user is not an Approver',
    approverRequired: 'Approver is required to update the status',
    rejectReasonRequired: 'Reject Reason is required',
    invalidWriteOffId: 'Invalid Write off id',
    invalidCompanyEntityType: 'Invalid Company Entity Type',
    statusUpdateKeyInvalid: 'Ledger invalid status update key',
    statusUpdateKeyRequired: 'ledger status update key is required',
    statusUpdateValueRequired: 'ledger status update value is required',
    tsAvailableRequired: 'timesheets_available required',
    invalidTsAvailable: 'timesheets_available must be boolean value',
    timesheetHourIdsUnique: 'Timesheet Hour ids should be unique',
    shippingAddressRequired: 'Shipping Address is required',
    billingAddressRequired: 'Billing Address is required',
    ledgerItemIdRequired: 'Ledger Item Id required',
    ledgerItemIdInvalid: 'invalid Ledger Item id',
    ledgerItemIdNotExists: 'Ledger item ID does not exists',
    docmentMustBeArray: 'Docuemnts must be array',
    ledgerItemsRequired: 'Ledger items Required',
    ledgerItemsMustBeArray: 'Ledger Items must be array',
    timeSheetHourIdsMustArray: 'Time sheet hour ids must be array',
    idRequired: 'Id is required',
    idInvalid: 'Ledger Id is Invalid',
    idNotExists: 'Ledger Id does not exists',
    slugNameRequired: 'Entity Type is Required',
    slugNameInvalid: 'Entity Type is Invalid',
    slugNameShouldbe: `Entity Type should be 'invoice' or 'bill'`,
    ledgerPaymentslugNameShouldbe: `Entity Type should be 'payment' or 'bill-payment'`,
    referenceIdRequired: 'Reference Id required',
    referenceIdExists: 'Reference Id already exists',
    companyIdRequired: 'Company ID Required',
    companyIdInvalid: 'Company ID Invalid',
    CompanyIdDoesNotExist: 'Company Id does not exists',
    invoiceNotConfig: 'Invoice is not configure for this client',
    dateRequired: 'Date is Required',
    dateInvalid: 'Date Invalid',
    dateFormetInvalid: 'Invalid date format',
    dueDateRequired: 'Due Date is Required',
    dueDateInvalid: 'Due Date is Invalid',
    dueDateEqualNetPayDay: 'Due Date should be equal to New Pay Days',
    dueDateFormetInvalid: 'Invalid date formet of Due Date',
    netPayTermsIdRequired: 'Net Pay Terms Required',
    invalidNetPayTermsId: 'Net Pay Terms id is invalid',
    netPayTermsIdNotExists: 'Net Pay Terms id does not exists',
    configurationTypeRequired: 'Configuration Type is Required',
    configurationTypeInvalid: 'Configuration Type is Invalid',
    invalidTimesheetHourID: 'Invalid Timesheet Hour Id (or) Timesheet Already submitted',
    startDateRequired: 'Start Date Required',
    startDateInvalid: 'Start Date Invalid',
    startDateFormetInvalid: 'Invalid date formet of Start Date',
    endDateRequired: 'End Date Required',
    endDateInvalid: 'End Date Invalid',
    endDateFormetInvalid: 'Invalid date formet of End Date',
    orderNumberRequired: 'Order Number is Required',
    orderNumberInvalid: 'Order Number Invalid',
    orderNumberExists: 'Order Number Already Exists',
    serviceNameRequired: 'Service Name Required',
    serviceNameInvalid: 'Service Name Invalid',
    hoursRequired: 'Hours is required',
    hoursInvalid: 'Hours must be Float',
    rateRequired: 'Rate is required',
    rateInvalid: 'Rate must be Float',
    amountRequired: 'Billing Amount is required',
    amountInvalid: 'Billing Amount must be Float',
    timesheetAvailableRequired: 'Timesheet Available Required',
    timesheetAvailableInvalid: 'Timesheet Available Invalid',
    discountTypeRequired: 'Discount Type is Required',
    discountTypeInvalid: 'Discount Type is Invalid',
    discountTypeShouldBe: 'Discount Type Should be 1 or 2',
    discountAmountRequired: 'Discount Amount is Required',
    discountValueRequired: 'Discount Value is Required',
    discountValueInvalid: 'Discount Value should be Float',
    discountAmountInvalid: 'Discount Amount id Invalid',
    documentIdRequired: 'Document Id is Required',
    documentIdInvalid: 'Document Id is invalid',
    documentIdNotExists: 'Document Id is does not exists',
    totalAmountRequired: 'Total Amount is required',
    totalAmountInvalid: 'Total Amount is Invalid',
    totalAmountNotMatched: 'Total Amount not matched with sub_total_amount',
    totalAmountNotMatchedDiscount: 'Total Amount not matched with discount_amount',
    subTotalAmountRequired: 'Sub Total Amount is required',
    subTotalAmountInvalid: 'Sub total amount value is Invalid',
    adjustmentAmountInvalid: 'Adjustment amount should be Float',
    taxAmountRequired: 'Tax Amount is required',
    taxAmountInvalid: 'Tax Amount is Invalid',
    termsAndConditionsRequired: 'Terms and Conditions Required',
    invalidInvoiceBillngID: 'Invalid Billing ID',
    recurring: {
      recurringCycleNumberRequired: 'Recurring Cycle Number Required',
      recurringCycleTypeRequired: 'Recurring Cycle Type Required',
      invalidRecurringCycleType: 'Invalid Recurring Cycle Type',
      invalidRecurringCycleNumber: 'Invalid Recurring Cycle Number',
      recurringPaymentRequired: 'Recurring Payment Required',
      recurringStartDateRequired: 'Recurring Start Date Required',
      recurringStartDateInvalid: 'Invalid Recurring Start Date',
      recurringEndDateRequired: 'Recurring End Date Required',
      recurringEndDateInvalid: 'Invalid Recurring End Date',
      recurringNotAllowed: 'Recurring is Not Allowed For Timesheet Mapped Invoice or Bill',
      recurringNeverExpiresRequired: 'Recurring Never Expires Required',
      recurringNeverExpiresInvalid: 'Invalid Recurring Never Expires',
      ledgerRecurringIdRequired: 'Invoice or Bill Recurring Id Required',
      ledgerRecurringIdInvalid: 'Invalid Invoice or Bill Recurring Id',
      ledgerRecurringIdNotExists: 'For Invoice or Bill Recurring Id Does Not Exists',
      ledgerRecurringExists: 'Recurring Already Exists For The Invoice or Bill',
      ledgerRecurringNotExists: 'Recurring Does Not Exists For The Invoice or Bill',
    }
  },
  invoice: {
    InvoiceIdRequired: 'Invoice Id is Required',
    InvoiceIdInvalid: 'Invoice Id is Invalid',
    InvoiceIdDoesNotExist: 'Invoice Id does not Exist',
    invoiceDoesnotExists: 'Invalid Invoice',
    invoiceNumberRequired: 'Invoice Number is required',
    invoiceNumberAlreadyExists: 'Invoice Number Already Exists',
    orderNumberRequired: 'Order Number is Required',
    invoiceDateRequired: 'Invoice Date is Required',
    invalidInvoiceDate: 'Invoice Date Invalid',
    invoiceDueDateRequired: 'Invoice Due Date is Required',
    invalidInvoiceDueDate: 'Invoice Due Date Invalid',
    discountTypeRequired: 'DisCount Type is Requried',
    discountTypeInvalid: 'Discount Type is Invalid',
    discountTypeShouldBe: 'Discount Type Should be 1 or 2',
    discountAmountRequired: 'Discount Amount is Required',
    discountValueRequired: 'Discount Value is Required',
    discountValueInvalid: 'Discount Value is Invalid',
    discountAmountInvalid: 'Discount Amount id Invalid',
    netPayTermsIdRequired: 'Net Pay Terms Required',
    invalidNetPayTermsId: 'Net Pay Terms id is invalid',
    approvedStatusRequired: 'Approved Status is Required',
    approvedStatusInvalid: 'Approved Status is Invalid',
    totalAmountRequired: 'Total Amount is required',
    totalAmountInvalid: 'Total Amount is Invalid',
    subTotalAmountRequired: 'Sub Total Amount is required',
    subTotalAmountInvalid: 'Sub Total Amount is Invalid',
    taxAmountRequired: 'Tax Amount is required',
    taxAmountInvalid: 'Tax Amount is Invalid',
    termsAndConditionsRequired: 'Terms and Conditions Required',
    consultantNameRequired: 'Consultant Name Required',
    consultantNameInvalid: 'Consultant Name Invalid',
    hoursRequired: 'Hours is required',
    hoursInvalid: 'Hours format Invalid',
    rateRequired: 'Rate is required',
    rateInvalid: 'Rate is invalid',
    InvalidApprovedStatus: 'Please Update the Status',
    amountRequired: 'Billing Amount is required',
    amountInvalid: 'Billing Amount format is invalid',
    clientIdRequired: 'Client Id Required',
    clientIdDoesNotExist: 'Client Id does not exists',
    placementIdRequired: 'Placement Id Required',
    placementIdDoesNotExist: 'Placement Id does not exists',
    invalidPlacementID: 'Placement Id is Invalid',
    invalidClientID: 'Client Id is Invalid',
    startDateRequired: 'Start Date Required',
    invalidStartDate: 'Start Date is Invalid',
    endDateRequired: 'End Date Required',
    invalidEndDate: 'End date is invalid',
    documentIdRequired: 'Document Id is Required',
    documentIdInvalid: 'Document Id is invalid',
    commentsInvalid: 'Invalid Comments',
    dateInvalid: 'date format is Invalid',
    invalidDate: 'Date should be in between Start Date and End Date',
    invoiceAlreadyExists: 'Invoice already exists between the given dates',
    invoiceDatesRequired: 'Invoice dates are missing',
    cycleInvalid: 'Invoice is not Configurable',
    invalidTotalBillableHours: 'Invalid Total Billable Hours',
    userIsNotAuthorized: 'User is not an Approver',
    totalBillableHoursRequired: 'Total Billable Hours Required',
    totalBillableHoursInvalid: 'Total Billable hours Invalid',
    totalHoursRequired: 'Total Hours Required',
    totalHoursInvalid: 'Total hours Invalid',
    totalApprovedHoursRequired: 'Total Approved Hours Required',
    totalApprovedHoursInvalid: 'Total Approved hours Invalid',
    invalidTimesheetStartDate: 'Invalid Timesheet Start Date',
    startDateRequired: 'Timesheet start date is required',
    endDateRequired: 'Timesheet end date is required',
    employeeIDInvalid: 'Employee ID Invalid',
    endClientIDInvalid: 'End Client ID Invalid',
    clientIDInvalid: 'Client ID Invalid',
    timesheetAvailableRequired: 'Timesheet Available Required',
    timesheetAvailableInvalid: 'Timesheet Available Invalid Format',
    typeRequired: 'type required',
    typeInvalid: 'type Invalid',
    expectedPaymentDateRequired: 'expected payment date required',
    expectedPaymentDateInvalid: 'expected payment date invalid',
    approvalIdRequired: 'invoice approval id required',
    invoiceRecurringIdRequired: 'invoice recurring id required',
    invoiceRecurringTypeRequired: 'Invoice recurring type required',
    invoiceRecurringTypeInvalid: 'Invoice recurring type should be 1 or 2.',
    invoiceRecurringStartDateInvalid: 'Invoice recurring start date invalid',
    invoiceRecurringStartDateRequired: 'Invoice recurring start date required',
    invoiceRecurringCycleInvalid: 'Invoice recurring Cycle invalid',
    invoiceRecurringCycleRequired: 'Invoice recurring Cycle required',
    invoiceRecurringNotEnable: 'Invoice recurring not enabled',
    invoiceRecurringCycleTypeRequired: 'Invoice recurring cycle type required',
    invoiceRecurringCycleTypeInvalid: 'Invoice recurring cycle type should be 1 or 2.',
    recurringNeverExpiresRequired: 'Recurring never expires Required',
    recurringNeverExpiresInvalid: 'Recurring never expires Invalid',
    recurringNumberRequired: 'Recurring Number Required',
    recurringNumberInvalid: 'Recurring Number Invalid',
    invoiceRecurringEndDateInvalid: 'Invoice recurring end date invalid',
    invoiceRecurringEndDateRequired: 'Invoice recurring end date required',
    enableRemianderRequired: 'Enable reminder Required',
    enableRemianderInvalid: 'Enable reminder Invalid',
    isVoidRequired: 'is void Required',
    isVoidInvalid: 'is void Invalid',
    amountComaparisionInvalid: 'Invoice Total Amount Not Tally with Invoice Amount',
    invalidTimesheetHourID: 'Invalid Timesheet Hour Id is Invalid (or) Timesheet Already submitted',
    timesheetHourIDRequired: 'Invalid Timesheet Hour Id is Invalid',
    invalidInvoiceBillngID: 'Invalid Billing ID',
    employeeIdRequired: 'Employee Id Required',
    employeeIdDoesNotExist: 'Employee Id Does Not Exists',
    invalidServiceDate: 'Invalid Service Date',
    serviceDateRequired: 'Service Date Required',
    invalidServiceName: 'Invalid Service Name',
    serviceNameRequired: 'Service Name Required',
    InvoiceNotApproved: 'Invoice is not yet approved, please approve to send an email',
    OrderNumberInvalid: 'Order Number Invalid',
    NetPayTermsInvalid: 'Net Pay Terms Days are Invalid',
    NetPayTermsNotExists: 'Net Pay Terms Days Does Not Exists',
    itemIdRequired: 'item Id is Required',
    itemIdInvalid: 'item Id is Invalid',
    billIdDoesNotExist: 'bill Id does not Exist',
    recurringIdInvalid: 'Invalid recurring id',
    recurringIdNotExists: 'recurring id does not exists for the slug',
    enableRecurringRequired: 'Enable recurring Required',
    enableRecurringInvalid: 'Enable recurring Invalid',
  },

  ledgerPayments: {
    ledgerIsNotApproved: 'Ledger is not Approved',
    ledgerPaymentIdRequired: 'Ledger Payment Id is required',
    ledgerPaymentIdInvalid: 'Ledger Payment Id is invalid',
    ledgerPaymentIdNotExist: 'Ledger Payment Id does not exist',
    ledgerPaymentSectionIdRequired: 'Ledger Payment Section id is required',
    ledgerPaymentSectionIdInvalid: 'Ledger Payment Section id is in valid',
    updateIdInvalid: 'Update Id is Invalid',
    updateIdRequired: 'Update Id is Required',
    invalidLedgerAmount: 'Invalid Ledger Amount',
    invalidLedgersFormat: 'Invalid Ledgers Format',
    invalidLedgerTotalAmount: 'Invalid Ledgers Payment Total Amount',
    invalidLedgerTotalReceivedAmount: 'Invalid Ledger Total Received Amount',
    ledgersRequired: 'Ledgers Required',
    LedgerIdRequired: 'Ledger Id is Required',
    LedgerIdInvalid: 'Ledger Id is Invalid',
    LedgerIdDoesNotExist: 'Ledger Id does not exist',
    ledgerAmountRequired: 'Ledger Amount is Required',
    ledgerAmountInvalid: 'Ledger Amount is Invalid',
    ledgerReceivedAmountRequired: 'Received Amount is required',
    ledgerReceivedAmountInvalid: 'Received Amount is Greater Then Invoice Amount',
    ledgerBalanceAmountRequired: 'Ledger Balance Amount is required',
    ledgerBalanceAmountInvalid: 'Ledger Balance Amount is Invalid',
    totalLedgerAmountRequired: 'Total Ledger Amount is Required',
    totalLedgerAmountInvalid: 'Total Ledger Amount is Invalid',
    totalReceivedAmountRequired: 'Total Received Amount is required',
    totalReceivedAmountInvalid: 'Total Received Amount is Greater Then Invoice Amount',
    totalBalanceAmountRequired: 'Total Balance Amount is required',
    totalBalanceAmountInvalid: 'Total Balance Amount is Invalid',
    excessAmountInvalid: 'Excess Amount is Invalid',
    receivedDateRequired: 'Received Date required',
    receivedDateInvalid: 'Received Date format invalid',
    paymentReferenceIdRequired: 'Payment Reference Id Required',
    paymentReferenceIdInvalid: 'Payment Reference Id Invalid',
    receivedAmountRequired: 'Received Amount is required',
    receivedAmountInvalid: 'Received Amount is Greater Then Invoice Amount',
    paymentModeRequired: 'Payment Mode Required',
    paymentModeInvalid: 'Payment Mode Invalid',
    paymentReferenceIdExists: 'Payment Reference Id Already Exists',
    debitClientCreditsRequired: 'Debit Client Credits Required',
    debitClientCreditsInvalid: 'Invalid Debit Client Credits',
    invalidCompanyId: 'Invalid Company Id'
  },

  payments: {
    InvoiceIdRequired: 'Invoice Id is Required',
    InvoiceIdInvalid: 'Invoice Id is Invalid',
    InvoiceIdDoesNotExist: 'Invoice Id does not Exist',
    invoiceDoesnotExists: 'Invalid Invoice',
    invoiceNumberRequired: 'Invoice Number is required',
    orderNumberRequired: 'Order Number is Required',
    invoiceDateRequired: 'Invoice Date is Required',
    invalidInvoiceDate: 'Invalid Date Invalid',
    invoiceNotApproved: 'Please Approve Invoice To Make A Payment',
    totalAmountRequired: 'Total Amount is required',
    totalAmountInvalid: 'Total Amount is Invalid',
    subTotalAmountRequired: 'Sub Total Amount is required',
    subTotalAmountInvalid: 'Sub Total Amount is Invalid',
    taxAmountRequired: 'Tax Amount is required',
    taxAmountInvalid: 'Tax Amount is Invalid',
    amountRequired: 'Billing Amount is required',
    amountInvalid: 'Billing Amount format is invalid',
    clientIdRequired: 'Client Id Required',
    invalidClientID: 'Client Id is Invalid',
    clientIdDoesNotExist: 'Client Id does not exists',
    documentIdRequired: 'Document Id is Required',
    documentIdInvalid: 'Document Id is invalid',
    dateInvalid: 'date format is Invalid',
    invalidDate: 'Date should be in between Start Date and End Date',
    clientIDInvalid: 'Client ID Invalid',
    invoiceAmountRequired: 'Invoice Amount is required',
    invoiceAmountInvalid: 'Invoice Amount is Invalid',
    receivedAmountRequired: 'Received Amount is required',
    receivedAmountInvalid: 'Received Amount is Greater Then Invoice Amount',
    balanceAmountRequired: 'Balance Amount is required',
    balanceAmountInvalid: 'Balance Amount is Invalid',
    excessAmountRequired: 'Excess Amount is required',
    excessAmountInvalid: 'Excess Amount is Invalid',
    refundAmountInvalid: 'Refund Amount is Invalid',
    paymentAmountRequired: 'Payment Amount is required',
    paymentAmountInvalid: 'Payment Amount is Invalid',
    dateRequired: 'Received Date required',
    dateInvalid: 'Received Date format invalid',
    paymentReferenceIdExists: 'Payment Reference Id Already Exists',
    referenceIdRequired: 'Reference Id Required',
    referenceIdInvalid: 'Reference Id Invalid',
    paymentModeRequired: 'Payment Mode Required',
    paymentReferenceIdRequired: 'Payment Reference Id Required',
    paymentReferenceIdInvalid: 'Payment Reference Id Invalid',
    paymentModeInvalid: 'Payment Mode Invalid',
    paymentAlreadyReceived: 'Payment Already Received',
    amountReceivedTillNow: 'Amount Received Till Now Required',
    paymentIdRequired: 'Payment Id Required',
    paymentIdInvalid: 'Payment Id Invalid',
    paymentIdDoesNotExist: 'Payment Id Does Not Exists',
    debitClientCreditsRequired: 'Debit Client Credits Required',
    debitClientCreditsInvalid: 'Invalid Debit Client Credits',
    paymentReferenceIdExists: 'Payment Reference ID Already Exists'
  },

  billPayments: {
    BillIdRequired: 'Bill Id is Required',
    BillIdInvalid: 'Bill Id is Invalid',
    BillIdDoesNotExist: 'Bill Id does not Exist',
    billDoesnotExists: 'Invalid Bill',
    billNumberRequired: 'Bill Number is required',
    orderNumberRequired: 'Order Number is Required',
    billDateRequired: 'Bill Date is Required',
    invalidBillDate: 'Invalid Date Invalid',
    billNotApproved: 'Please Approve Bill To Make A Payment',
    totalAmountRequired: 'Total Amount is required',
    totalAmountInvalid: 'Total Amount is Invalid',
    subTotalAmountRequired: 'Sub Total Amount is required',
    subTotalAmountInvalid: 'Sub Total Amount is Invalid',
    taxAmountRequired: 'Tax Amount is required',
    taxAmountInvalid: 'Tax Amount is Invalid',
    amountRequired: 'Billing Amount is required',
    amountInvalid: 'Billing Amount format is invalid',
    vendorIdRequired: 'Vendor Id Required',
    invalidVendorID: 'Vendor Id is Invalid',
    vendorIdDoesNotExist: 'Vendor Id does not exists',
    documentIdRequired: 'Document Id is Required',
    documentIdInvalid: 'Document Id is invalid',
    invalidDate: 'Date should be in between Start Date and End Date',
    vendorIDInvalid: 'Vendor ID Invalid',
    billAmountRequired: 'Bill Amount is required',
    billAmountInvalid: 'Bill Amount is Invalid',
    receivedAmountRequired: 'Received Amount is required',
    receivedAmountInvalid: 'Received Amount is Greater Then Bill Amount',
    balanceAmountRequired: 'Balance Amount is required',
    balanceAmountInvalid: 'Balance Amount is Invalid',
    excessAmountRequired: 'Excess Amount is required',
    excessAmountInvalid: 'Excess Amount is Invalid',
    refundAmountInvalid: 'Refund Amount is Invalid',
    paymentAmountRequired: 'Payment Amount is required',
    paymentAmountInvalid: 'Payment Amount is Invalid',
    dateRequired: 'Received Date required',
    dateInvalid: 'Received Date format invalid',
    referenceIdRequired: 'Reference Id Required',
    referenceIdInvalid: 'Reference Id Invalid',
    paymentModeRequired: 'Payment Mode Required',
    paymentReferenceIdRequired: 'Payment Reference Id Required',
    paymentReferenceIdInvalid: 'Payment Reference Id Invalid',
    paymentModeInvalid: 'Payment Mode Invalid',
    paymentAlreadyReceived: 'Payment Already Received',
    amountReceivedTillNow: 'Amount Received Till Now Required',
    paymentIdRequired: 'Payment Id Required',
    paymentIdInvalid: 'Payment Id Invalid',
    paymentIdDoesNotExist: 'Payment Id Does Not Exists',
    debitVendorCreditsRequired: 'Debit Vendor Credits Required',
    debitVendorCreditsInvalid: 'Invalid Debit Vendor Credits',
    BillSectionPaymentIdDoesNotExist: 'Bill Payment Section Id does not Exist',
  },

  role: {
    invalidId: 'Invalid Role Id',
    invalidName: 'Invalid Role name',
    invalidRoleId: 'Invalid Role id',
    roleIdRequired: 'Role id required',
    roleNameExists: 'This role has been already created',
    rolesLimitExceeded: 'Only 5 roles can be created apart from default roles',
    roleDescriptionRequired: 'description Required',
    roleDescriptionInvalid: 'Please ensure the description does not exceed 100 characters',
    roleNameRequired: 'Role name required',
    IdNotExists: 'Id not exists',
    editNotAllowed: 'Default Role cannot be edited',
    IdInvalid: 'Id Invalid',
    statusRequired: 'status required',
    statusInvalid: 'status Invalid',
    IdBeingUsedForEmployee: 'Role Id Being Used For Employee',

  },

  employeeSelfService: {
    selfServiceId: 'self service Id required',
    IdInvalid: 'Id Invalid',
    IdNotExists: 'Id Not Exists',
    subjectRequired: 'subject is required',
    descriptionRequired: 'description is required',
    employeeSelfServiceIdRequired: 'employee Self Service Id Required',
    employeeSelfServiceIdNotExists: 'employee Self Service Id Does not Exists',
    selfServiceTypesIdRequired: 'self Service Types Id Required',
    selfServiceTypesIdInvalid: 'Invalid self Service Types Id',
    selfServiceTypesIdNotExists: 'self Service Types Id does not Exists',
    status: 'status required',
    statusInvalid: 'status Invalid',
    employeeIdRequired: 'employee Id required',
    employeeIdInvalid: 'employee Id Invalid',
    employeeSelfServiceIdInvalid: 'employee Self Service Id Invalid',
    receivedInvalid: 'received Invalid',
    raisedRequired: 'raised Required',
    raisedInvalid: 'raised Invalid',
    employeeRequired: 'employee Required',
    employeeInvalid: 'employee Invalid',
    receivedRequired: 'received Required',
    selfServiceArray: 'self service is not an array',
    statusArray: 'status is not an array'
  },
  expensesManagement: {
    invalidTransactionType: 'invalid Transaction Type',
    invalidTransactionValue: 'invalid Transaction Value,value must be in 1 or 2',
    expenseTypeNotArray: 'expense type must be array format',
    expenseTypeInvalidType: 'expanse type must be integer',
    statusNotArray: 'status must be in array formate',
    statusInvalidValue: 'status must be in 0, 1 2',
    statusInvalidType: 'invalid status, status must be integer in 0,1,2',
    invalidName: 'invalid name',
    nameExists: 'name already exists',
    nameRequired: 'name required',
    templateRequired: 'Template is required',
    IdRequired: 'expense management id is required',
    IdInvalid: 'expense management id is Invalid',
    IdNotExists: 'expense management Id doesnot exists',
    expenseIdRequired: 'expense type id is required',
    expenseIdInvalid: 'expense type id is Invalid',
    expenseIdNotExists: 'expense type Id doesnot exists',
    descriptionRequired: 'description is required',
    statusRequired: 'status required',
    statusInvalid: 'status invalid',
    employeeIdIsInvalid: 'employee Id is Invalid',
    employeeIdNotExists: 'employee Id Not Exists',
    employeeIdRequired: 'Employee Id Required',
    amountRequired: 'amount is required',
    amountInvalid: 'Invalid amount',
    subjectRequired: 'subject is required',
    subjectInvalid: 'Invalid subject',
    raisedDateRequired: 'raised date is required',
    raisedDateInvalid: 'Invalid raised date',
    approvedDateRequired: 'approved date is required',
    approvedDateInvalid: 'Invalid approved date',
    descriptionInvalid: 'description is invalid',
    referenceIdRequired: 'reference Id required',
    referenceIdExists: 'reference Id exists',
    referenceIdinvalid: 'reference Id invalid',
    otpRequired: 'Otp is required',
    otpInvalid: 'Otp is invalid',
    wrongOTP: 'Wrong OTP Entered',
    OTPverified: 'OTP verified Successfully',
    OTPsent: 'OTP sent Successfully',
    otpAlreadyVerified: 'OTP verification Completed',
    expenseByRequired: 'expense done by is required',
    expenseByInvalid: 'expense done by is invalid',
    effectedOnRequired: 'effected on is required',
    effectedOnInvalid: 'effected on is invalid',
    enableApprovalRequired: 'enable approval is required',
    enableApprovalInvalid: 'enable approval is invalid',
    notAllowedToDelete: "Amount Already deducted",
    paidAmountInvalid: "Expense Paid is greater than due amount",
    dueAmountIsInvalid: "Due Amount does not match",
    debitAmountInvalid: "Debit amount cannot be move than available debit",
    creditAmountInvalid: "Credit amount cannot be move than available credit",
    totalDebitAmountInvalid: "total debit expense does not match with sum of debit expenses",
    totalCreditAmountInvalid: "total credit expense does not match with sum of credit expenses",
    paidAmountInvalid: "Payroll Amount cannot be negative or zero",
    amountPaidInvalid: "Amount paid is invalid",
    hasGoalAmountRequired: "has goal amount flag is required",
    hasGoalAmountInvalid: "has goal amount flag is invalid",
    goalAmountRequired: "Gaol amount is required",
    goalAmountInvalid: "Please ensure that the entered goal amount is greater than the corresponding expense amount.",
    recurringRequired: "Recurring flag is required",
    recurringInvalid: "Recurring flag is invalid",
    recurringCountRequired: "Recurring Count is required",
    recurringCountInvalid: "Recurring Count is invalid",
    expenseTransactionTypeRequired: ' Expense Transaction Type is required',
    expenseTransactionTypeInvalid: ' Expense Transaction Type is invalid',
    documentIdInvalid: 'document id is invalid',
    documentDoesNotExists: 'document id does not exists'
  },
  bills: {
    billIdRequired: 'id is required',
    billIdInvalid: 'id is Invalid',
    billDoesNotExist: 'id does not exists',
    clientNameRequired: 'Client name Required',
    clientIdDoesNotExist: 'Client Id does not exists',
    taxAmountInvalid: 'tax amount should be numeric',
    totalAmountRequired: 'Total Amount is required',
    totalAmountInvalid: 'Total Amount is Invalid',
    subTotalAmountRequired: 'Sub Total Amount is required',
    subTotalAmountInvalid: 'Sub Total Amount is Invalid',
    termsAndConditionsRequired: 'Terms and Conditions Required',
    consultantNameRequired: 'Consultant Name Required',
    consultantNameInvalid: 'Consultant Name Invalid',
    hoursRequired: 'Hours is required',
    hoursInvalid: 'Hours format Invalid',
    rateRequired: 'Rate is required',
    rateInvalid: 'Rate is invalid',
    invalidPlacementID: 'Placement Id is Invalid',
    invalidClientID: 'Client Id is Invalid',
    billNumberRequired: 'bill number is required',
    billNumberInvalid: 'bill number is Invalid',
    orderNumberRequired: 'order number is required',
    billDateInvalid: 'Bill date is Invalid',
    billDateRequired: 'Bill date is Required',
    billDueDateInvalid: 'Bill due date is Invalid',
    billDueDateRequired: 'Bill due date is Required',
    netPayTermsRequired: 'Net pay terms id is required',
    netPayTermsInvalid: 'Net pay terms id is invalid',
    netPayTermsDoesNotExist: 'Net pay terms id does not exist',
    termsAndConditionsRequired: 'Terms and Conditions Required',
    amountInvalid: 'amount is invalid',
    documentIdInvalid: 'document id is invalid',
    documentDoesNotExists: 'document id does not exists',
    approvedStatusRequired: 'Approved Status is Required',
    approvedStatusInvalid: 'Approved Status is Invalid',
    billPaidDateRequired: 'Bill paid date required',
    billPaidDateInvalid: 'Bill paid date invalid',
    billPaymentReferenceRequired: 'Bill payment reference required',
    billPaymentReferenceInvalid: 'Bill payment reference invalid',
    amountComaparisionInvalid: 'Bills Total Amount Not Tally with bill Amount',
    billRefernceIdRequired: 'Bill Refernce Id Required',
    billRefernceIdExists: 'Bill Refernce Id Already Exists',
  },
  payroll: {
    requiredEmployeeId: 'Employee id is required',
    invalidEmployeeId: 'employee Id not exists',
    employeeIdInvalid: 'Employee id is invalid',
    paidAmountRequired: 'paid amount required',
    paidAmountInvalid: 'paid amount Invalid',
    payrollConfigIdRequired: 'Payroll Configuration Id Required',
    payrollConfigIdInvalid: 'Payroll Configuration Id Invalid',
    payrollConfigIdDoesNotExist: 'Payroll Configuration Id does not exists',
    payrollRaisedAlready: 'Payroll Already Generated Successfully',
    payrollalreadyRun: 'Payroll Already Generated',
    payrollAlreadySubmitted: 'Payroll has already been submitted.',
    payrollAlreadykipped: 'Payroll has already been Skipped.',
    submitPreviousPayroll: 'Kindly submit the payroll for the previous period.',
    amountPaidInvalid: 'amount paid cannot be zero or less than zero',
    payrollCommets: 'Comment field should contain at more than 100 character',
    draftRequited: 'Payroll is drafted and submitted required',
    draftInvalid: 'Payroll drafted is invalid',
    isFinilizeRequired: 'Payroll is Finilized or not required',
    isFinilizeInvalid: 'Payroll Finilized Value Invalid',
    isMiscelleniousRequired: 'Payroll is miscellaneous or not required',
    isMiscelleniousInvalid: 'Payroll miscellaneous Value Invalid',
    payrollEmployeeFinalizeIsPending: 'Payroll processing is not permitted until the entered amounts are finalized for all employees. Kindly review and confirm the accuracy of the entered amounts for each employee before proceeding with payroll execution',
    payrollEmployeeFinalizeIsNotAllowed: 'Finalization of employees is restricted due to pending timesheet approvals. Please ensure all timesheets are approved before attempting employee finalization',
    payrollSalAmtNonFinalizeShouldBeZero: 'Salary amounts for non-finalized employees will be set to 0 during payroll calculation. Payroll processing is restricted for employees with pending timesheet approvals',
    payrollSalAmtNonFinalizeShouldBeZeroNoTimesheet: 'Salary amounts for non-finalized employees will be set to 0 during payroll run',
    isMiscellaneousRequired: 'Payroll is Miscellaneous or not required',
    isMiscellaneousInvalid: 'Payroll Miscellaneous Value Invalid',
    debitEmployeeIdRequired: 'If Payroll is Miscellaneous, Debit employee is required',
    debitEmployeeIdInvalid: 'Debit employee id is invalid',
    transactionFailed: 'Payroll generation failed',
    requiredExpenseType: 'Expense Type is required.',
    invalidExpenseType: 'Expense Type must be 1 or 2.',
    summaryTypeRequired: 'Summary type required.',
    invalidSummaryType: 'Invalid Summary Type.',
    maxLength: 'Comments max length is allowed only 100 characters.'
  },
  template: {
    requiredSlug: 'Module slug is required',
    invalidSlug: 'Module slug is invalid',
  },
  ocr: {
    documentIdRequired: 'Document id is required',
    documentIdInvalid: 'Document id is Invalid',
    areaPointsRequired: 'Area points are required',
    areaPointNotEnough: 'Area points need to be Four',
  },
  immigrationCaseTypes: {
    idRequired: 'Id is required',
    idDoesNotExist: 'Id Doest Not Exist',
    nameIsRequired: 'Name is Required',
    invalidName: 'Invalid Name',
    statusIsRequired: 'Status Is Required',
    invalidBoolean: 'Invalid Input, Boolean Type Is Required',
    discriptionRequired: 'description Is Required',
    nameAlreadyExist: 'Name Already Exists',
  },
  immigrationDocTypes: {
    nameAlreadyExist: 'Name Already Exists',
    typeIsRequired: 'Document Type is Required',
    invalidType: 'Invalid Document Type',
    idRequired: 'Id is required',
    idDoesNotExist: 'Id Doest Not Exixt',
    nameIsRequired: 'Name is Required',
    invalidName: 'Invalid Name',
    statusIsRequired: 'Status Is Required',
    invalidBoolean: 'Invalid Input, Boolean Type Is Required',
    discriptionRequired: 'description Is Required',
    notAllowToModify: 'Not Allowed To Modify The System Created Items',
  },
  immigration: {
    dashboard: {
      InvalidStartDate: 'Invalid Start Date.',
      InvalidEndDate: 'Invalid End Date.'
    },
    questionnaire: {
      isApprovedRequired: "Is Approved Required",
      isApprovedInvalid: "Is Approved Invalid",
      requiredEmployeeId: 'Employee id is required',
      employeeIdNotExists: 'Employee id does not exists',
      employeeIdExistsSsn: 'Employee id already exists with SSN',
      employeeIdInvalid: 'Employee id is invalid',
      firstNameRequired: 'First Name Required',
      firstNameInvalid: 'First Name Only Characters with white space are allowed',
      middleNameRequired: 'Middle Name Required',
      middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
      lastNameRequired: 'Last Name Required',
      lastNameInvalid: 'Last Name Only Characters with white space are allowed',
      invalidDob: 'Invalid DOB',
      requiredDob: 'DOB Required',
      dateOfJoiningRequired: 'Data of joining required',
      dateOfJoiningInvalid: 'Invalid Date Of joining',
      ssnRequired: 'SSN Required',
      ssnInvalid: 'SSN format Invalid',
      ssnAlreadyExists: 'SSN already exists',
      alienRegistrationRequired: 'Alien Registration NUmber Required',
      alienRegistrationInvalid: 'Alien Registration NUmber Invalid',
      countryIdRequired: 'Country Id Required',
      countryIdInvalid: 'Invalid Country Id',
      countryIdNotExists: 'Country Id does not Exists',
      provinceRequired: 'province Required',
      provinceInvalid: 'Invalid province',
      citizenshipCountryRequired: 'citizenship country Required',
      citizenshipCountryInvalid: 'Invalid citizenship country',
      citizenshipCountryNotExists: 'citizenship country Not Exists',
      isUsResidentRequired: 'is us Resident Required',
      isUsResidentInvalid: 'Invalid is us Resident',
      lastArrivalDateRequired: 'last arrival date is required',
      invalidlastArrivalformat: 'last arrival date format should be YYYY-MM-DD',
      invalidlastArrival: 'last arrival date should be before today',
      i94Number: 'i94 Number Required',
      i94NumberInvalid: 'Invalid i94 Number',
      i94NumberAlreadyExists: 'i94 Number already exists',
      passportNumber: 'passport Number Required',
      passportNumberInvalid: 'Invalid passport Number',
      passportNumberAlreadyExists: 'passport Number already exists',
      passportIssueDateInvalid: 'Invalid passport issue date',
      passportIssueDateRequired: 'passport issue date required',
      passportExpiryDateInvalid: 'Invalid passport expiry date',
      passportExpiryDateRequired: 'passport expiry date required',
      nonImmigrantStatusRequired: 'non immigrant status Required',
      nonImmigrantStatusInvalid: 'Invalid non immigrant status',
      nonImmigrantStatusExpiryRequired: 'non immigrant status Expiry date Required',
      nonImmigrantStatusExpiryInvalid: 'Invalid non immigrant status Expiry date',
      sevisNumber: 'sevis Number Required',
      sevisNumberInvalid: 'Invalid sevis Number',
      employmentAuthorizationNumber: 'employment Authorization Number Required',
      employmentAuthorizationNumberNumberInvalid: 'Invalid employment Authorization Number',
      clientNameRequired: 'client name Required',
      clientNameInvalid: 'Invalid client name',
      clientNameNotExists: 'client name does not exists',
      jobTitleRequired: 'job title Required',
      jobTitleInvalid: 'Invalid job title',
      daytimePhoneNumberRequired: 'Day time phone number Required',
      daytimePhoneNumberInvalid: 'Invalid Day time phone number ',
      mobileNumberRequired: 'mobile number Required',
      mobileNumberInvalid: 'Invalid mobile number',
      emailIdRequired: 'email Id Required',
      emailIdInvalid: 'Invalid email Id',
      institutionNameRequired: 'institution name Required',
      institutionNameInvalid: 'Invalid institution name',
      degreeNameRequired: 'degree name Required',
      degreeNameInvalid: 'Invalid degree name',
      dateOfDegreeAwardedRequired: 'date of degree awarded Required',
      dateOfDegreeAwardedInvalid: 'Invalid date of degree awarded',
      addressOfInstitutionRequired: 'address of institution Required',
      addressOfInstitutionInvalid: 'Invalid address of institution',
      jobDutiesRequired: 'job duties Required',
      jobDutiesInvalid: 'Invalid job duties',
      reRequestReasonRequired: 're request reason Required',
      reRequestReasonInvalid: 'Invalid re request reason',
      isreRequestRequired: 'is re request reason Required',
      isreRequestInvalid: 'Invalid is re request reason',
      foreignStreetAddressInvalid: 'Invalid foreign street address',
      foreignApartmentAddressInvalid: 'Invalid foreign apartment address',
      foreigncityInvalid: 'Invalid foreign address city',
      foreignCountryInvalid: 'Invalid foreign address country',
      foreignStateInvalid: 'Invalid foreign address State',
      foreignProvinceInvalid: 'Invalid foreign address province',
      foreignZipcodeInvalid: 'Invalid foreign address zipcode',
      employmentStreetAddressInvalid: 'Invalid employment street address',
      employmentApartmentAddressInvalid: 'Invalid employment apartment address',
      employmentcityInvalid: 'Invalid employment address city',
      employmentCountryInvalid: 'Invalid employment address country',
      employmentStateInvalid: 'Invalid employment address State',
      employmentProvinceInvalid: 'Invalid employment address province',
      employmentZipcodeInvalid: 'Invalid employment address zipcode',
      residentialStreetAddressInvalid: 'Invalid residential street address',
      residentialApartmentAddressInvalid: 'Invalid residential apartment address',
      residentialcityInvalid: 'Invalid residential address city',
      residentialCountryInvalid: 'Invalid residential address country',
      residentialStateInvalid: 'Invalid residential address State',
      residentialProvinceInvalid: 'Invalid residential address province',
      residentialZipcodeInvalid: 'Invalid residential address zipcode',
      periodsOfStayInvalid: 'periods of stay must be in array',
      requiredQuestionnaireId: 'Questionnaire id is required',
      questionnaireIdNotExists: 'Questionnaire id does not exists',
      questionnaireIdInvalid: 'Questionnaire id is invalid',
      requiredImmigrationCaseId: 'Immigration case id is required',
      immigrationCaseIdNotExists: 'Immigration case id does not exists',
      immigrationCaseIdInvalid: 'Immigration case id is invalid'
    },
    lca: {
      wageLevelRequired: 'Wage Level is required',
      wageLevelInvalid: 'Wage Level is Invalid',
      isFileSubmittedRequired: 'Is file submiited required',
      isFileSubmittedInvalid: 'Is file submiited is invalid',
      lcaNumberRequired: 'LCA Number is Required',
      lcaNumberInvalid: 'LCA Number is Invalid',
      clientNameRequired: 'Client Name is Required',
      clientNameInvalid: 'Client Name is Invalid',
      clientLocationRequired: 'Client Location is Required',
      clientLocationInvalid: 'Client Location is Invalid',
      remoteLocationRequired: 'Remote Location is Required',
      remoteLocationInvalid: 'Remote Location is Invalid',
      certificateDateRequired: 'Certified Date is Required',
      certificateDateInvalid: 'Certified Date is Invalid',
      petitionIdRequired: 'Petition ID Required',
      petitionIdInvalid: 'Petition ID Invalid',
      petitionIdNotExists: 'Petition ID Not Exists',
      lcaIdRequired: 'LCA ID Required',
      lcaIdInvalid: 'LCA ID is Invalid',
      lcaIdNotExists: "LCA ID is Not Exists",
      statusIDReQuired: 'Status ID is Required',
      statusIDInvalid: "Status ID is Invalid",
      PositionRequired: 'Positions is Required',
      PositionInvalid: 'Positions is Invalid',
      SOCTitleRequired: 'SOC Title is Required',
      SOCCodeRequired: ' SOC Code is Requrired',
      SOCCodeInvalid: 'SOC Code is Invalid',
      PositionFulltimeRequired: 'Position Fulltime is Required',
      PositionFulltimeInvalid: 'Position Fulltime is Invalid',
      BusinessNameRequired: 'Business Name is Required',
      BusinessNameInvalid: 'Business Name is Inavlid',
      TradeNameRequired: 'Trade Name is Required',
      TradeNameInvalid: 'Trade Name is Invalid',
      FEINRequired: 'FEIN Number is Required',
      FEINInvalid: 'FEIN Number is Invalid',
      NAICSRequired: 'NAICS Code is Required',
      NAICSInvalid: 'NAICS Code is Invalid',
      IsRepresentedAttorneyOrAgentRequired: 'Is Represented Attorney Or Agent is Required',
      IsRepresentedAttorneyOrAgentInvalid: 'Is Represented Attorney Or Agent is Invalid',
      ProvinceRequired: 'Province is Required',
      ProvinceInvalid: 'Province is Invalid',
      LawFrimNameRequired: 'Law Frim Name is Required',
      LawFrimNameInvalid: 'Law Frim Name is Inavlid',
      StateBarNumbarRequired: 'State Bar Number is Required',
      StateBarNumberInvalid: 'State Bar Number is Invalid',
      AttorneyStateIDRequired: 'Attorney State Id is Required',
      AttorneyStateIdInvalid: 'Attorney State Id is Invalid',
      AttorneyCourtNameRequired: 'Attorney Court Name is Required',
      AttorneyCourtNameInvalid: 'Attorney Court Name is Invalid',
      LaborConditionStatementsRequired: 'Labor Condition Statements is Required',
      LaborConditionStatementsInvalid: 'Labor Condition Statements is Invalid',
      H1BDependentRequired: 'H1B Dependent is Required',
      H1BDependentInvalid: 'H1B Dependent is Invalid',
      WillfulViolaterRequired: 'Willfull Violator is Required',
      WillfullViolatorInvalid: 'Willfull Violator is Invalid',
      PublicDisclosureAtRequired: 'Public Disclosure At is Required',
      PublicDisclosureAtInvalid: 'Public Disclosure At is Invalid',
      PublicDisclosureAtShouldBe: 'Public Disclosure At Should be 1 or 2',
      DesignatedOfficialTitleRequired: 'Designated Official Title is Required',
      DesignatedOfficialTitleInvalid: 'Designated Official Title is Invalid',
      NoOfWorkersRequired: 'No. of Workers is Required',
      NoOfWorkersInvalid: 'No. of Workers is Invalid',
      PrevailingWageRequired: 'Source Prevailing Wage is Required',
      PrevailingWageInvalid: 'Source Prevailing Wage is Invalid',
      IsSecondaryEntityRequired: 'Is Secondary Entity is Required',
      IsSecondaryEntityInvalid: 'Is Secondary Entity is Invalid',
      secondaryBusinessNameRequired: 'Is Secondary Business Name is Required',
      secondaryBusinessNameInvalid: 'Secondary Business Name is invalid',
      WageRateFromRequired: 'Wage Rate From is Required',
      WageRateFromInvalid: 'Wage Rate From is Invalid',
      WageRateToRequired: 'Wage Rate To is Required',
      WageRateToInvalid: 'Wage Rate To is Invalid',
      WageRateTypeRequired: 'Wage Rate Type is Required',
      WageRateTypeInvalid: 'Wage Rate Type is Invalid',
      PrevailingWageRateTypeRequired: 'Prevailing Wage Rate Type is Required',
      PrevailingWageRateTypeInvalid: 'Prevailing Wage Rate Type is Invalid',
      PrevailingWageRateRequired: 'Prevailing Wage Rate is Required',
      PrevailingWageRateInvalid: 'Prevailing Wage Rate is Invalid',
      submittedDateRequired: 'Submitted Date is Required',
      subMittedDateInvalid: 'Submitted Date is Invalid',
      isSubmittedRequired: 'Is Submitted is Required',
      isSubmittedInvalid: "Is Submitted is Invalid"
    },
    immigrationIndex: {
      requiredEmployeeId: 'Employee id is required',
      employeeIdNotExists: 'Employee id does not exists',
      employeeAlreadyActiveCase: 'Employee already have a active immigration',
      employeeIdInvalid: 'Employee id is invalid',
      requiredCaseTypeId: 'Case type id is required',
      caseTypeIdNotExists: 'Case type id does not exists',
      caseTypeIdInvalid: 'Case type id is invalid',
      requiredFillingTypeId: 'Filling type id is required',
      fillingTypeIdNotExists: 'Filling type id does not exists',
      fillingTypeIdInvalid: 'Filling type id is invalid',
      IdNotExists: 'Id does not exists',
      requiredImmigrationCaseId: 'Immigration case id is required',
      immigrationCaseIdNotExists: 'Immigration case id does not exists',
      immigrationCaseIdInvalid: 'Immigration case id is invalid',
      requiredImmigrationCaseDocumentId: 'Immigration case document id is required',
      immigrationCaseDocumentIdNotExists: 'Immigration case document id does not exists',
      immigrationCaseDocumentIdInvalid: 'Immigration case document id is invalid',
      requiredReferrableId: 'Referrable id is required',
      referrableIdIdNotExists: 'Referrable id does not exists',
      referrableIdInvalid: 'Referrable id is invalid',
      requiredDocumentTypeId: 'Document type id is required',
      documentTypeIdNotExists: 'Document type id does not exists',
      DocumentTypeIdInvalid: 'Document type id is invalid',
      requiredPremiumCaseId: 'Premium case id is required',
      rfaIdRequired: "RFA Id Required",
      rfaIdInvalid: "RFA Id Invalid",
      rfaIdNotExists: "RFA Id Not Exists",
      premiumCaseIdNotExists: 'Premium case id does not exists',
      premiumCaseIdInvalid: 'Premium case id is invalid',
      documentIdRequired: 'Document Id is required',
      documentIdInvalid: 'Document id is Invalid',
      documentIdDoesNotExist: 'Document id does not exists',
      rfaIdRequired: 'Rfa Id is required',
      rfaIdInvalid: 'Rfa id is Invalid',
      rfaIdDoesNotExist: 'Rfa id does not exists',
      referenceNumberInvalid: 'Reference number invalid',
      remarksInvalid: 'Reference number invalid'


      // firstNameRequired: 'First Name Required',
      // firstNameInvalid: 'First Name Only Characters with white space are allowed',
      // middleNameRequired: 'Middle Name Required',
      // middleNameInvalid: 'Middle Name Only Characters with white space are allowed',
      // lastNameRequired: 'Last Name Required',
      // lastNameInvalid: 'Last Name Only Characters with white space are allowed',
      // invalidDob: 'Invalid DOB',
      // requiredDob: 'DOB Required',
      // dateOfJoiningRequired: 'Data of joining required',
      // dateOfJoiningInvalid: 'Invalid Date Of joining',
      // ssnRequired: 'SSN Required',
      // ssnInvalid: 'SSN format Invalid',
      // ssnAlreadyExists: 'SSN already exists',
      // alienRegistrationRequired: 'Alien Registration NUmber Required',
      // alienRegistrationInvalid: 'Alien Registration NUmber Invalid',
      // countryIdRequired: 'Country Id Required',
      // countryIdInvalid: 'Invalid Country Id',
      // countryIdNotExists: 'Country Id does not Exists',
      // provinceRequired: 'province Required',
      // provinceInvalid: 'Invalid province',
      // citizenshipCountryRequired: 'citizenship country Required',
      // citizenshipCountryInvalid: 'Invalid citizenship country',
      // citizenshipCountryNotExists: 'citizenship country Not Exists',
      // isUsResidentRequired: 'is us Resident Required',
      // isUsResidentInvalid: 'Invalid is us Resident',
      // lastArrivalDateRequired: 'last arrival date is required',
      // invalidlastArrivalformat: 'last arrival date format should be YYYY-MM-DD',
      // invalidlastArrival: 'last arrival date should be before today',
      // i94Number: 'i94 Number Required',
      // i94NumberInvalid: 'Invalid i94 Number',
      // i94NumberAlreadyExists: 'i94 Number already exists',
      // passportNumber: 'passport Number Required',
      // passportNumberInvalid: 'Invalid passport Number',
      // passportNumberAlreadyExists: 'passport Number already exists',
      // passportIssueDateInvalid: 'Invalid passport issue date',
      // passportIssueDateRequired: 'passport issue date required',
      // passportExpiryDateInvalid: 'Invalid passport expiry date',
      // passportExpiryDateRequired: 'passport expiry date required',
      // nonImmigrantStatusRequired: 'non immigrant status Required',
      // nonImmigrantStatusInvalid: 'Invalid non immigrant status',
      // nonImmigrantStatusExpiryRequired: 'non immigrant status Expiry date Required',
      // nonImmigrantStatusExpiryInvalid: 'Invalid non immigrant status Expiry date',
      // sevisNumber: 'sevis Number Required',
      // sevisNumberInvalid: 'Invalid sevis Number',
      // employmentAuthorizationNumber: 'employment Authorization Number Required',
      // employmentAuthorizationNumberNumberInvalid: 'Invalid employment Authorization Number',
      // clientNameRequired: 'client name Required',
      // clientNameInvalid: 'Invalid client name',
      // clientNameNotExists: 'client name does not exists',
      // jobTitleRequired: 'job title Required',
      // jobTitleInvalid: 'Invalid job title',
      // daytimePhoneNumberRequired: 'Day time phone number Required',
      // daytimePhoneNumberInvalid: 'Invalid Day time phone number ',
      // mobileNumberRequired: 'mobile number Required',
      // mobileNumberInvalid: 'Invalid mobile number',
      // emailIdRequired: 'email Id Required',
      // emailIdInvalid: 'Invalid email Id',
      // institutionNameRequired: 'institution name Required',
      // institutionNameInvalid: 'Invalid institution name',
      // degreeNameRequired: 'degree name Required',
      // degreeNameInvalid: 'Invalid degree name',
      // dateOfDegreeAwardedRequired: 'date of degree awarded Required',
      // dateOfDegreeAwardedInvalid: 'Invalid date of degree awarded',
      // addressOfInstitutionRequired: 'address of institution Required',
      // addressOfInstitutionInvalid: 'Invalid address of institution',
      // jobDutiesRequired: 'job duties Required',
      // jobDutiesInvalid: 'Invalid job duties',
      // reRequestReasonRequired: 're request reason Required',
      // reRequestReasonInvalid: 'Invalid jre request reason',
      // foreignStreetAddressInvalid: 'Invalid foreign street address',
      // foreignApartmentAddressInvalid: 'Invalid foreign apartment address',
      // foreigncityInvalid: 'Invalid foreign address city',
      // foreignCountryInvalid: 'Invalid foreign address country',
      // foreignStateInvalid: 'Invalid foreign address State',
      // foreignProvinceInvalid: 'Invalid foreign address province',
      // foreignZipcodeInvalid: 'Invalid foreign address zipcode',
      // employmentStreetAddressInvalid: 'Invalid employment street address',
      // employmentApartmentAddressInvalid: 'Invalid employment apartment address',
      // employmentcityInvalid: 'Invalid employment address city',
      // employmentCountryInvalid: 'Invalid employment address country',
      // employmentStateInvalid: 'Invalid employment address State',
      // employmentProvinceInvalid: 'Invalid employment address province',
      // employmentZipcodeInvalid: 'Invalid employment address zipcode',
      // residentialStreetAddressInvalid: 'Invalid residential street address',
      // residentialApartmentAddressInvalid: 'Invalid residential apartment address',
      // residentialcityInvalid: 'Invalid residential address city',
      // residentialCountryInvalid: 'Invalid residential address country',
      // residentialStateInvalid: 'Invalid residential address State',
      // residentialProvinceInvalid: 'Invalid residential address province',
      // residentialZipcodeInvalid: 'Invalid residential address zipcode',
      // periodsOfStayInvalid: 'periods of stay must be in array',
      // requiredQuestionnaireId: 'Questionnaire id is required',    
      // questionnaireIdNotExists: 'Questionnaire id does not exists',
      // questionnaireIdInvalid: 'Questionnaire id is invalid',
    },
    documents: {
      referrableTypeIdRequired: "Referrable Type ID Required",
      referrableTypeNameRequired: "Referrable Type Name Required",
      referrableTypeNameInvalid: "Referrrable Type Name Invalid",
      referrableTypeInvalid: "Referrable Type ID Invalid",
      DeletedDocumentInvalid: "Document Deleted ID Invalid",
      immigrationDocumentTypeIdRequired: "Immigration Document Type Required",
      immigrationDocumentTypeIdInvalid: "Immigration Document Type Invalid",
      immigrationDocumentTypeIdNotExists: "Immigration Document Type Not Exists",
      immigrationCaseDocumentIdIdInvalid: "Immigration Case Document ID Invalid",
      immigrationCaseDocumentIdIdNotExists: "Immigration Case Document ID Not Exists",
      requestDocumentRequired: "Request Document Is Required",
      requestDocumentInvalid: "Request Document Is Invalid",
      mergeOrderInvalid: "Marge Order Invalid",
    },
    cheque: {
      petitionIdRequired: 'Petition ID is required.',
      InvalidPetitionId: 'Invalid Petition ID.',
      petitionIdNotExists: 'Petition ID does not Exists.',
      petitionTypeRequired: 'Petition Type is required.',
      InvalidPetitionType: 'Petition type must be a string.',
      chequeDateRequired: 'Cheque Date is reqeired.',
      InvalidChequeDate: 'Invalid Cheque Date formate.',
      chequeNumberRequired: 'Cheque Number is required.',
      chequeNumberInvalid: 'Invalid Cheque Number.',
      chequeAmountRequired: 'Cheque Amount is required',
      chequeAmountInvalid: 'Invalid Cheque Amount',
      requiredChequeId: 'Cheque ID is required.',
      chequeIdInvalid: 'Invalid Cheque ID.',
      chequeIdNotExists: 'Check ID does not exist.'
    },
    dispatch: {
      requiredDispatchId: 'Dispatch ID is required.',
      dispatchIdInvalid: 'Invalid Diapatch ID.',
      dispatchIdNotExists: 'Dispatch ID does not  exist.'
    },
    notice: {
      receiptNumberRequired: "Receipt Number is Required.",
      receiptNumberInvalid: "Invalid Receipt Number."
    },
    decision: {
      remarksRequired: 'Remarks are Required.',
      remarksInvalid: 'Invalid Remarks.',
      decisionRequired: 'Decision are Required.',
      decisionInvalid: 'Invalid Decision.',
      startDateRequired: 'Start Date is required.',
      InvalidStartDate: 'Invalid Start Date',
      endDateRequired: 'End Date is required.',
      InvalidEndDate: 'Invalid End Date.',
      receiptNumberRequired: 'Receipt number Required',
      InvalidReceiptNumber: 'Invalid Receipt number'
    }
  },
  activity: {
    referrableIdRequired: 'Referrable Id is Required',
    referrableIdInvalid: 'Referrable Id is Invalid',
    referrableTypeRequired: 'Referrable Type is Required',
    referrableTypeInvalid: 'Referrable Type is Invalid'

  },

  chatBot: {
    questionRequired: 'Question Required'
  }
};
